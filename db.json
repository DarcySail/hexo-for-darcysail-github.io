{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-fox.ico","path":"images/favicon-16x16-fox.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-48x48-fox.ico","path":"images/favicon-48x48-fox.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/custom/custom.js","path":"js/src/custom/custom.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1524834726000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1524834726000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1524834726000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1524834726000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1524834726000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1524834726000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1524834726000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1524834726000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1524834726000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1524834726000},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1524834726000},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1524834726000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1524834726000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1524834726000},{"_id":"themes/next/_config.yml","hash":"d38c091b9fd09d00bd9418e666e7961399b3122a","modified":1526023148000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1524834726000},{"_id":"source/_posts/Atypical-solution-for-Vim-Chinese-garbled.md","hash":"d09072ccc14de93756209a2f7a337b3f0981f477","modified":1534819334830},{"_id":"source/_posts/Build-OpenVpn-Server-on-53-port-the-easiest-way.md","hash":"0cdba7906ed15d40d6894c6fa7bdbef5df24f94f","modified":1531146749000},{"_id":"source/_posts/From-Impressionism-to-Steampunk.md","hash":"505987ea94cd527baec08d50882fec36ae3a83f2","modified":1552898855205},{"_id":"source/_posts/How-to-crack-synergy.md","hash":"64aaaf6a3381614b091bd247b4a66e74ed44e9d4","modified":1552898878595},{"_id":"source/_posts/Inside-Docker-images-and-layers.md","hash":"54f648b017e4f3ac8a729f63df096a7000076b40","modified":1552898778631},{"_id":"source/_posts/QEMU-GSoC-2018-proposal.md","hash":"8309bc447de1fa204b8637bbac8641f4a1b67475","modified":1552898911338},{"_id":"source/_posts/Share-my-dotfile.md","hash":"59ea8bada6e75709058440fc1bd6e26b57b74d12","modified":1544338545060},{"_id":"source/_posts/What-is-data-flow-analysis.md","hash":"3c7a062a1f022c31c777a41c61fc5a48bb36bc1a","modified":1552899039995},{"_id":"source/_posts/qemu-internals-overall-architecture.md","hash":"c325d92fb931e6ef40a74c3536302e2aaad9598a","modified":1552898945412},{"_id":"source/_posts/record-lfs-solution-you-cant-find-in-chinese-internet.md","hash":"224456090ba63900b9cadc3ecea1f8af2e7a9544","modified":1534321354000},{"_id":"source/_posts/文采.md","hash":"789b31ce835bdec6b6d29009955a5b11122f30b1","modified":1554968520463},{"_id":"source/_posts/record_LLVM_compile_error_solution.md","hash":"baa6ce81a9a618baf96d5596360b3ee06398eb75","modified":1531448821000},{"_id":"source/_posts/tmux-close-panal-without-confirm.md","hash":"7ae7e64be1c24f0d0f026bd3bd49f6dddadc22eb","modified":1552899001888},{"_id":"source/_posts/understanding-qemu-devices.md","hash":"2d79d6045769473c63febe3cd94983d95b6c1008","modified":1524890190000},{"_id":"source/_posts/时间顺序.md","hash":"eb23062db88aa02aa5b2504e31addb6ef03dfa5f","modified":1551923228078},{"_id":"source/_posts/杂念.md","hash":"63795a2ed2d7f5aef25a6487de645fd3e023976a","modified":1551923256198},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1524834726000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"0c8610906a46405d3715a4ce3f27ec3a0374fa9b","modified":1526023148000},{"_id":"themes/next/.git/config","hash":"7db07c3ef1482b1c6c4e592313e4bfc0a1d28009","modified":1524902158000},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"17614ee21b4a44e325b2546d3993159bfca1224c","modified":1524902102000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"31a0d29f3b41e2d2fe6d37a1b7cae11d26277d92","modified":1526023148000},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1524834726000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1524834708000},{"_id":"source/tags/index.md","hash":"91afb4a2d6872ad40aae19bfe54f90d7cc1286d4","modified":1524892715000},{"_id":"source/_posts/记忆碎片.md","hash":"f162aa59d402de2ec49ac35eee18f5d2c85ef7ed","modified":1551923274397},{"_id":"themes/next/.git/index","hash":"d39fcd82b09073ab9fe64b15827ed7fa3d68af74","modified":1534484823532},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1524834726000},{"_id":"source/about/index.md","hash":"4513d406a54475a4c18e17e0a48f800cf2d4f9ff","modified":1527753844000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1524834726000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1524834726000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1524834726000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1524834726000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1524834726000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1524834726000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1524834726000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1524834726000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1524834726000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1524834726000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1524834726000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1524834726000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1524834726000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1524834726000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1524834726000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1524834726000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1524834726000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1524834726000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1524834726000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1524834726000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1524834726000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1524834726000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1524834726000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1524834726000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1524834726000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1524834726000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1524834726000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1524834726000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1524834726000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1524834726000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1524834726000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1524834726000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"source/_posts/Inside-Docker-images-and-layers/Content_Addressable_Image.png","hash":"b57c7f3e2155dc56dc353f27114f5684fd0571d5","modified":1547023770871},{"_id":"source/_posts/How-to-crack-synergy/synergy_active_window.png","hash":"496e48ba5520c8c683c4be07b295a6d6f9c3a578","modified":1527753844000},{"_id":"source/_posts/Inside-Docker-images-and-layers/Historical_Image.png","hash":"5f08728deb2bc0f2d838979aa17211227f5934f5","modified":1547023750841},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1524834708000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1524834708000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1524834708000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1524834708000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1524834708000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1524834708000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1524834708000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1524834708000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1524834708000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1524834708000},{"_id":"themes/next/.git/logs/HEAD","hash":"bc44f277e59448ccdfe0ab478bb6d2f685f75d6a","modified":1526023148000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1524834726000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1524834726000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1524834726000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1524834726000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1524834726000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1524834726000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1524834726000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1524834726000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1524834726000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1524834726000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1524834726000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1524834726000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1524834726000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1524834726000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1524834726000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1524834726000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1524834726000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1524834726000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1524895777000},{"_id":"themes/next/layout/_partials/head.swig","hash":"4e820f78fcbd625daaf2779550281cc711beb9e1","modified":1524896444000},{"_id":"themes/next/layout/_partials/header.swig","hash":"598682379b0c387bc20b9339240c059a6880aa5e","modified":1524899725000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1524834726000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1524834726000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1524834726000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1524834726000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"fa7afb9107cab7b85db1de66fea483296ef9fae8","modified":1524899116000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1524834726000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1524834726000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1524834726000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1524834726000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1524834726000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1524834726000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1524834726000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1524834726000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1524834726000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1524834726000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1524834726000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1524834726000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1524834726000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1524834726000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1524834726000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1524834726000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1524834726000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1524834726000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1524834726000},{"_id":"themes/next/source/images/favicon-16x16-fox.ico","hash":"aa04012b8323bdd855e37554df7293b5ef51c17e","modified":1526023148000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1524834726000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1524834726000},{"_id":"themes/next/source/images/favicon-48x48-fox.ico","hash":"5d236e60a9e2d223add2b2399ea928021f9903e1","modified":1526023148000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524834726000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1524834726000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1524834726000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1524834726000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1524834726000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1524834726000},{"_id":"source/_posts/From-Impressionism-to-Steampunk/TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg","hash":"68e601c5654008f19f189a2da41c31a3879da3aa","modified":1527163123000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524834726000},{"_id":"themes/next/.git/objects/0f/beb472a3fa5f77d4e598494374f766e7494c2d","hash":"3dad9400ac27c5cbbb5a52b3de01adbec60d8f07","modified":1526022893000},{"_id":"themes/next/.git/objects/7f/85f4cfecbdb2807961dce98ae3d220fa197d1e","hash":"170b037748fdad6e7a4bea4df7c419d912819026","modified":1524901817000},{"_id":"themes/next/.git/objects/24/fadbf303463396f214a88fea86eee5499d1975","hash":"3f934eee23f17b88a44531e3670780255928c024","modified":1524901817000},{"_id":"themes/next/.git/objects/15/eddc2f863324e5c11545839daa859d533cbff0","hash":"52b5be92e4a4467db5365d470621dfd0a7e9405a","modified":1524901817000},{"_id":"themes/next/.git/objects/48/b3d09058aaa2a7ed85c7eeefc247994cda525d","hash":"c68c51211caa53f694be19719044484271f99263","modified":1526022893000},{"_id":"themes/next/.git/objects/64/6be50cef8c0490b94d9d23da7d0eed59ce71f1","hash":"895659a3f918f3d68afb59970a08802a17e6fd15","modified":1526022893000},{"_id":"themes/next/.git/objects/3c/6e1265d422d74271e548f97c15c56952150739","hash":"81d4a11b642ce7a18b64aaf5063fc1513039175a","modified":1524901810000},{"_id":"themes/next/.git/objects/23/3b093c14c0ae116f43ec065456da554160c0ad","hash":"825fd1b679124aa146f8b45847921ac379c5aa2c","modified":1524901817000},{"_id":"themes/next/.git/objects/8f/889b7934c62df169b285afbb9eb85c1a029952","hash":"701e9fc5546b5656248c06ac72aab9689c0148ab","modified":1524901817000},{"_id":"themes/next/.git/objects/89/290f06afbf6f12717cfc5df6ed8c4fe70372fa","hash":"433e1078c995e2719c2ff9aed1c19a880e0699ec","modified":1524901810000},{"_id":"themes/next/.git/objects/8f/098848dfabea9392adda2b23b92459b5b0f779","hash":"40d06ba66c485c93b308534dc364c5976ae68ae7","modified":1524901817000},{"_id":"themes/next/.git/objects/8b/fd68f130ec227f7264483111bec62d631c385e","hash":"f38197aedad6d9824d915b01b277bc511de45132","modified":1524901817000},{"_id":"themes/next/.git/objects/a1/bb1d25a03978c60f874f6201a706dc2dd99b37","hash":"c739ea63fe4aa51af1a17adc40a84671633d8ce2","modified":1524901817000},{"_id":"themes/next/.git/objects/b7/b7c6f981c4f1ee4f5c81138d3faa7ee6a0650c","hash":"c639c1dccc985184d9124db52e781965ab29edd3","modified":1524901810000},{"_id":"themes/next/.git/objects/a5/b856724b13b82abb5b5f931078220ded569ba3","hash":"91a62b7e1384ee9a4464262f4493a1c469d948d9","modified":1526022893000},{"_id":"themes/next/.git/objects/a8/84a467540b9ac68ee1e2f977cdd02829563695","hash":"549b39713e24c6f6ae8a112726296b2b222b523c","modified":1526022893000},{"_id":"themes/next/.git/objects/c3/b77fed04c3b0286eaeffd13fd332bad611f652","hash":"b1c7830b94441ac4dc28db6310d68e0ed7664a56","modified":1524902102000},{"_id":"themes/next/.git/objects/e0/74e49dcb589dc452cb9e0034ef3d50d7f74002","hash":"187275a7ca03a4f85954f254fb9311f3c2d95aef","modified":1526022893000},{"_id":"themes/next/.git/objects/df/87eaa7c6a1504a9699e6ceda8f376a39d92ca8","hash":"76ec5f57454a63f3e445eef92f7f151148653d8c","modified":1524901817000},{"_id":"themes/next/.git/objects/ee/d1c58652e8a5ce04a1b2d4d087eeb484179232","hash":"47df9c5a4470045a1448d8c7884d22a21d80446b","modified":1524901810000},{"_id":"themes/next/.git/objects/ea/994f2fc7274b3680e5c4a06d1f4e44a505ea7a","hash":"cd8d1dcd03d0a6f54473fe5aa316ff2389d673c1","modified":1524901810000},{"_id":"themes/next/.git/objects/fc/945d0bd56734ea4d4763512e56bd62832ee265","hash":"b29e86f8753805f4975e6f23187592530aa11c95","modified":1524901810000},{"_id":"themes/next/.git/objects/fe/dc87019f81bd492534c51e5564df2f25d1c7a2","hash":"715b93f3c6e312b733992d21385ba2c0403e53d9","modified":1524901817000},{"_id":"themes/next/.git/refs/heads/master","hash":"9f99b7cdefc2f554224383a2510da1d4d9ef16b5","modified":1526023148000},{"_id":"themes/next/.git/objects/f7/a42bedb02cea605d0daba0a8ae0b5ba8d6589d","hash":"e54bbb46f78a9b4f779fd3461ede6238e0b6415d","modified":1526022893000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1524834726000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1524834726000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1524834726000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1524834726000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1524834726000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1524834726000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1524834726000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1524834726000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1524834726000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1524834726000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1524834726000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1524834726000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"db1fa3541c5074b45892262488f29f4bcea65a0c","modified":1524899469000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1524834726000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1524834726000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1524834726000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1524834726000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1524834726000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1524834726000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1524834726000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1524834726000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1524834726000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1524834726000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1524834726000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1524834726000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1524834726000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1524834726000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1524834726000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1524834726000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1524834726000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1524834726000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1524834726000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1524834726000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1524834726000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1524834726000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1524834726000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1524834726000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1524834726000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1524834726000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1524834726000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1524834726000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1524834726000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1524834726000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1524834726000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1524834726000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1524834726000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1524834726000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1524834726000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1524834726000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1524834726000},{"_id":"source/_posts/From-Impressionism-to-Steampunk/La_Gare_Saint-Lazare_-_Claude_Monet.jpg","hash":"16b4b178395fe052a68f39119f5e5a437c53a52a","modified":1527147559000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"bc44f277e59448ccdfe0ab478bb6d2f685f75d6a","modified":1526023148000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1524834726000},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"9f99b7cdefc2f554224383a2510da1d4d9ef16b5","modified":1526022893000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1524834726000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1524834726000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1524834726000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1524834726000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1524834726000},{"_id":"themes/next/source/js/src/custom/custom.js","hash":"09b69012e4d6a208f17f5194f9f79cb5a5441bcc","modified":1524899080000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1524834726000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1524834726000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1524834726000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1524834726000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1524834726000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"d9b76b1f1a8baf52cc7848999b1d1c74acbc5fdd","modified":1524834726000},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"803377f1665d5c82a6526503b9cc18de11e8cf7b","modified":1526022893000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1524834726000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1524834726000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1524834726000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1524834726000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1524834726000},{"_id":"themes/next/.git/objects/pack/pack-d258fa1f2c5e7883ae4ad56137897435c083f34c.idx","hash":"3bf4e7a7818532e249eb3076a1cf03e01e1c58ae","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1524834726000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1524834726000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1524834726000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1524834726000},{"_id":"source/_posts/From-Impressionism-to-Steampunk/The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg","hash":"fefa42c5a3473c5ec4193d7830205a472bcf5f65","modified":1527147559000},{"_id":"source/_posts/From-Impressionism-to-Steampunk/Rain_Steam_and_Speed_the_Great_Western_Railway.jpg","hash":"52d53603dd4a0baaa7fe496dc85e9c622ef526ab","modified":1527147559000},{"_id":"themes/next/.git/objects/pack/pack-d258fa1f2c5e7883ae4ad56137897435c083f34c.pack","hash":"942c4f76bc16782c1ca1f7d358236acb6111014c","modified":1524834726000},{"_id":"public/search.xml","hash":"2aafc2effdc6afd134a4e585eb1c581095abf1a8","modified":1554968543457},{"_id":"public/tags/index.html","hash":"632b6bd9820aa9370c6bb15f7dfbcda864eec3ef","modified":1554967844471},{"_id":"public/about/index.html","hash":"8c47d157906a353dc1c5f48caf08798f457f7174","modified":1554967844471},{"_id":"public/2019/03/07/What-is-data-flow-analysis/index.html","hash":"fed0bf08f58bb663ff55d75f3502244a9a0f7704","modified":1554967844471},{"_id":"public/2019/01/29/杂念/index.html","hash":"b976cdb3e47c3c4da603e6587f8d0b1ec7e432f6","modified":1554967844471},{"_id":"public/2019/01/09/Inside-Docker-images-and-layers/index.html","hash":"386f6a278fe2c68459d1506930ad13594ae0e972","modified":1554967844471},{"_id":"public/2018/08/20/Atypical-solution-for-Vim-Chinese-garbled/index.html","hash":"c3fc3b818f31977ff93b6da22280448b6efa21f0","modified":1554967844472},{"_id":"public/2018/08/15/record-lfs-solution-you-cant-find-in-chinese-internet/index.html","hash":"b0b4933eb9e5d0a855c881bf13bc80ea1db60ace","modified":1554967844472},{"_id":"public/2018/07/09/record_LLVM_compile_error_solution/index.html","hash":"dd2a9a2b43a7791287911bbaf931a3d7779f0c56","modified":1554967844472},{"_id":"public/2018/06/06/Build-OpenVpn-Server-on-53-port-the-easiest-way/index.html","hash":"c13fdc1f20e7304390cc91880fac4320c63a4452","modified":1554967844472},{"_id":"public/2018/05/31/Share-my-dotfile/index.html","hash":"fdd8c64915c2857b21c2bc4fba865e968f795355","modified":1554967844472},{"_id":"public/2018/05/31/How-to-crack-synergy/index.html","hash":"4fed41f452cfc6cdca98b1faf2ed4a8eaa5c2410","modified":1554967844472},{"_id":"public/2018/05/24/From-Impressionism-to-Steampunk/index.html","hash":"c0de88074d9c93324f04757f904777004006cfff","modified":1554967844472},{"_id":"public/2018/05/10/tmux-close-panal-without-confirm/index.html","hash":"a3fe215e1eb84b1d345ea713bdd27bf47a607dfa","modified":1554967844472},{"_id":"public/2018/04/27/QEMU-GSoC-2018-proposal/index.html","hash":"64daf50bc53e3c70a7110f68a62028eac1090424","modified":1554967844472},{"_id":"public/2018/04/22/qemu-internals-overall-architecture/index.html","hash":"3361cfeff4366c2de7f9d3b653053c4f83652377","modified":1554967844472},{"_id":"public/2018/04/22/understanding-qemu-devices/index.html","hash":"e7c5567ce6171e0018fac11d18b48f558167c76f","modified":1554967844472},{"_id":"public/2016/08/29/时间顺序/index.html","hash":"d02f23ae805a990c7195450f851157fa132b0116","modified":1554967844472},{"_id":"public/2012/08/29/记忆碎片/index.html","hash":"83560a3d69fd9cf9526f46c985f254a69f079f8c","modified":1554967844472},{"_id":"public/archives/index.html","hash":"80e9b663f7279881f50fbbed33cb4bff62a15813","modified":1554967844472},{"_id":"public/archives/page/2/index.html","hash":"0eb5d10b4f5ecfd51d2b78c1ee7a9590f70aafed","modified":1554967844473},{"_id":"public/archives/2012/index.html","hash":"cd46f16aff3972e67eada5b47d9029b9d6782923","modified":1554967844473},{"_id":"public/archives/2012/08/index.html","hash":"6a31d09c5afc4d99730817a027f7dd61e7d08355","modified":1554967844473},{"_id":"public/archives/2016/index.html","hash":"190ce060ee6a820e8f0457f69d2a0139c5dea850","modified":1554967844473},{"_id":"public/archives/2016/08/index.html","hash":"ae4c337c528e040990b9677b215e0b2c0e8cb3a9","modified":1554967844473},{"_id":"public/archives/2018/index.html","hash":"555b6c688bf32c69aa36fa15180b5dee09282bfe","modified":1554967844473},{"_id":"public/archives/2018/page/2/index.html","hash":"e8f298837489456a3bc9f9395d38ddbc99c4e2ba","modified":1554967844473},{"_id":"public/archives/2018/04/index.html","hash":"20dbbb07cbe4050493af6b4693ab9442b9c9f185","modified":1554967844473},{"_id":"public/archives/2018/05/index.html","hash":"35b05c8bf779e1d2422f25546dd8208b5473268c","modified":1554967844473},{"_id":"public/archives/2018/06/index.html","hash":"d7676f47f3e0e8f1f739c8452032c66f9e4a2cf2","modified":1554967844473},{"_id":"public/archives/2018/07/index.html","hash":"acefd61e979e9c09d6248e130188851ecb778c24","modified":1554967844473},{"_id":"public/archives/2018/08/index.html","hash":"ce45fc3db4308619d3ed70654d1377c9a6adeccb","modified":1554967844473},{"_id":"public/archives/2019/index.html","hash":"4a89b95e9b011c386548be0831433f909662791e","modified":1554967844473},{"_id":"public/archives/2019/01/index.html","hash":"ebcd04fb0066cfcba51ab6ff91f2b47af0c505cd","modified":1554967844473},{"_id":"public/archives/2019/03/index.html","hash":"80dd32531b44e2e6ac53d1a6e59eba069d382844","modified":1554967844473},{"_id":"public/index.html","hash":"cdf5bd6f26fb3f9add4f3e0654f1d120bff6edab","modified":1554967844474},{"_id":"public/page/2/index.html","hash":"ac0b551a57fb35f6b99b504ae0c7577b4b0d0a3e","modified":1554967844474},{"_id":"public/tags/Vim/index.html","hash":"f26d0752d40102f782c93f0564cfb1e6cfae8dfb","modified":1554967844474},{"_id":"public/tags/OpenVPN/index.html","hash":"b9d5bb45c9f33b6cbf75057879f8d876da275878","modified":1554967844474},{"_id":"public/tags/crack/index.html","hash":"6906ac74ceb2591151e6af6f21540d75ba7cee72","modified":1554967844474},{"_id":"public/tags/tips/index.html","hash":"3724d0439611e1ec92e5086299c981136321cf3d","modified":1554967844474},{"_id":"public/tags/vim/index.html","hash":"aebb9e9f544e1438f5a02184b6006abcb7c6f1d6","modified":1554967844474},{"_id":"public/tags/zsh/index.html","hash":"2b9a15e002978ba727c43cf10b367e38573ce63c","modified":1554967844474},{"_id":"public/tags/terminal/index.html","hash":"391cbec3f0b859740aca3fd248abc5c52b661d17","modified":1554967844474},{"_id":"public/tags/Linux/index.html","hash":"f7f79ad21d01eb8d42bc0976659b337587308f7f","modified":1554967844474},{"_id":"public/tags/LFS/index.html","hash":"751fdb8d38243a0baeb57184254eb801e0536f39","modified":1554967844474},{"_id":"public/tags/LLVM/index.html","hash":"756595ec1d90272ed5816c9bfa962a14ece33350","modified":1554967844474},{"_id":"public/tags/tmux/index.html","hash":"ec0d1b24d38cc207ca9e0401228a35416785ab37","modified":1554967844474},{"_id":"public/tags/chaos/index.html","hash":"b1b28ed3485f87300738f81b9a4d747a0f0e2281","modified":1554967844474},{"_id":"public/tags/Docker/index.html","hash":"de6442ee4715bf06ec8a96251de6003375b29fca","modified":1554967844474},{"_id":"public/tags/QEMU/index.html","hash":"9303eb3db687c1db98c6a826214511ba2a7fe57a","modified":1554967844474},{"_id":"public/tags/Translation/index.html","hash":"9dc107eb687bb6e648b7fc15ec40c720e5ae4a87","modified":1554967844474},{"_id":"public/tags/art/index.html","hash":"750eebc5e061c0be9e9c7ba58f06e1194d16bd79","modified":1554967844475},{"_id":"public/archives/2019/04/index.html","hash":"32af0cb70dd2eab2cdb6d02a3008433e306029d5","modified":1554967844566},{"_id":"public/2019/04/11/文采/index.html","hash":"fa804f37550864ad820da5fe87007949944c86ba","modified":1554968543485}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2018-04-28T05:14:18.000Z","type":"tags","comments":0,"_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-04-28 13:14:18\ntype: \"tags\"\ncomments: false\n---\n\n\n","updated":"2018-04-28T05:18:35.000Z","path":"tags/index.html","layout":"page","_id":"cjucbl8ed0001b9fsa57pp0r9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About me","date":"2018-04-28T04:28:52.000Z","_content":"\n* __Name:__ SU Hang\n* __IRC nickname:__ darcy\n* __Email:__ `echo \"ZGFyY3lzYWlsQGdtYWlsLmNvbQo=\" | base64 --decode`\n* __Programming languages (fluent):__ C, C++\n* __Open Source Contributions:__\n    participating write a open source technical book about 'OpenResty'\n    https://github.com/moonbingbing/openresty-best-practices\n\n    participating in QEMU Community, use `git log --author=\"Su Hang\"`\n    in QEMU master branch.\n\n    > For more information, search \"su hang\" in QEMU-maillist\n\t> http://lists.nongnu.org/archive/html/qemu-devel/\n* __GitHub URLs:__\n    https://github.com/DarcySail\n\nA heavy VIM user, heavy terminal user, classical sci-fi enthusiast.\n","source":"about/index.md","raw":"---\ntitle: About me\ndate: 2018-04-28 12:28:52\n---\n\n* __Name:__ SU Hang\n* __IRC nickname:__ darcy\n* __Email:__ `echo \"ZGFyY3lzYWlsQGdtYWlsLmNvbQo=\" | base64 --decode`\n* __Programming languages (fluent):__ C, C++\n* __Open Source Contributions:__\n    participating write a open source technical book about 'OpenResty'\n    https://github.com/moonbingbing/openresty-best-practices\n\n    participating in QEMU Community, use `git log --author=\"Su Hang\"`\n    in QEMU master branch.\n\n    > For more information, search \"su hang\" in QEMU-maillist\n\t> http://lists.nongnu.org/archive/html/qemu-devel/\n* __GitHub URLs:__\n    https://github.com/DarcySail\n\nA heavy VIM user, heavy terminal user, classical sci-fi enthusiast.\n","updated":"2018-05-31T08:04:04.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjucbl8eg0003b9fssyqxbyly","content":"<ul>\n<li><strong>Name:</strong> SU Hang</li>\n<li><strong>IRC nickname:</strong> darcy</li>\n<li><strong>Email:</strong> <code>echo &quot;ZGFyY3lzYWlsQGdtYWlsLmNvbQo=&quot; | base64 --decode</code></li>\n<li><strong>Programming languages (fluent):</strong> C, C++</li>\n<li><p><strong>Open Source Contributions:</strong><br>  participating write a open source technical book about ‘OpenResty’<br>  <a href=\"https://github.com/moonbingbing/openresty-best-practices\" target=\"_blank\" rel=\"noopener\">https://github.com/moonbingbing/openresty-best-practices</a></p>\n<p>  participating in QEMU Community, use <code>git log --author=&quot;Su Hang&quot;</code><br>  in QEMU master branch.</p>\n<blockquote>\n<p>For more information, search “su hang” in QEMU-maillist<br><a href=\"http://lists.nongnu.org/archive/html/qemu-devel/\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/</a></p>\n</blockquote>\n</li>\n<li><strong>GitHub URLs:</strong><br>  <a href=\"https://github.com/DarcySail\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail</a></li>\n</ul>\n<p>A heavy VIM user, heavy terminal user, classical sci-fi enthusiast.</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><strong>Name:</strong> SU Hang</li>\n<li><strong>IRC nickname:</strong> darcy</li>\n<li><strong>Email:</strong> <code>echo &quot;ZGFyY3lzYWlsQGdtYWlsLmNvbQo=&quot; | base64 --decode</code></li>\n<li><strong>Programming languages (fluent):</strong> C, C++</li>\n<li><p><strong>Open Source Contributions:</strong><br>  participating write a open source technical book about ‘OpenResty’<br>  <a href=\"https://github.com/moonbingbing/openresty-best-practices\" target=\"_blank\" rel=\"noopener\">https://github.com/moonbingbing/openresty-best-practices</a></p>\n<p>  participating in QEMU Community, use <code>git log --author=&quot;Su Hang&quot;</code><br>  in QEMU master branch.</p>\n<blockquote>\n<p>For more information, search “su hang” in QEMU-maillist<br><a href=\"http://lists.nongnu.org/archive/html/qemu-devel/\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/</a></p>\n</blockquote>\n</li>\n<li><strong>GitHub URLs:</strong><br>  <a href=\"https://github.com/DarcySail\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail</a></li>\n</ul>\n<p>A heavy VIM user, heavy terminal user, classical sci-fi enthusiast.</p>\n"}],"Post":[{"title":"Vim 中文乱码的非典型解决方案","copyright":true,"date":"2018-08-20T06:01:41.000Z","comments":1,"_content":"\n#### TLDR\n1. 在.vimrc 或者你的相应 Vim 配置文件中删去`set binanry`\n2. 根据你打开的文件编码（如何查询文件格式编码，可以使用`enca -L chinese filename`），在 Vim 中输入，譬如`:edit ++enc=gb18030`\n\n#### 正文\n\n前些天从用了一年多了 Linux Mint 转投 Arch Linux 门下，然后在Vim里编辑网络上下载下来的字幕文件时，发现了中文乱码的现象。当时心态有点糟，用了这么久的Vim，居然阴沟翻船。\n我的环境是 Arch + NeoVim，配置文件是从我自己用了很久的没出问题的 .vimrc 拷贝过来的。\n\n尝试了网上种种乱码解决方案无效之后，决定自行解决问题。\n\n<!--more-->\n\n#### Solution 1\n大部分会要求你在 .vimrc中进行如下配置[[1]](#1)：\n```vim\nset encoding=utf-8\nset termencoding=utf-8\nset fileencodings=utf-8,gbk,latin1\n```\n* <span id = \"1\"> [1] https://blog.csdn.net/smstong/article/details/51279810</span>\n\n\n这些配置，我当然是有的……扶额……\n\n经检查发现是 .vimrc中的`set binary`在作祟。输入`:help binary`查看说明：\n> The 'fileencoding' and 'fileencodings' options will not be used, the file is read without conversion.\n\nbinay选项会导致fileencoding 和fileencodings失效，这就是在进行网上大部分的配置之后，仍会失效的原因。\n\n> https://superuser.com/questions/663405/consequences-of-vims-binary-mode\n\n#### Solution 2\n除了取消binary选项之外，也可以在打开的文件中输入如下命令：（具体参数根据文件编码格式而异）\n```\n:edit ++enc=gb18030\n```\n\n> https://blog.csdn.net/cnwzh/article/details/7024427\n\n#### 题外话\n关于我为什么要配置`set binary`选项，请参看stack overflow问答\n[Why do I need vim in binary mode for 'noeol' to work?](https://stackoverflow.com/questions/16222530/why-do-i-need-vim-in-binary-mode-for-noeol-to-work)\n","source":"_posts/Atypical-solution-for-Vim-Chinese-garbled.md","raw":"---\ntitle: Vim 中文乱码的非典型解决方案\ncopyright: true\ndate: 2018-08-20 14:01:41\ntags: [Vim]\ncomments:\n---\n\n#### TLDR\n1. 在.vimrc 或者你的相应 Vim 配置文件中删去`set binanry`\n2. 根据你打开的文件编码（如何查询文件格式编码，可以使用`enca -L chinese filename`），在 Vim 中输入，譬如`:edit ++enc=gb18030`\n\n#### 正文\n\n前些天从用了一年多了 Linux Mint 转投 Arch Linux 门下，然后在Vim里编辑网络上下载下来的字幕文件时，发现了中文乱码的现象。当时心态有点糟，用了这么久的Vim，居然阴沟翻船。\n我的环境是 Arch + NeoVim，配置文件是从我自己用了很久的没出问题的 .vimrc 拷贝过来的。\n\n尝试了网上种种乱码解决方案无效之后，决定自行解决问题。\n\n<!--more-->\n\n#### Solution 1\n大部分会要求你在 .vimrc中进行如下配置[[1]](#1)：\n```vim\nset encoding=utf-8\nset termencoding=utf-8\nset fileencodings=utf-8,gbk,latin1\n```\n* <span id = \"1\"> [1] https://blog.csdn.net/smstong/article/details/51279810</span>\n\n\n这些配置，我当然是有的……扶额……\n\n经检查发现是 .vimrc中的`set binary`在作祟。输入`:help binary`查看说明：\n> The 'fileencoding' and 'fileencodings' options will not be used, the file is read without conversion.\n\nbinay选项会导致fileencoding 和fileencodings失效，这就是在进行网上大部分的配置之后，仍会失效的原因。\n\n> https://superuser.com/questions/663405/consequences-of-vims-binary-mode\n\n#### Solution 2\n除了取消binary选项之外，也可以在打开的文件中输入如下命令：（具体参数根据文件编码格式而异）\n```\n:edit ++enc=gb18030\n```\n\n> https://blog.csdn.net/cnwzh/article/details/7024427\n\n#### 题外话\n关于我为什么要配置`set binary`选项，请参看stack overflow问答\n[Why do I need vim in binary mode for 'noeol' to work?](https://stackoverflow.com/questions/16222530/why-do-i-need-vim-in-binary-mode-for-noeol-to-work)\n","slug":"Atypical-solution-for-Vim-Chinese-garbled","published":1,"updated":"2018-08-21T02:42:14.830Z","layout":"post","photos":[],"link":"","_id":"cjucbl8e70000b9fscnvv4o4q","content":"<h4 id=\"TLDR\"><a href=\"#TLDR\" class=\"headerlink\" title=\"TLDR\"></a>TLDR</h4><ol>\n<li>在.vimrc 或者你的相应 Vim 配置文件中删去<code>set binanry</code></li>\n<li>根据你打开的文件编码（如何查询文件格式编码，可以使用<code>enca -L chinese filename</code>），在 Vim 中输入，譬如<code>:edit ++enc=gb18030</code></li>\n</ol>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>前些天从用了一年多了 Linux Mint 转投 Arch Linux 门下，然后在Vim里编辑网络上下载下来的字幕文件时，发现了中文乱码的现象。当时心态有点糟，用了这么久的Vim，居然阴沟翻船。<br>我的环境是 Arch + NeoVim，配置文件是从我自己用了很久的没出问题的 .vimrc 拷贝过来的。</p>\n<p>尝试了网上种种乱码解决方案无效之后，决定自行解决问题。</p>\n<a id=\"more\"></a>\n<h4 id=\"Solution-1\"><a href=\"#Solution-1\" class=\"headerlink\" title=\"Solution 1\"></a>Solution 1</h4><p>大部分会要求你在 .vimrc中进行如下配置<a href=\"#1\">[1]</a>：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> encoding=utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> termencoding=utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> fileencodings=utf-<span class=\"number\">8</span>,gbk,latin1</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><span id=\"1\"> [1] <a href=\"https://blog.csdn.net/smstong/article/details/51279810\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/smstong/article/details/51279810</a></span></li>\n</ul>\n<p>这些配置，我当然是有的……扶额……</p>\n<p>经检查发现是 .vimrc中的<code>set binary</code>在作祟。输入<code>:help binary</code>查看说明：</p>\n<blockquote>\n<p>The ‘fileencoding’ and ‘fileencodings’ options will not be used, the file is read without conversion.</p>\n</blockquote>\n<p>binay选项会导致fileencoding 和fileencodings失效，这就是在进行网上大部分的配置之后，仍会失效的原因。</p>\n<blockquote>\n<p><a href=\"https://superuser.com/questions/663405/consequences-of-vims-binary-mode\" target=\"_blank\" rel=\"noopener\">https://superuser.com/questions/663405/consequences-of-vims-binary-mode</a></p>\n</blockquote>\n<h4 id=\"Solution-2\"><a href=\"#Solution-2\" class=\"headerlink\" title=\"Solution 2\"></a>Solution 2</h4><p>除了取消binary选项之外，也可以在打开的文件中输入如下命令：（具体参数根据文件编码格式而异）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:edit ++enc=gb18030</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/cnwzh/article/details/7024427\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/cnwzh/article/details/7024427</a></p>\n</blockquote>\n<h4 id=\"题外话\"><a href=\"#题外话\" class=\"headerlink\" title=\"题外话\"></a>题外话</h4><p>关于我为什么要配置<code>set binary</code>选项，请参看stack overflow问答<br><a href=\"https://stackoverflow.com/questions/16222530/why-do-i-need-vim-in-binary-mode-for-noeol-to-work\" target=\"_blank\" rel=\"noopener\">Why do I need vim in binary mode for ‘noeol’ to work?</a></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"TLDR\"><a href=\"#TLDR\" class=\"headerlink\" title=\"TLDR\"></a>TLDR</h4><ol>\n<li>在.vimrc 或者你的相应 Vim 配置文件中删去<code>set binanry</code></li>\n<li>根据你打开的文件编码（如何查询文件格式编码，可以使用<code>enca -L chinese filename</code>），在 Vim 中输入，譬如<code>:edit ++enc=gb18030</code></li>\n</ol>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><p>前些天从用了一年多了 Linux Mint 转投 Arch Linux 门下，然后在Vim里编辑网络上下载下来的字幕文件时，发现了中文乱码的现象。当时心态有点糟，用了这么久的Vim，居然阴沟翻船。<br>我的环境是 Arch + NeoVim，配置文件是从我自己用了很久的没出问题的 .vimrc 拷贝过来的。</p>\n<p>尝试了网上种种乱码解决方案无效之后，决定自行解决问题。</p>","more":"<h4 id=\"Solution-1\"><a href=\"#Solution-1\" class=\"headerlink\" title=\"Solution 1\"></a>Solution 1</h4><p>大部分会要求你在 .vimrc中进行如下配置<a href=\"#1\">[1]</a>：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> encoding=utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> termencoding=utf-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> fileencodings=utf-<span class=\"number\">8</span>,gbk,latin1</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><span id=\"1\"> [1] <a href=\"https://blog.csdn.net/smstong/article/details/51279810\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/smstong/article/details/51279810</a></span></li>\n</ul>\n<p>这些配置，我当然是有的……扶额……</p>\n<p>经检查发现是 .vimrc中的<code>set binary</code>在作祟。输入<code>:help binary</code>查看说明：</p>\n<blockquote>\n<p>The ‘fileencoding’ and ‘fileencodings’ options will not be used, the file is read without conversion.</p>\n</blockquote>\n<p>binay选项会导致fileencoding 和fileencodings失效，这就是在进行网上大部分的配置之后，仍会失效的原因。</p>\n<blockquote>\n<p><a href=\"https://superuser.com/questions/663405/consequences-of-vims-binary-mode\" target=\"_blank\" rel=\"noopener\">https://superuser.com/questions/663405/consequences-of-vims-binary-mode</a></p>\n</blockquote>\n<h4 id=\"Solution-2\"><a href=\"#Solution-2\" class=\"headerlink\" title=\"Solution 2\"></a>Solution 2</h4><p>除了取消binary选项之外，也可以在打开的文件中输入如下命令：（具体参数根据文件编码格式而异）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:edit ++enc=gb18030</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/cnwzh/article/details/7024427\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/cnwzh/article/details/7024427</a></p>\n</blockquote>\n<h4 id=\"题外话\"><a href=\"#题外话\" class=\"headerlink\" title=\"题外话\"></a>题外话</h4><p>关于我为什么要配置<code>set binary</code>选项，请参看stack overflow问答<br><a href=\"https://stackoverflow.com/questions/16222530/why-do-i-need-vim-in-binary-mode-for-noeol-to-work\" target=\"_blank\" rel=\"noopener\">Why do I need vim in binary mode for ‘noeol’ to work?</a></p>"},{"title":"Build OpenVPN Server on 53 port - The Easiest Way","copyright":true,"date":"2018-06-06T15:19:59.000Z","comments":1,"_content":"\n#### 序言\n本文旨在教会对 Linux 稍有基础的同学，以__最简单__的方式在拥有__公网 IP__ Ubuntu 主机上搭建一个监听 __UDP 53(67、68) 端口__ __OpenVPN__ 服务器，并配置好 Linux client 端，以实现绕过__Portal 认证__的目的。\n> 加黑的每个关键词要么可以搜出大量相关资料，要么是接下来的步骤的关键。\n> 本文不会告诉你为什么要这么做，上面给出的关键词已经是充足的暗示。\n\n<!--more-->\n\n#### 正文\n1. 使用 ssh 登录你的 Ubuntu 服务器，在命令行中输入：`netstat -anup | grep 53`\n```bash\nudp        0      0 0.0.0.0:5355            0.0.0.0:*                           446/systemd-resolve\nudp        0      0 127.0.0.1:53            0.0.0.0:*                           543/dnsmasq\nudp        0      0 127.0.0.53:53           0.0.0.0:*                           446/systemd-resolve\n.\n.\nudp6       0      0 :::5355                 :::*                                446/systemd-resolve\nudp6       0      0 ::1:53                  :::*                                543/dnsmasq\n```\n    倘若上面这条命令输出大量结果，请先暂时离开这篇文章，去调研如何先关闭你机器上监听 53 端口的服务。因为倘若有别的服务占用了 53 端口，会与我们接下来的步骤产生冲突。\n    倘若没有任何结果输入，恭喜，进入下一步骤。\n2. 继续在命令行中输入：\n    ```bash\n    wget https://git.io/vpn -O openvpn-install.sh && bash openvpn-install.sh\n    ```\n    > 参考资料：https://github.com/Nyr/openvpn-install\n\n    得到如下结果：\n\n    ```bash\n    Welcome to this OpenVPN \"road warrior\" installer!\n\n    I need to ask you a few questions before starting the setup.\n    You can leave the default options and just press enter if you are ok with them.\n\n    First, provide the IPv4 address of the network interface you want OpenVPN\n    listening to.\n    IP address: XX.XX.XX.XX #此处隐匿的是笔者机器的公网 IP，不用做任何修改，直接回车\n\n    Which protocol do you want for OpenVPN connections?\n       1) UDP (recommended)\n       2) TCP\n    Protocol [1-2]: 1\n\n    What port do you want OpenVPN listening to?\n    Port: 53 #注意此处一定要修改为 53，这是最为关键的一步\n\n    Which DNS do you want to use with the VPN?\n       1) Current system resolvers\n       2) 1.1.1.1\n       3) Google\n       4) OpenDNS\n       5) Verisign\n    DNS [1-5]: 3 #此处修改为 3\n\n    Finally, tell me your name for the client certificate.\n    Please, use one word only, no special characters.\n    Client name: client\n\n    Okay, that was all I needed. We are ready to set up your OpenVPN server now.\n    Press any key to continue...\n    ```\n3. 此时耐心等待脚本安装软件包，以及配置服务器 config 文件。根据机器性能不同，等待时间从几十秒到十几分钟不等。所幸不用任何操作，可以去喝杯咖啡再回来。\n待到看到如下字样时，OpenVPN 安装并配置成功，而且已经默认跑起来了。\n```bash\nFinished!\n\nYour client configuration is available at: /root/client.ovpn\nIf you want to add more clients, you simply need to run this script again!\n```\n\n4.  注意输出的这一条语句：__/root/client.ovpn__，使用`scp`将改文件从服务器拷贝到你的 client 端机器上。\n由于每个人登录的账户不同，具体的输出路径可能不一样。\n```bash\nscp username@XX.XX.XX.XX:yourfilepath .\n```\n\n5. 打开你的 Ubuntu client 机器上的网络管理，选择`import a saved VPN configuration`，选中拷贝下来的__client.ovpn__文件，在弹出窗口中不用做任何修改，直接点击 saved 保存即可。\n\n#### 撤销操作\n如果想要撤销服务器上的操作，再次运行下面这条指令。选择__3__即可。\n\n```bash\nwget https://git.io/vpn -O openvpn-install.sh && bash openvpn-install.sh\n\nLooks like OpenVPN is already installed.\n\nWhat do you want to do?\n    1) Add a new user\n    2) Revoke an existing user\n    3) Remove OpenVPN\n    4) Exit\nSelect an option [1-4]: 3\n\nDo you really want to remove OpenVPN? [y/N]: y\n```\n","source":"_posts/Build-OpenVpn-Server-on-53-port-the-easiest-way.md","raw":"---\ntitle: Build OpenVPN Server on 53 port - The Easiest Way\ncopyright: true\ndate: 2018-06-06 23:19:59\ntags: [OpenVPN, crack]\ncomments:\n---\n\n#### 序言\n本文旨在教会对 Linux 稍有基础的同学，以__最简单__的方式在拥有__公网 IP__ Ubuntu 主机上搭建一个监听 __UDP 53(67、68) 端口__ __OpenVPN__ 服务器，并配置好 Linux client 端，以实现绕过__Portal 认证__的目的。\n> 加黑的每个关键词要么可以搜出大量相关资料，要么是接下来的步骤的关键。\n> 本文不会告诉你为什么要这么做，上面给出的关键词已经是充足的暗示。\n\n<!--more-->\n\n#### 正文\n1. 使用 ssh 登录你的 Ubuntu 服务器，在命令行中输入：`netstat -anup | grep 53`\n```bash\nudp        0      0 0.0.0.0:5355            0.0.0.0:*                           446/systemd-resolve\nudp        0      0 127.0.0.1:53            0.0.0.0:*                           543/dnsmasq\nudp        0      0 127.0.0.53:53           0.0.0.0:*                           446/systemd-resolve\n.\n.\nudp6       0      0 :::5355                 :::*                                446/systemd-resolve\nudp6       0      0 ::1:53                  :::*                                543/dnsmasq\n```\n    倘若上面这条命令输出大量结果，请先暂时离开这篇文章，去调研如何先关闭你机器上监听 53 端口的服务。因为倘若有别的服务占用了 53 端口，会与我们接下来的步骤产生冲突。\n    倘若没有任何结果输入，恭喜，进入下一步骤。\n2. 继续在命令行中输入：\n    ```bash\n    wget https://git.io/vpn -O openvpn-install.sh && bash openvpn-install.sh\n    ```\n    > 参考资料：https://github.com/Nyr/openvpn-install\n\n    得到如下结果：\n\n    ```bash\n    Welcome to this OpenVPN \"road warrior\" installer!\n\n    I need to ask you a few questions before starting the setup.\n    You can leave the default options and just press enter if you are ok with them.\n\n    First, provide the IPv4 address of the network interface you want OpenVPN\n    listening to.\n    IP address: XX.XX.XX.XX #此处隐匿的是笔者机器的公网 IP，不用做任何修改，直接回车\n\n    Which protocol do you want for OpenVPN connections?\n       1) UDP (recommended)\n       2) TCP\n    Protocol [1-2]: 1\n\n    What port do you want OpenVPN listening to?\n    Port: 53 #注意此处一定要修改为 53，这是最为关键的一步\n\n    Which DNS do you want to use with the VPN?\n       1) Current system resolvers\n       2) 1.1.1.1\n       3) Google\n       4) OpenDNS\n       5) Verisign\n    DNS [1-5]: 3 #此处修改为 3\n\n    Finally, tell me your name for the client certificate.\n    Please, use one word only, no special characters.\n    Client name: client\n\n    Okay, that was all I needed. We are ready to set up your OpenVPN server now.\n    Press any key to continue...\n    ```\n3. 此时耐心等待脚本安装软件包，以及配置服务器 config 文件。根据机器性能不同，等待时间从几十秒到十几分钟不等。所幸不用任何操作，可以去喝杯咖啡再回来。\n待到看到如下字样时，OpenVPN 安装并配置成功，而且已经默认跑起来了。\n```bash\nFinished!\n\nYour client configuration is available at: /root/client.ovpn\nIf you want to add more clients, you simply need to run this script again!\n```\n\n4.  注意输出的这一条语句：__/root/client.ovpn__，使用`scp`将改文件从服务器拷贝到你的 client 端机器上。\n由于每个人登录的账户不同，具体的输出路径可能不一样。\n```bash\nscp username@XX.XX.XX.XX:yourfilepath .\n```\n\n5. 打开你的 Ubuntu client 机器上的网络管理，选择`import a saved VPN configuration`，选中拷贝下来的__client.ovpn__文件，在弹出窗口中不用做任何修改，直接点击 saved 保存即可。\n\n#### 撤销操作\n如果想要撤销服务器上的操作，再次运行下面这条指令。选择__3__即可。\n\n```bash\nwget https://git.io/vpn -O openvpn-install.sh && bash openvpn-install.sh\n\nLooks like OpenVPN is already installed.\n\nWhat do you want to do?\n    1) Add a new user\n    2) Revoke an existing user\n    3) Remove OpenVPN\n    4) Exit\nSelect an option [1-4]: 3\n\nDo you really want to remove OpenVPN? [y/N]: y\n```\n","slug":"Build-OpenVpn-Server-on-53-port-the-easiest-way","published":1,"updated":"2018-07-09T14:32:29.000Z","layout":"post","photos":[],"link":"","_id":"cjucbl8ee0002b9fs07jwhzps","content":"<h4 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h4><p>本文旨在教会对 Linux 稍有基础的同学，以<strong>最简单</strong>的方式在拥有<strong>公网 IP</strong> Ubuntu 主机上搭建一个监听 <strong>UDP 53(67、68) 端口</strong> <strong>OpenVPN</strong> 服务器，并配置好 Linux client 端，以实现绕过<strong>Portal 认证</strong>的目的。</p>\n<blockquote>\n<p>加黑的每个关键词要么可以搜出大量相关资料，要么是接下来的步骤的关键。<br>本文不会告诉你为什么要这么做，上面给出的关键词已经是充足的暗示。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><ol>\n<li><p>使用 ssh 登录你的 Ubuntu 服务器，在命令行中输入：<code>netstat -anup | grep 53</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udp        0      0 0.0.0.0:5355            0.0.0.0:*                           446/systemd-resolve</span><br><span class=\"line\">udp        0      0 127.0.0.1:53            0.0.0.0:*                           543/dnsmasq</span><br><span class=\"line\">udp        0      0 127.0.0.53:53           0.0.0.0:*                           446/systemd-resolve</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">udp6       0      0 :::5355                 :::*                                446/systemd-resolve</span><br><span class=\"line\">udp6       0      0 ::1:53                  :::*                                543/dnsmasq</span><br></pre></td></tr></table></figure>\n<p> 倘若上面这条命令输出大量结果，请先暂时离开这篇文章，去调研如何先关闭你机器上监听 53 端口的服务。因为倘若有别的服务占用了 53 端口，会与我们接下来的步骤产生冲突。<br> 倘若没有任何结果输入，恭喜，进入下一步骤。</p>\n</li>\n<li><p>继续在命令行中输入：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://git.io/vpn -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考资料：<a href=\"https://github.com/Nyr/openvpn-install\" target=\"_blank\" rel=\"noopener\">https://github.com/Nyr/openvpn-install</a></p>\n</blockquote>\n<p> 得到如下结果：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Welcome to this OpenVPN <span class=\"string\">\"road warrior\"</span> installer!</span><br><span class=\"line\"></span><br><span class=\"line\">I need to ask you a few questions before starting the setup.</span><br><span class=\"line\">You can leave the default options and just press enter <span class=\"keyword\">if</span> you are ok with them.</span><br><span class=\"line\"></span><br><span class=\"line\">First, provide the IPv4 address of the network interface you want OpenVPN</span><br><span class=\"line\">listening to.</span><br><span class=\"line\">IP address: XX.XX.XX.XX <span class=\"comment\">#此处隐匿的是笔者机器的公网 IP，不用做任何修改，直接回车</span></span><br><span class=\"line\"></span><br><span class=\"line\">Which protocol <span class=\"keyword\">do</span> you want <span class=\"keyword\">for</span> OpenVPN connections?</span><br><span class=\"line\">   1) UDP (recommended)</span><br><span class=\"line\">   2) TCP</span><br><span class=\"line\">Protocol [1-2]: 1</span><br><span class=\"line\"></span><br><span class=\"line\">What port <span class=\"keyword\">do</span> you want OpenVPN listening to?</span><br><span class=\"line\">Port: 53 <span class=\"comment\">#注意此处一定要修改为 53，这是最为关键的一步</span></span><br><span class=\"line\"></span><br><span class=\"line\">Which DNS <span class=\"keyword\">do</span> you want to use with the VPN?</span><br><span class=\"line\">   1) Current system resolvers</span><br><span class=\"line\">   2) 1.1.1.1</span><br><span class=\"line\">   3) Google</span><br><span class=\"line\">   4) OpenDNS</span><br><span class=\"line\">   5) Verisign</span><br><span class=\"line\">DNS [1-5]: 3 <span class=\"comment\">#此处修改为 3</span></span><br><span class=\"line\"></span><br><span class=\"line\">Finally, tell me your name <span class=\"keyword\">for</span> the client certificate.</span><br><span class=\"line\">Please, use one word only, no special characters.</span><br><span class=\"line\">Client name: client</span><br><span class=\"line\"></span><br><span class=\"line\">Okay, that was all I needed. We are ready to <span class=\"built_in\">set</span> up your OpenVPN server now.</span><br><span class=\"line\">Press any key to <span class=\"built_in\">continue</span>...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>此时耐心等待脚本安装软件包，以及配置服务器 config 文件。根据机器性能不同，等待时间从几十秒到十几分钟不等。所幸不用任何操作，可以去喝杯咖啡再回来。<br>待到看到如下字样时，OpenVPN 安装并配置成功，而且已经默认跑起来了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Finished!</span><br><span class=\"line\"></span><br><span class=\"line\">Your client configuration is available at: /root/client.ovpn</span><br><span class=\"line\">If you want to add more clients, you simply need to run this script again!</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意输出的这一条语句：<strong>/root/client.ovpn</strong>，使用<code>scp</code>将改文件从服务器拷贝到你的 client 端机器上。<br>由于每个人登录的账户不同，具体的输出路径可能不一样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp username@XX.XX.XX.XX:yourfilepath .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开你的 Ubuntu client 机器上的网络管理，选择<code>import a saved VPN configuration</code>，选中拷贝下来的<strong>client.ovpn</strong>文件，在弹出窗口中不用做任何修改，直接点击 saved 保存即可。</p>\n</li>\n</ol>\n<h4 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h4><p>如果想要撤销服务器上的操作，再次运行下面这条指令。选择<strong>3</strong>即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://git.io/vpn -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</span><br><span class=\"line\"></span><br><span class=\"line\">Looks like OpenVPN is already installed.</span><br><span class=\"line\"></span><br><span class=\"line\">What <span class=\"keyword\">do</span> you want to <span class=\"keyword\">do</span>?</span><br><span class=\"line\">    1) Add a new user</span><br><span class=\"line\">    2) Revoke an existing user</span><br><span class=\"line\">    3) Remove OpenVPN</span><br><span class=\"line\">    4) Exit</span><br><span class=\"line\">Select an option [1-4]: 3</span><br><span class=\"line\"></span><br><span class=\"line\">Do you really want to remove OpenVPN? [y/N]: y</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h4><p>本文旨在教会对 Linux 稍有基础的同学，以<strong>最简单</strong>的方式在拥有<strong>公网 IP</strong> Ubuntu 主机上搭建一个监听 <strong>UDP 53(67、68) 端口</strong> <strong>OpenVPN</strong> 服务器，并配置好 Linux client 端，以实现绕过<strong>Portal 认证</strong>的目的。</p>\n<blockquote>\n<p>加黑的每个关键词要么可以搜出大量相关资料，要么是接下来的步骤的关键。<br>本文不会告诉你为什么要这么做，上面给出的关键词已经是充足的暗示。</p>\n</blockquote>","more":"<h4 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h4><ol>\n<li><p>使用 ssh 登录你的 Ubuntu 服务器，在命令行中输入：<code>netstat -anup | grep 53</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">udp        0      0 0.0.0.0:5355            0.0.0.0:*                           446/systemd-resolve</span><br><span class=\"line\">udp        0      0 127.0.0.1:53            0.0.0.0:*                           543/dnsmasq</span><br><span class=\"line\">udp        0      0 127.0.0.53:53           0.0.0.0:*                           446/systemd-resolve</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">udp6       0      0 :::5355                 :::*                                446/systemd-resolve</span><br><span class=\"line\">udp6       0      0 ::1:53                  :::*                                543/dnsmasq</span><br></pre></td></tr></table></figure>\n<p> 倘若上面这条命令输出大量结果，请先暂时离开这篇文章，去调研如何先关闭你机器上监听 53 端口的服务。因为倘若有别的服务占用了 53 端口，会与我们接下来的步骤产生冲突。<br> 倘若没有任何结果输入，恭喜，进入下一步骤。</p>\n</li>\n<li><p>继续在命令行中输入：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://git.io/vpn -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考资料：<a href=\"https://github.com/Nyr/openvpn-install\" target=\"_blank\" rel=\"noopener\">https://github.com/Nyr/openvpn-install</a></p>\n</blockquote>\n<p> 得到如下结果：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Welcome to this OpenVPN <span class=\"string\">\"road warrior\"</span> installer!</span><br><span class=\"line\"></span><br><span class=\"line\">I need to ask you a few questions before starting the setup.</span><br><span class=\"line\">You can leave the default options and just press enter <span class=\"keyword\">if</span> you are ok with them.</span><br><span class=\"line\"></span><br><span class=\"line\">First, provide the IPv4 address of the network interface you want OpenVPN</span><br><span class=\"line\">listening to.</span><br><span class=\"line\">IP address: XX.XX.XX.XX <span class=\"comment\">#此处隐匿的是笔者机器的公网 IP，不用做任何修改，直接回车</span></span><br><span class=\"line\"></span><br><span class=\"line\">Which protocol <span class=\"keyword\">do</span> you want <span class=\"keyword\">for</span> OpenVPN connections?</span><br><span class=\"line\">   1) UDP (recommended)</span><br><span class=\"line\">   2) TCP</span><br><span class=\"line\">Protocol [1-2]: 1</span><br><span class=\"line\"></span><br><span class=\"line\">What port <span class=\"keyword\">do</span> you want OpenVPN listening to?</span><br><span class=\"line\">Port: 53 <span class=\"comment\">#注意此处一定要修改为 53，这是最为关键的一步</span></span><br><span class=\"line\"></span><br><span class=\"line\">Which DNS <span class=\"keyword\">do</span> you want to use with the VPN?</span><br><span class=\"line\">   1) Current system resolvers</span><br><span class=\"line\">   2) 1.1.1.1</span><br><span class=\"line\">   3) Google</span><br><span class=\"line\">   4) OpenDNS</span><br><span class=\"line\">   5) Verisign</span><br><span class=\"line\">DNS [1-5]: 3 <span class=\"comment\">#此处修改为 3</span></span><br><span class=\"line\"></span><br><span class=\"line\">Finally, tell me your name <span class=\"keyword\">for</span> the client certificate.</span><br><span class=\"line\">Please, use one word only, no special characters.</span><br><span class=\"line\">Client name: client</span><br><span class=\"line\"></span><br><span class=\"line\">Okay, that was all I needed. We are ready to <span class=\"built_in\">set</span> up your OpenVPN server now.</span><br><span class=\"line\">Press any key to <span class=\"built_in\">continue</span>...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>此时耐心等待脚本安装软件包，以及配置服务器 config 文件。根据机器性能不同，等待时间从几十秒到十几分钟不等。所幸不用任何操作，可以去喝杯咖啡再回来。<br>待到看到如下字样时，OpenVPN 安装并配置成功，而且已经默认跑起来了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Finished!</span><br><span class=\"line\"></span><br><span class=\"line\">Your client configuration is available at: /root/client.ovpn</span><br><span class=\"line\">If you want to add more clients, you simply need to run this script again!</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意输出的这一条语句：<strong>/root/client.ovpn</strong>，使用<code>scp</code>将改文件从服务器拷贝到你的 client 端机器上。<br>由于每个人登录的账户不同，具体的输出路径可能不一样。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp username@XX.XX.XX.XX:yourfilepath .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开你的 Ubuntu client 机器上的网络管理，选择<code>import a saved VPN configuration</code>，选中拷贝下来的<strong>client.ovpn</strong>文件，在弹出窗口中不用做任何修改，直接点击 saved 保存即可。</p>\n</li>\n</ol>\n<h4 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h4><p>如果想要撤销服务器上的操作，再次运行下面这条指令。选择<strong>3</strong>即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://git.io/vpn -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</span><br><span class=\"line\"></span><br><span class=\"line\">Looks like OpenVPN is already installed.</span><br><span class=\"line\"></span><br><span class=\"line\">What <span class=\"keyword\">do</span> you want to <span class=\"keyword\">do</span>?</span><br><span class=\"line\">    1) Add a new user</span><br><span class=\"line\">    2) Revoke an existing user</span><br><span class=\"line\">    3) Remove OpenVPN</span><br><span class=\"line\">    4) Exit</span><br><span class=\"line\">Select an option [1-4]: 3</span><br><span class=\"line\"></span><br><span class=\"line\">Do you really want to remove OpenVPN? [y/N]: y</span><br></pre></td></tr></table></figure>"},{"title":"How to crack Synergy","copyright":true,"date":"2018-05-31T07:23:19.000Z","comments":1,"_content":"\nSynergy 是一款用于在不同电脑之间共享键盘、鼠标、剪贴板的开源商业软件，支持包括 Linux、Windows、Mac OS 在内的多种主流操作系统，其 Pro 版本甚至支持直接在不同桌面上面拖动文件。\n\n笔者使用的 Linux 系统有免费的基础版可以使用，但想要使用共享剪贴板功能，则需付费购买 Pro 版。这篇文章简单描述了从源代码逆向其付费序列号的过程。由于实在太败人品了……不会放出序列号，读者可以自行尝试编译笔者提供的代码。\n\n<!--more-->\n\n![Synergy 激活窗口](synergy_active_window.png)\n\n观察 Synergy 的激活窗口，注意到存在 \"serial key\"关键字。\n从 Github 将 Synergy 源码仓库 clone 下来之后，使用`ag \"serial key\"`得到如下结果。从中我们可以定位到 `src/lib/shared/SerialKey.cpp`文件。\n```bash\n$ ag \"serial key\"\nChangeLog\n7:Bug #5901 - Stored serial key corrupted on macOS\n40:Bug #5722 - Malformed serial key in registry will crash GUI on startup\n84:Bug #5471 - Serial key textbox on activation screen overflows on Mac\n99:Enhancement #4715 - Activation dialog which also accepts a serial key\n100:Enhancement #5020 - Recommend using serial key when online activation fails\n105:Enhancement #4716 - Allow software to be time limited with serial key\n\nsrc/lib/shared/SerialKey.cpp\n53:        throw std::runtime_error (\"Invalid serial key\");\n```\n\n> https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp\n\n粗略扫视一眼 SerialKey.cpp 文件，确定如下两个函数可能是对序列号进行解析的关键。\n\n```c\nSerialKey::decode(const std::string& serial);\nSerialKey::parse(std::string plainSerial);\n```\n\ndecode 函数并不复杂，就不做分析了。继续跟踪函数逻辑流，发现代码中仅仅对序列号版本（Basic 或者 Pro）以及软件过期时间进行了检验，其余 filed 可以随便乱填。Synergy 毕竟是家小公司，做事可能不太严谨。不过话说回来，既然公司把源码都公布出来，自行编译也实在不是什么难事。所以我做的这事的确是有点败坏人品的，图灵祖师宽恕则个……\n\n下附简单的 Crack Pro 版本序列号的代码。读者可以自行编译，但请勿传播。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstring decode(const std::string &serial)\n{\n    static const char *const lut = \"0123456789ABCDEF\";\n    string output;\n    int len = serial.length();\n    if ((len & 1) != 0u) {\n        return output;\n    }\n\n    output.reserve(len / 2);\n    for (int i = 0; i < len; i += 2) {\n\n        char a = serial[i];\n        char b = serial[i + 1];\n\n        const char *p = lower_bound(lut, lut + 16, a);\n        const char *q = lower_bound(lut, lut + 16, b);\n\n        if (*q != b || *p != a) {\n            return output;\n        }\n\n        output.push_back(static_cast<char>(((p - lut) << 4) | (q - lut)));\n    }\n\n    return output;\n}\n\nstring encode(string src)\n{\n    string result;\n    static const char *const lut = \"0123456789ABCDEF\";\n    for (int i = 0; i < src.length(); ++i) {\n        char a = src[i];\n        char p = (a & 0xf0) >> 4;\n        char q = (a & 0x0f);\n        //        const char *x = lower_bound(lut, lut + 16, p);\n        //        const char *y = lower_bound(lut, lut + 16, q);\n\n        result.push_back(lut[p]);\n        result.push_back(lut[q]);\n    }\n    return result;\n}\n\nint main(int argc, char *argv[])\n{\n    // e.g.: {v1;basic;Bob;1;email;company name;1398297600;1398384000}\n    cout << encode(\"{v1;pro;Bob;1;email;company name;1398297600;1398384000}\");\n    return 0;\n}\n```\n","source":"_posts/How-to-crack-synergy.md","raw":"---\ntitle: How to crack Synergy\ncopyright: true\ndate: 2018-05-31 15:23:19\ntags: [crack, tips]\ncomments:\n---\n\nSynergy 是一款用于在不同电脑之间共享键盘、鼠标、剪贴板的开源商业软件，支持包括 Linux、Windows、Mac OS 在内的多种主流操作系统，其 Pro 版本甚至支持直接在不同桌面上面拖动文件。\n\n笔者使用的 Linux 系统有免费的基础版可以使用，但想要使用共享剪贴板功能，则需付费购买 Pro 版。这篇文章简单描述了从源代码逆向其付费序列号的过程。由于实在太败人品了……不会放出序列号，读者可以自行尝试编译笔者提供的代码。\n\n<!--more-->\n\n![Synergy 激活窗口](synergy_active_window.png)\n\n观察 Synergy 的激活窗口，注意到存在 \"serial key\"关键字。\n从 Github 将 Synergy 源码仓库 clone 下来之后，使用`ag \"serial key\"`得到如下结果。从中我们可以定位到 `src/lib/shared/SerialKey.cpp`文件。\n```bash\n$ ag \"serial key\"\nChangeLog\n7:Bug #5901 - Stored serial key corrupted on macOS\n40:Bug #5722 - Malformed serial key in registry will crash GUI on startup\n84:Bug #5471 - Serial key textbox on activation screen overflows on Mac\n99:Enhancement #4715 - Activation dialog which also accepts a serial key\n100:Enhancement #5020 - Recommend using serial key when online activation fails\n105:Enhancement #4716 - Allow software to be time limited with serial key\n\nsrc/lib/shared/SerialKey.cpp\n53:        throw std::runtime_error (\"Invalid serial key\");\n```\n\n> https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp\n\n粗略扫视一眼 SerialKey.cpp 文件，确定如下两个函数可能是对序列号进行解析的关键。\n\n```c\nSerialKey::decode(const std::string& serial);\nSerialKey::parse(std::string plainSerial);\n```\n\ndecode 函数并不复杂，就不做分析了。继续跟踪函数逻辑流，发现代码中仅仅对序列号版本（Basic 或者 Pro）以及软件过期时间进行了检验，其余 filed 可以随便乱填。Synergy 毕竟是家小公司，做事可能不太严谨。不过话说回来，既然公司把源码都公布出来，自行编译也实在不是什么难事。所以我做的这事的确是有点败坏人品的，图灵祖师宽恕则个……\n\n下附简单的 Crack Pro 版本序列号的代码。读者可以自行编译，但请勿传播。\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nstring decode(const std::string &serial)\n{\n    static const char *const lut = \"0123456789ABCDEF\";\n    string output;\n    int len = serial.length();\n    if ((len & 1) != 0u) {\n        return output;\n    }\n\n    output.reserve(len / 2);\n    for (int i = 0; i < len; i += 2) {\n\n        char a = serial[i];\n        char b = serial[i + 1];\n\n        const char *p = lower_bound(lut, lut + 16, a);\n        const char *q = lower_bound(lut, lut + 16, b);\n\n        if (*q != b || *p != a) {\n            return output;\n        }\n\n        output.push_back(static_cast<char>(((p - lut) << 4) | (q - lut)));\n    }\n\n    return output;\n}\n\nstring encode(string src)\n{\n    string result;\n    static const char *const lut = \"0123456789ABCDEF\";\n    for (int i = 0; i < src.length(); ++i) {\n        char a = src[i];\n        char p = (a & 0xf0) >> 4;\n        char q = (a & 0x0f);\n        //        const char *x = lower_bound(lut, lut + 16, p);\n        //        const char *y = lower_bound(lut, lut + 16, q);\n\n        result.push_back(lut[p]);\n        result.push_back(lut[q]);\n    }\n    return result;\n}\n\nint main(int argc, char *argv[])\n{\n    // e.g.: {v1;basic;Bob;1;email;company name;1398297600;1398384000}\n    cout << encode(\"{v1;pro;Bob;1;email;company name;1398297600;1398384000}\");\n    return 0;\n}\n```\n","slug":"How-to-crack-synergy","published":1,"updated":"2019-03-18T08:47:58.595Z","layout":"post","photos":[],"link":"","_id":"cjucbl8ek0005b9fs7gsb5mhs","content":"<p>Synergy 是一款用于在不同电脑之间共享键盘、鼠标、剪贴板的开源商业软件，支持包括 Linux、Windows、Mac OS 在内的多种主流操作系统，其 Pro 版本甚至支持直接在不同桌面上面拖动文件。</p>\n<p>笔者使用的 Linux 系统有免费的基础版可以使用，但想要使用共享剪贴板功能，则需付费购买 Pro 版。这篇文章简单描述了从源代码逆向其付费序列号的过程。由于实在太败人品了……不会放出序列号，读者可以自行尝试编译笔者提供的代码。</p>\n<a id=\"more\"></a>\n<p><img src=\"synergy_active_window.png\" alt=\"Synergy 激活窗口\"></p>\n<p>观察 Synergy 的激活窗口，注意到存在 “serial key”关键字。<br>从 Github 将 Synergy 源码仓库 clone 下来之后，使用<code>ag &quot;serial key&quot;</code>得到如下结果。从中我们可以定位到 <code>src/lib/shared/SerialKey.cpp</code>文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ag <span class=\"string\">\"serial key\"</span></span><br><span class=\"line\">ChangeLog</span><br><span class=\"line\">7:Bug <span class=\"comment\">#5901 - Stored serial key corrupted on macOS</span></span><br><span class=\"line\">40:Bug <span class=\"comment\">#5722 - Malformed serial key in registry will crash GUI on startup</span></span><br><span class=\"line\">84:Bug <span class=\"comment\">#5471 - Serial key textbox on activation screen overflows on Mac</span></span><br><span class=\"line\">99:Enhancement <span class=\"comment\">#4715 - Activation dialog which also accepts a serial key</span></span><br><span class=\"line\">100:Enhancement <span class=\"comment\">#5020 - Recommend using serial key when online activation fails</span></span><br><span class=\"line\">105:Enhancement <span class=\"comment\">#4716 - Allow software to be time limited with serial key</span></span><br><span class=\"line\"></span><br><span class=\"line\">src/lib/shared/SerialKey.cpp</span><br><span class=\"line\">53:        throw std::runtime_error (<span class=\"string\">\"Invalid serial key\"</span>);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><a href=\"https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp\" target=\"_blank\" rel=\"noopener\">https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp</a></p>\n</blockquote>\n<p>粗略扫视一眼 SerialKey.cpp 文件，确定如下两个函数可能是对序列号进行解析的关键。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SerialKey::decode(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>&amp; serial);</span><br><span class=\"line\">SerialKey::parse(<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span> plainSerial);</span><br></pre></td></tr></table></figure>\n<p>decode 函数并不复杂，就不做分析了。继续跟踪函数逻辑流，发现代码中仅仅对序列号版本（Basic 或者 Pro）以及软件过期时间进行了检验，其余 filed 可以随便乱填。Synergy 毕竟是家小公司，做事可能不太严谨。不过话说回来，既然公司把源码都公布出来，自行编译也实在不是什么难事。所以我做的这事的确是有点败坏人品的，图灵祖师宽恕则个……</p>\n<p>下附简单的 Crack Pro 版本序列号的代码。读者可以自行编译，但请勿传播。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">decode</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">string</span> &amp;serial)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> lut = <span class=\"string\">\"0123456789ABCDEF\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> output;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = serial.length();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((len &amp; <span class=\"number\">1</span>) != <span class=\"number\">0u</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    output.reserve(len / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> a = serial[i];</span><br><span class=\"line\">        <span class=\"keyword\">char</span> b = serial[i + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *p = lower_bound(lut, lut + <span class=\"number\">16</span>, a);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *q = lower_bound(lut, lut + <span class=\"number\">16</span>, b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*q != b || *p != a) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        output.push_back(<span class=\"keyword\">static_cast</span>&lt;<span class=\"keyword\">char</span>&gt;(((p - lut) &lt;&lt; <span class=\"number\">4</span>) | (q - lut)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">encode</span><span class=\"params\">(<span class=\"built_in\">string</span> src)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> lut = <span class=\"string\">\"0123456789ABCDEF\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; src.length(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> a = src[i];</span><br><span class=\"line\">        <span class=\"keyword\">char</span> p = (a &amp; <span class=\"number\">0xf0</span>) &gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> q = (a &amp; <span class=\"number\">0x0f</span>);</span><br><span class=\"line\">        <span class=\"comment\">//        const char *x = lower_bound(lut, lut + 16, p);</span></span><br><span class=\"line\">        <span class=\"comment\">//        const char *y = lower_bound(lut, lut + 16, q);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        result.push_back(lut[p]);</span><br><span class=\"line\">        result.push_back(lut[q]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// e.g.: &#123;v1;basic;Bob;1;email;company name;1398297600;1398384000&#125;</span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; encode(<span class=\"string\">\"&#123;v1;pro;Bob;1;email;company name;1398297600;1398384000&#125;\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Synergy 是一款用于在不同电脑之间共享键盘、鼠标、剪贴板的开源商业软件，支持包括 Linux、Windows、Mac OS 在内的多种主流操作系统，其 Pro 版本甚至支持直接在不同桌面上面拖动文件。</p>\n<p>笔者使用的 Linux 系统有免费的基础版可以使用，但想要使用共享剪贴板功能，则需付费购买 Pro 版。这篇文章简单描述了从源代码逆向其付费序列号的过程。由于实在太败人品了……不会放出序列号，读者可以自行尝试编译笔者提供的代码。</p>","more":"<p><img src=\"synergy_active_window.png\" alt=\"Synergy 激活窗口\"></p>\n<p>观察 Synergy 的激活窗口，注意到存在 “serial key”关键字。<br>从 Github 将 Synergy 源码仓库 clone 下来之后，使用<code>ag &quot;serial key&quot;</code>得到如下结果。从中我们可以定位到 <code>src/lib/shared/SerialKey.cpp</code>文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ag <span class=\"string\">\"serial key\"</span></span><br><span class=\"line\">ChangeLog</span><br><span class=\"line\">7:Bug <span class=\"comment\">#5901 - Stored serial key corrupted on macOS</span></span><br><span class=\"line\">40:Bug <span class=\"comment\">#5722 - Malformed serial key in registry will crash GUI on startup</span></span><br><span class=\"line\">84:Bug <span class=\"comment\">#5471 - Serial key textbox on activation screen overflows on Mac</span></span><br><span class=\"line\">99:Enhancement <span class=\"comment\">#4715 - Activation dialog which also accepts a serial key</span></span><br><span class=\"line\">100:Enhancement <span class=\"comment\">#5020 - Recommend using serial key when online activation fails</span></span><br><span class=\"line\">105:Enhancement <span class=\"comment\">#4716 - Allow software to be time limited with serial key</span></span><br><span class=\"line\"></span><br><span class=\"line\">src/lib/shared/SerialKey.cpp</span><br><span class=\"line\">53:        throw std::runtime_error (<span class=\"string\">\"Invalid serial key\"</span>);</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><a href=\"https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp\" target=\"_blank\" rel=\"noopener\">https://github.com/symless/synergy-core/blob/master/src/lib/shared/SerialKey.cpp</a></p>\n</blockquote>\n<p>粗略扫视一眼 SerialKey.cpp 文件，确定如下两个函数可能是对序列号进行解析的关键。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SerialKey::decode(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">string</span>&amp; serial);</span><br><span class=\"line\">SerialKey::parse(<span class=\"built_in\">std</span>::<span class=\"built_in\">string</span> plainSerial);</span><br></pre></td></tr></table></figure>\n<p>decode 函数并不复杂，就不做分析了。继续跟踪函数逻辑流，发现代码中仅仅对序列号版本（Basic 或者 Pro）以及软件过期时间进行了检验，其余 filed 可以随便乱填。Synergy 毕竟是家小公司，做事可能不太严谨。不过话说回来，既然公司把源码都公布出来，自行编译也实在不是什么难事。所以我做的这事的确是有点败坏人品的，图灵祖师宽恕则个……</p>\n<p>下附简单的 Crack Pro 版本序列号的代码。读者可以自行编译，但请勿传播。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">decode</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"built_in\">std</span>::<span class=\"built_in\">string</span> &amp;serial)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> lut = <span class=\"string\">\"0123456789ABCDEF\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> output;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = serial.length();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((len &amp; <span class=\"number\">1</span>) != <span class=\"number\">0u</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    output.reserve(len / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> a = serial[i];</span><br><span class=\"line\">        <span class=\"keyword\">char</span> b = serial[i + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *p = lower_bound(lut, lut + <span class=\"number\">16</span>, a);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *q = lower_bound(lut, lut + <span class=\"number\">16</span>, b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*q != b || *p != a) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        output.push_back(<span class=\"keyword\">static_cast</span>&lt;<span class=\"keyword\">char</span>&gt;(((p - lut) &lt;&lt; <span class=\"number\">4</span>) | (q - lut)));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> output;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">encode</span><span class=\"params\">(<span class=\"built_in\">string</span> src)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> lut = <span class=\"string\">\"0123456789ABCDEF\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; src.length(); ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> a = src[i];</span><br><span class=\"line\">        <span class=\"keyword\">char</span> p = (a &amp; <span class=\"number\">0xf0</span>) &gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> q = (a &amp; <span class=\"number\">0x0f</span>);</span><br><span class=\"line\">        <span class=\"comment\">//        const char *x = lower_bound(lut, lut + 16, p);</span></span><br><span class=\"line\">        <span class=\"comment\">//        const char *y = lower_bound(lut, lut + 16, q);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        result.push_back(lut[p]);</span><br><span class=\"line\">        result.push_back(lut[q]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// e.g.: &#123;v1;basic;Bob;1;email;company name;1398297600;1398384000&#125;</span></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; encode(<span class=\"string\">\"&#123;v1;pro;Bob;1;email;company name;1398297600;1398384000&#125;\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Share my dotfile","copyright":true,"date":"2018-05-31T08:06:35.000Z","comments":1,"_content":"\n#### 工作环境推荐\n笔者的工作环境是`Ubuntu-16.04.1 + Neovim + zsh + oh-my-zsh + tmux + oh-my-tmux`，使用到图形界面的时候主要是阅读 pdf 文档以及浏览网页。\n\n身为一个重度 Vim 使用者，我交换了 ESC 键和 Caps Lock 键，使用 zsh 的 `Vi` 模式，并尝试在一切可能的地方使用`Vim-like`的方式来操控机器。\n\n* 网页浏览：Chrome + cVim(Chrome 插件）\n* PDF 阅读： Evince（测试过所有 `Vim-like` 的阅读器之后，发现或多或少存在问题，Evince 只能算是差强人意的选择） (2018.12.09 更新：配置好 Zathura 后挺好用的）\n* PDF 制作： Neovim + Typora\n* PPT 制作： Neovim + nodePPT\n* Overwall： VPS + Shadowsocks\n* 文件管理： VPS + Git（这里强烈批评坚果云，居然能 24 小时吃掉我 100% 的 CPU 资源，对富文本格式文件解析能力非常差）\n* 文件共享： VPS + Git\n* 下载： VPS + aria2c\n* 终端模拟器： Tilix\n* 键鼠 + 剪贴板共享： Synergy\n\n折腾过很久的 Vim 插件，所走的这些路，应该是大多数被 Vim 哲学所吸引的人都走过的。\n在这里分享 dotfile，以飨后来人。希望或多或少能帮到你。\n\n<!--more-->\n\n> https://github.com/DarcySail/dotfile\n> https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/\n\n本仓库会持续更新，除了去掉敏感的隐私内容之外，会尽量与我实际使用的 dotfile 保持一致。\n\n#### To be tested\n* 文件浏览： 的确有 `Vim-like` 的文件系统管理器，但我对此心存疑虑，zsh 组合拳似乎对我已经非常够用了\n\n#### 未来目标\n* 将 dotfile 中的所有英文整理为中文（本博客的定位是创造价值以及帮助后来者，所以会照顾大多数 newcomer）；\n* 测试完所有 Github 上面排名前十的 dotfile 仓库，整合到我自己的内容中来；\n* 排版格式\n","source":"_posts/Share-my-dotfile.md","raw":"---\ntitle: Share my dotfile\ncopyright: true\ndate: 2018-05-31 16:06:35\ntags: [vim, zsh, terminal]\ncomments:\n---\n\n#### 工作环境推荐\n笔者的工作环境是`Ubuntu-16.04.1 + Neovim + zsh + oh-my-zsh + tmux + oh-my-tmux`，使用到图形界面的时候主要是阅读 pdf 文档以及浏览网页。\n\n身为一个重度 Vim 使用者，我交换了 ESC 键和 Caps Lock 键，使用 zsh 的 `Vi` 模式，并尝试在一切可能的地方使用`Vim-like`的方式来操控机器。\n\n* 网页浏览：Chrome + cVim(Chrome 插件）\n* PDF 阅读： Evince（测试过所有 `Vim-like` 的阅读器之后，发现或多或少存在问题，Evince 只能算是差强人意的选择） (2018.12.09 更新：配置好 Zathura 后挺好用的）\n* PDF 制作： Neovim + Typora\n* PPT 制作： Neovim + nodePPT\n* Overwall： VPS + Shadowsocks\n* 文件管理： VPS + Git（这里强烈批评坚果云，居然能 24 小时吃掉我 100% 的 CPU 资源，对富文本格式文件解析能力非常差）\n* 文件共享： VPS + Git\n* 下载： VPS + aria2c\n* 终端模拟器： Tilix\n* 键鼠 + 剪贴板共享： Synergy\n\n折腾过很久的 Vim 插件，所走的这些路，应该是大多数被 Vim 哲学所吸引的人都走过的。\n在这里分享 dotfile，以飨后来人。希望或多或少能帮到你。\n\n<!--more-->\n\n> https://github.com/DarcySail/dotfile\n> https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/\n\n本仓库会持续更新，除了去掉敏感的隐私内容之外，会尽量与我实际使用的 dotfile 保持一致。\n\n#### To be tested\n* 文件浏览： 的确有 `Vim-like` 的文件系统管理器，但我对此心存疑虑，zsh 组合拳似乎对我已经非常够用了\n\n#### 未来目标\n* 将 dotfile 中的所有英文整理为中文（本博客的定位是创造价值以及帮助后来者，所以会照顾大多数 newcomer）；\n* 测试完所有 Github 上面排名前十的 dotfile 仓库，整合到我自己的内容中来；\n* 排版格式\n","slug":"Share-my-dotfile","published":1,"updated":"2018-12-09T06:55:45.060Z","layout":"post","photos":[],"link":"","_id":"cjucbl8el0006b9fs72jvrhej","content":"<h4 id=\"工作环境推荐\"><a href=\"#工作环境推荐\" class=\"headerlink\" title=\"工作环境推荐\"></a>工作环境推荐</h4><p>笔者的工作环境是<code>Ubuntu-16.04.1 + Neovim + zsh + oh-my-zsh + tmux + oh-my-tmux</code>，使用到图形界面的时候主要是阅读 pdf 文档以及浏览网页。</p>\n<p>身为一个重度 Vim 使用者，我交换了 ESC 键和 Caps Lock 键，使用 zsh 的 <code>Vi</code> 模式，并尝试在一切可能的地方使用<code>Vim-like</code>的方式来操控机器。</p>\n<ul>\n<li>网页浏览：Chrome + cVim(Chrome 插件）</li>\n<li>PDF 阅读： Evince（测试过所有 <code>Vim-like</code> 的阅读器之后，发现或多或少存在问题，Evince 只能算是差强人意的选择） (2018.12.09 更新：配置好 Zathura 后挺好用的）</li>\n<li>PDF 制作： Neovim + Typora</li>\n<li>PPT 制作： Neovim + nodePPT</li>\n<li>Overwall： VPS + Shadowsocks</li>\n<li>文件管理： VPS + Git（这里强烈批评坚果云，居然能 24 小时吃掉我 100% 的 CPU 资源，对富文本格式文件解析能力非常差）</li>\n<li>文件共享： VPS + Git</li>\n<li>下载： VPS + aria2c</li>\n<li>终端模拟器： Tilix</li>\n<li>键鼠 + 剪贴板共享： Synergy</li>\n</ul>\n<p>折腾过很久的 Vim 插件，所走的这些路，应该是大多数被 Vim 哲学所吸引的人都走过的。<br>在这里分享 dotfile，以飨后来人。希望或多或少能帮到你。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p><a href=\"https://github.com/DarcySail/dotfile\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail/dotfile</a><br><a href=\"https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/\" target=\"_blank\" rel=\"noopener\">https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/</a></p>\n</blockquote>\n<p>本仓库会持续更新，除了去掉敏感的隐私内容之外，会尽量与我实际使用的 dotfile 保持一致。</p>\n<h4 id=\"To-be-tested\"><a href=\"#To-be-tested\" class=\"headerlink\" title=\"To be tested\"></a>To be tested</h4><ul>\n<li>文件浏览： 的确有 <code>Vim-like</code> 的文件系统管理器，但我对此心存疑虑，zsh 组合拳似乎对我已经非常够用了</li>\n</ul>\n<h4 id=\"未来目标\"><a href=\"#未来目标\" class=\"headerlink\" title=\"未来目标\"></a>未来目标</h4><ul>\n<li>将 dotfile 中的所有英文整理为中文（本博客的定位是创造价值以及帮助后来者，所以会照顾大多数 newcomer）；</li>\n<li>测试完所有 Github 上面排名前十的 dotfile 仓库，整合到我自己的内容中来；</li>\n<li>排版格式</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"工作环境推荐\"><a href=\"#工作环境推荐\" class=\"headerlink\" title=\"工作环境推荐\"></a>工作环境推荐</h4><p>笔者的工作环境是<code>Ubuntu-16.04.1 + Neovim + zsh + oh-my-zsh + tmux + oh-my-tmux</code>，使用到图形界面的时候主要是阅读 pdf 文档以及浏览网页。</p>\n<p>身为一个重度 Vim 使用者，我交换了 ESC 键和 Caps Lock 键，使用 zsh 的 <code>Vi</code> 模式，并尝试在一切可能的地方使用<code>Vim-like</code>的方式来操控机器。</p>\n<ul>\n<li>网页浏览：Chrome + cVim(Chrome 插件）</li>\n<li>PDF 阅读： Evince（测试过所有 <code>Vim-like</code> 的阅读器之后，发现或多或少存在问题，Evince 只能算是差强人意的选择） (2018.12.09 更新：配置好 Zathura 后挺好用的）</li>\n<li>PDF 制作： Neovim + Typora</li>\n<li>PPT 制作： Neovim + nodePPT</li>\n<li>Overwall： VPS + Shadowsocks</li>\n<li>文件管理： VPS + Git（这里强烈批评坚果云，居然能 24 小时吃掉我 100% 的 CPU 资源，对富文本格式文件解析能力非常差）</li>\n<li>文件共享： VPS + Git</li>\n<li>下载： VPS + aria2c</li>\n<li>终端模拟器： Tilix</li>\n<li>键鼠 + 剪贴板共享： Synergy</li>\n</ul>\n<p>折腾过很久的 Vim 插件，所走的这些路，应该是大多数被 Vim 哲学所吸引的人都走过的。<br>在这里分享 dotfile，以飨后来人。希望或多或少能帮到你。</p>","more":"<blockquote>\n<p><a href=\"https://github.com/DarcySail/dotfile\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail/dotfile</a><br><a href=\"https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/\" target=\"_blank\" rel=\"noopener\">https://xaizek.github.io/2016-08-13/big-list-of-vim-like-software/</a></p>\n</blockquote>\n<p>本仓库会持续更新，除了去掉敏感的隐私内容之外，会尽量与我实际使用的 dotfile 保持一致。</p>\n<h4 id=\"To-be-tested\"><a href=\"#To-be-tested\" class=\"headerlink\" title=\"To be tested\"></a>To be tested</h4><ul>\n<li>文件浏览： 的确有 <code>Vim-like</code> 的文件系统管理器，但我对此心存疑虑，zsh 组合拳似乎对我已经非常够用了</li>\n</ul>\n<h4 id=\"未来目标\"><a href=\"#未来目标\" class=\"headerlink\" title=\"未来目标\"></a>未来目标</h4><ul>\n<li>将 dotfile 中的所有英文整理为中文（本博客的定位是创造价值以及帮助后来者，所以会照顾大多数 newcomer）；</li>\n<li>测试完所有 Github 上面排名前十的 dotfile 仓库，整合到我自己的内容中来；</li>\n<li>排版格式</li>\n</ul>"},{"title":"LFS 部分问题的解决方案","copyright":true,"date":"2018-08-15T08:04:18.000Z","comments":1,"_content":"\n本文记录一些在尝试 LFS 8.2 时遇到的一些问题的解决方案。\n这些解决方案被我选录的标准是，英文网络中有，但中文网络目前还没有。以飨后来人。\n\n--------------------------------------------------------------------------------\n\n1. 在为 LFS 编译 Glibc 库的时候，会在 `./configure`期间遇到如下问题：\n\n```bash\nLD_LIBRARY_PATH shouldn't contain the current directory\nchecking LD_LIBRARY_PATH variable... contains current directory\nconfigure: error:\n*** LD_LIBRARY_PATH shouldn't contain the current directory when\n*** building glibc. Please change the environment variable\n*** and run configure again.\n```\n\n出现这个错误的原因是由于环境变量的 `LD_LIBRARY_PATH` 中出现了当前目录。通常我们修改环境变量时会这么写：\n\n```bash\nexport LD_LIBRARY_PATH = $LD_LIBRARY_PATH:/foo/bar:/hello/world:/a/b\n```\n\n如果一开始 `LD_LIBRARY_PATH` 不存在的话，这个上面这串环境变量开头就是冒号，这就把当前文件夹包含进去了。一般来说我们挺需要这种效果，因为在编译的时候可以 include 某些东西，但是对于编译 glibc 来说这个是多余的。\n\n<!--more-->\n\n最简单的解决方法就是 `unset LD_LIBRARY_PATH`。但这个解决方案会在接下来 LFS 的一系列步骤中，产生一些问题。\n\n> 1. https://github.com/Linuxbrew/legacy-linuxbrew/issues/807\n> 2. `LIBRARY_PATH` 用于在链接过程中查找库。`LD_LIBRARY_PATH` 用于在程序执行期间查找库。\n\n--------------------------------------------------------------------------------\n2. 在为 LFS 第二遍编译 Binutils-2.25 的时候，会在 `./configure`期间遇到如下问题：\n\n```bash\nno such file or directory: ./a.out\n```\n\n日志如下（注，这段日志并不重要，只是为了增加被搜索引擎索引的准确率，方便后来人查找到这一问题）：\n```bash\nchecking for C compiler default output file name... a.out\nchecking whether the C compiler works... configure: error: in `/mnt/sources/binutils-build':\nconfigure: error: cannot run C compiled programs.\nIf you meant to cross compile, use `--host'.\nSee `config.log' for more details.\n```\n\nMy problem is glibc was in /lib and /lib64 was not a link to /lib. My fix was mv /tools/lib64/* /tools/lib/ && rmdir /tools/lib64 && ln -s lib /tools/lib64\n翻译：我遇到的问题在于 glic 位于`/lib`路径下，而`/lib64`并没有链接（注，指 ln 命令的软链接）到`/lib`目录。我解决这个问题的办法是运行下面这条命令：\n```bash\nmv /tools/lib64/* /tools/lib/ && rmdir /tools/lib64 && ln -s lib /tools/lib64\n```\n\n> 参考链接：https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/\n\n--------------------------------------------------------------------------------\n\n3. LFS 书中最坑的一处小细节是，在 `chroot` 之后，它完成 `/mnt/lfs/boot/` 到宿主`/boot`路径的绑定了，就直接让读者对 `/boot/grub/grub.cfg`文件进行修改。 此刻你可能还沉浸在 `chroot` 带给你的安全感里，一不留神就中招。\n\n重启并发现 grub 引导失败之后，大多数用户应该使用的 grub2 而非 grub。这两个程序重新进入引导的方式是不一样的。\n简单记录 grub2 手动重新引导过程如下，__注意，不要直接输入下面的代码！__：\n```bash\ngrub> set root=(hd0,1)\ngrub> linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1\ngrub> initrd /boot/initrd.img-3.13.0-29-generic\ngrub> boot\n```\n\n将第一行中的 `(hd0,1)` 替换为你原本 `/mnt/lfs` （也就是 `chroot` 所用到的地址）所挂在的硬盘地址。这里值得一提的是，grub 对于硬盘命名的方式有细微差别，一定要弄清之后再根据你机器的实际情况做修改。\n将第二行和第三行的路径都需要替换为你编译好的内核路径，第二行中的root路径与第一行的路径相同（只是写法不一样）。\n\n> 参考链接：https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux\n","source":"_posts/record-lfs-solution-you-cant-find-in-chinese-internet.md","raw":"---\ntitle: LFS 部分问题的解决方案\ncopyright: true\ndate: 2018-08-15 16:04:18\ntags: [Linux, LFS]\ncomments:\n---\n\n本文记录一些在尝试 LFS 8.2 时遇到的一些问题的解决方案。\n这些解决方案被我选录的标准是，英文网络中有，但中文网络目前还没有。以飨后来人。\n\n--------------------------------------------------------------------------------\n\n1. 在为 LFS 编译 Glibc 库的时候，会在 `./configure`期间遇到如下问题：\n\n```bash\nLD_LIBRARY_PATH shouldn't contain the current directory\nchecking LD_LIBRARY_PATH variable... contains current directory\nconfigure: error:\n*** LD_LIBRARY_PATH shouldn't contain the current directory when\n*** building glibc. Please change the environment variable\n*** and run configure again.\n```\n\n出现这个错误的原因是由于环境变量的 `LD_LIBRARY_PATH` 中出现了当前目录。通常我们修改环境变量时会这么写：\n\n```bash\nexport LD_LIBRARY_PATH = $LD_LIBRARY_PATH:/foo/bar:/hello/world:/a/b\n```\n\n如果一开始 `LD_LIBRARY_PATH` 不存在的话，这个上面这串环境变量开头就是冒号，这就把当前文件夹包含进去了。一般来说我们挺需要这种效果，因为在编译的时候可以 include 某些东西，但是对于编译 glibc 来说这个是多余的。\n\n<!--more-->\n\n最简单的解决方法就是 `unset LD_LIBRARY_PATH`。但这个解决方案会在接下来 LFS 的一系列步骤中，产生一些问题。\n\n> 1. https://github.com/Linuxbrew/legacy-linuxbrew/issues/807\n> 2. `LIBRARY_PATH` 用于在链接过程中查找库。`LD_LIBRARY_PATH` 用于在程序执行期间查找库。\n\n--------------------------------------------------------------------------------\n2. 在为 LFS 第二遍编译 Binutils-2.25 的时候，会在 `./configure`期间遇到如下问题：\n\n```bash\nno such file or directory: ./a.out\n```\n\n日志如下（注，这段日志并不重要，只是为了增加被搜索引擎索引的准确率，方便后来人查找到这一问题）：\n```bash\nchecking for C compiler default output file name... a.out\nchecking whether the C compiler works... configure: error: in `/mnt/sources/binutils-build':\nconfigure: error: cannot run C compiled programs.\nIf you meant to cross compile, use `--host'.\nSee `config.log' for more details.\n```\n\nMy problem is glibc was in /lib and /lib64 was not a link to /lib. My fix was mv /tools/lib64/* /tools/lib/ && rmdir /tools/lib64 && ln -s lib /tools/lib64\n翻译：我遇到的问题在于 glic 位于`/lib`路径下，而`/lib64`并没有链接（注，指 ln 命令的软链接）到`/lib`目录。我解决这个问题的办法是运行下面这条命令：\n```bash\nmv /tools/lib64/* /tools/lib/ && rmdir /tools/lib64 && ln -s lib /tools/lib64\n```\n\n> 参考链接：https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/\n\n--------------------------------------------------------------------------------\n\n3. LFS 书中最坑的一处小细节是，在 `chroot` 之后，它完成 `/mnt/lfs/boot/` 到宿主`/boot`路径的绑定了，就直接让读者对 `/boot/grub/grub.cfg`文件进行修改。 此刻你可能还沉浸在 `chroot` 带给你的安全感里，一不留神就中招。\n\n重启并发现 grub 引导失败之后，大多数用户应该使用的 grub2 而非 grub。这两个程序重新进入引导的方式是不一样的。\n简单记录 grub2 手动重新引导过程如下，__注意，不要直接输入下面的代码！__：\n```bash\ngrub> set root=(hd0,1)\ngrub> linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1\ngrub> initrd /boot/initrd.img-3.13.0-29-generic\ngrub> boot\n```\n\n将第一行中的 `(hd0,1)` 替换为你原本 `/mnt/lfs` （也就是 `chroot` 所用到的地址）所挂在的硬盘地址。这里值得一提的是，grub 对于硬盘命名的方式有细微差别，一定要弄清之后再根据你机器的实际情况做修改。\n将第二行和第三行的路径都需要替换为你编译好的内核路径，第二行中的root路径与第一行的路径相同（只是写法不一样）。\n\n> 参考链接：https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux\n","slug":"record-lfs-solution-you-cant-find-in-chinese-internet","published":1,"updated":"2018-08-15T08:22:34.000Z","layout":"post","photos":[],"link":"","_id":"cjucbl8em0007b9fsin736r8c","content":"<p>本文记录一些在尝试 LFS 8.2 时遇到的一些问题的解决方案。<br>这些解决方案被我选录的标准是，英文网络中有，但中文网络目前还没有。以飨后来人。</p>\n<hr>\n<ol>\n<li>在为 LFS 编译 Glibc 库的时候，会在 <code>./configure</code>期间遇到如下问题：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LD_LIBRARY_PATH shouldn<span class=\"string\">'t contain the current directory</span></span><br><span class=\"line\"><span class=\"string\">checking LD_LIBRARY_PATH variable... contains current directory</span></span><br><span class=\"line\"><span class=\"string\">configure: error:</span></span><br><span class=\"line\"><span class=\"string\">*** LD_LIBRARY_PATH shouldn'</span>t contain the current directory when</span><br><span class=\"line\">*** building glibc. Please change the environment variable</span><br><span class=\"line\">*** and run configure again.</span><br></pre></td></tr></table></figure>\n<p>出现这个错误的原因是由于环境变量的 <code>LD_LIBRARY_PATH</code> 中出现了当前目录。通常我们修改环境变量时会这么写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH = <span class=\"variable\">$LD_LIBRARY_PATH</span>:/foo/bar:/hello/world:/a/b</span><br></pre></td></tr></table></figure>\n<p>如果一开始 <code>LD_LIBRARY_PATH</code> 不存在的话，这个上面这串环境变量开头就是冒号，这就把当前文件夹包含进去了。一般来说我们挺需要这种效果，因为在编译的时候可以 include 某些东西，但是对于编译 glibc 来说这个是多余的。</p>\n<a id=\"more\"></a>\n<p>最简单的解决方法就是 <code>unset LD_LIBRARY_PATH</code>。但这个解决方案会在接下来 LFS 的一系列步骤中，产生一些问题。</p>\n<blockquote>\n<ol>\n<li><a href=\"https://github.com/Linuxbrew/legacy-linuxbrew/issues/807\" target=\"_blank\" rel=\"noopener\">https://github.com/Linuxbrew/legacy-linuxbrew/issues/807</a></li>\n<li><code>LIBRARY_PATH</code> 用于在链接过程中查找库。<code>LD_LIBRARY_PATH</code> 用于在程序执行期间查找库。</li>\n</ol>\n</blockquote>\n<hr>\n<ol start=\"2\">\n<li>在为 LFS 第二遍编译 Binutils-2.25 的时候，会在 <code>./configure</code>期间遇到如下问题：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no such file or directory: ./a.out</span><br></pre></td></tr></table></figure>\n<p>日志如下（注，这段日志并不重要，只是为了增加被搜索引擎索引的准确率，方便后来人查找到这一问题）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checking <span class=\"keyword\">for</span> C compiler default output file name... a.out</span><br><span class=\"line\">checking whether the C compiler works... configure: error: <span class=\"keyword\">in</span> `/mnt/sources/binutils-build<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">configure: error: cannot run C compiled programs.</span></span><br><span class=\"line\"><span class=\"string\">If you meant to cross compile, use `--host'</span>.</span><br><span class=\"line\">See `config.log<span class=\"string\">' for more details.</span></span><br></pre></td></tr></table></figure></p>\n<p>My problem is glibc was in /lib and /lib64 was not a link to /lib. My fix was mv /tools/lib64/* /tools/lib/ &amp;&amp; rmdir /tools/lib64 &amp;&amp; ln -s lib /tools/lib64<br>翻译：我遇到的问题在于 glic 位于<code>/lib</code>路径下，而<code>/lib64</code>并没有链接（注，指 ln 命令的软链接）到<code>/lib</code>目录。我解决这个问题的办法是运行下面这条命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /tools/lib64/* /tools/lib/ &amp;&amp; rmdir /tools/lib64 &amp;&amp; ln -s lib /tools/lib64</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>参考链接：<a href=\"https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/\" target=\"_blank\" rel=\"noopener\">https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/</a></p>\n</blockquote>\n<hr>\n<ol start=\"3\">\n<li>LFS 书中最坑的一处小细节是，在 <code>chroot</code> 之后，它完成 <code>/mnt/lfs/boot/</code> 到宿主<code>/boot</code>路径的绑定了，就直接让读者对 <code>/boot/grub/grub.cfg</code>文件进行修改。 此刻你可能还沉浸在 <code>chroot</code> 带给你的安全感里，一不留神就中招。</li>\n</ol>\n<p>重启并发现 grub 引导失败之后，大多数用户应该使用的 grub2 而非 grub。这两个程序重新进入引导的方式是不一样的。<br>简单记录 grub2 手动重新引导过程如下，<strong>注意，不要直接输入下面的代码！</strong>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub&gt; <span class=\"built_in\">set</span> root=(hd0,1)</span><br><span class=\"line\">grub&gt; linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1</span><br><span class=\"line\">grub&gt; initrd /boot/initrd.img-3.13.0-29-generic</span><br><span class=\"line\">grub&gt; boot</span><br></pre></td></tr></table></figure></p>\n<p>将第一行中的 <code>(hd0,1)</code> 替换为你原本 <code>/mnt/lfs</code> （也就是 <code>chroot</code> 所用到的地址）所挂在的硬盘地址。这里值得一提的是，grub 对于硬盘命名的方式有细微差别，一定要弄清之后再根据你机器的实际情况做修改。<br>将第二行和第三行的路径都需要替换为你编译好的内核路径，第二行中的root路径与第一行的路径相同（只是写法不一样）。</p>\n<blockquote>\n<p>参考链接：<a href=\"https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux\" target=\"_blank\" rel=\"noopener\">https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文记录一些在尝试 LFS 8.2 时遇到的一些问题的解决方案。<br>这些解决方案被我选录的标准是，英文网络中有，但中文网络目前还没有。以飨后来人。</p>\n<hr>\n<ol>\n<li>在为 LFS 编译 Glibc 库的时候，会在 <code>./configure</code>期间遇到如下问题：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LD_LIBRARY_PATH shouldn<span class=\"string\">'t contain the current directory</span></span><br><span class=\"line\"><span class=\"string\">checking LD_LIBRARY_PATH variable... contains current directory</span></span><br><span class=\"line\"><span class=\"string\">configure: error:</span></span><br><span class=\"line\"><span class=\"string\">*** LD_LIBRARY_PATH shouldn'</span>t contain the current directory when</span><br><span class=\"line\">*** building glibc. Please change the environment variable</span><br><span class=\"line\">*** and run configure again.</span><br></pre></td></tr></table></figure>\n<p>出现这个错误的原因是由于环境变量的 <code>LD_LIBRARY_PATH</code> 中出现了当前目录。通常我们修改环境变量时会这么写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH = <span class=\"variable\">$LD_LIBRARY_PATH</span>:/foo/bar:/hello/world:/a/b</span><br></pre></td></tr></table></figure>\n<p>如果一开始 <code>LD_LIBRARY_PATH</code> 不存在的话，这个上面这串环境变量开头就是冒号，这就把当前文件夹包含进去了。一般来说我们挺需要这种效果，因为在编译的时候可以 include 某些东西，但是对于编译 glibc 来说这个是多余的。</p>","more":"<p>最简单的解决方法就是 <code>unset LD_LIBRARY_PATH</code>。但这个解决方案会在接下来 LFS 的一系列步骤中，产生一些问题。</p>\n<blockquote>\n<ol>\n<li><a href=\"https://github.com/Linuxbrew/legacy-linuxbrew/issues/807\" target=\"_blank\" rel=\"noopener\">https://github.com/Linuxbrew/legacy-linuxbrew/issues/807</a></li>\n<li><code>LIBRARY_PATH</code> 用于在链接过程中查找库。<code>LD_LIBRARY_PATH</code> 用于在程序执行期间查找库。</li>\n</ol>\n</blockquote>\n<hr>\n<ol start=\"2\">\n<li>在为 LFS 第二遍编译 Binutils-2.25 的时候，会在 <code>./configure</code>期间遇到如下问题：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no such file or directory: ./a.out</span><br></pre></td></tr></table></figure>\n<p>日志如下（注，这段日志并不重要，只是为了增加被搜索引擎索引的准确率，方便后来人查找到这一问题）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checking <span class=\"keyword\">for</span> C compiler default output file name... a.out</span><br><span class=\"line\">checking whether the C compiler works... configure: error: <span class=\"keyword\">in</span> `/mnt/sources/binutils-build<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">configure: error: cannot run C compiled programs.</span></span><br><span class=\"line\"><span class=\"string\">If you meant to cross compile, use `--host'</span>.</span><br><span class=\"line\">See `config.log<span class=\"string\">' for more details.</span></span><br></pre></td></tr></table></figure></p>\n<p>My problem is glibc was in /lib and /lib64 was not a link to /lib. My fix was mv /tools/lib64/* /tools/lib/ &amp;&amp; rmdir /tools/lib64 &amp;&amp; ln -s lib /tools/lib64<br>翻译：我遇到的问题在于 glic 位于<code>/lib</code>路径下，而<code>/lib64</code>并没有链接（注，指 ln 命令的软链接）到<code>/lib</code>目录。我解决这个问题的办法是运行下面这条命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv /tools/lib64/* /tools/lib/ &amp;&amp; rmdir /tools/lib64 &amp;&amp; ln -s lib /tools/lib64</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>参考链接：<a href=\"https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/\" target=\"_blank\" rel=\"noopener\">https://www.reddit.com/r/linuxfromscratch/comments/2yd1j5/59_binutils225_pass_2_failing_during_configure/</a></p>\n</blockquote>\n<hr>\n<ol start=\"3\">\n<li>LFS 书中最坑的一处小细节是，在 <code>chroot</code> 之后，它完成 <code>/mnt/lfs/boot/</code> 到宿主<code>/boot</code>路径的绑定了，就直接让读者对 <code>/boot/grub/grub.cfg</code>文件进行修改。 此刻你可能还沉浸在 <code>chroot</code> 带给你的安全感里，一不留神就中招。</li>\n</ol>\n<p>重启并发现 grub 引导失败之后，大多数用户应该使用的 grub2 而非 grub。这两个程序重新进入引导的方式是不一样的。<br>简单记录 grub2 手动重新引导过程如下，<strong>注意，不要直接输入下面的代码！</strong>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub&gt; <span class=\"built_in\">set</span> root=(hd0,1)</span><br><span class=\"line\">grub&gt; linux /boot/vmlinuz-3.13.0-29-generic root=/dev/sda1</span><br><span class=\"line\">grub&gt; initrd /boot/initrd.img-3.13.0-29-generic</span><br><span class=\"line\">grub&gt; boot</span><br></pre></td></tr></table></figure></p>\n<p>将第一行中的 <code>(hd0,1)</code> 替换为你原本 <code>/mnt/lfs</code> （也就是 <code>chroot</code> 所用到的地址）所挂在的硬盘地址。这里值得一提的是，grub 对于硬盘命名的方式有细微差别，一定要弄清之后再根据你机器的实际情况做修改。<br>将第二行和第三行的路径都需要替换为你编译好的内核路径，第二行中的root路径与第一行的路径相同（只是写法不一样）。</p>\n<blockquote>\n<p>参考链接：<a href=\"https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux\" target=\"_blank\" rel=\"noopener\">https://www.linux.com/learn/how-rescue-non-booting-grub-2-linux</a></p>\n</blockquote>"},{"title":"记录一次 LLVM 编译错误的解决","copyright":true,"date":"2018-07-09T14:21:37.000Z","comments":1,"_content":"\n> undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'\n\n使用官方教程中的命令编译\n```bash\nclang++ -g -rdynamic toy.cpp -L/usr/local/lib -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy\n```\n会得到如下错误：\n```bash\nwarning: unknown warning option '-Wno-maybe-uninitialized'; did you mean '-Wno-uninitialized'? [-Wunknown-warning-option]\n1 warning generated.\n/tmp/toy-e5b39c.o: In function `llvm::orc::RTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize()':\n/usr/local/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:191: undefined reference to `llvm::orc::JITSymbolResolverAdapter::JITSymbolResolverAdapter(llvm::orc::ExecutionSession&, llvm::orc::SymbolResolver&, llvm::orc::MaterializationResponsibility*)'\n/tmp/toy-e5b39c.o: In function `llvm::orc::JITSymbolResolverAdapter::~JITSymbolResolverAdapter()':\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:23: undefined reference to `vtable for llvm::orc::JITSymbolResolverAdapter'\n/tmp/toy-e5b39c.o: In function `llvm::orc::ExecutionSessionBase::materializeOnCurrentThread(llvm::orc::VSO&, std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >)':\n/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::MaterializationResponsibility(llvm::orc::VSO&, std::map<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, std::less<llvm::orc::SymbolStringPtr>, std::allocator<std::pair<llvm::orc::SymbolStringPtr const, llvm::JITSymbolFlags> > >)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::~MaterializationResponsibility()'\n/tmp/toy-e5b39c.o: In function `std::set<llvm::orc::SymbolStringPtr, std::less<std::set>, std::allocator<std::set> > llvm::orc::lookupWithLegacyFn<llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, std::allocator<std::set> const&, llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1})':\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:90: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&, llvm::Error)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:82: undefined reference to `llvm::orc::AsynchronousSymbolQuery::resolve(llvm::orc::SymbolStringPtr const&, llvm::JITEvaluatedSymbol)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:83: undefined reference to `llvm::orc::AsynchronousSymbolQuery::notifySymbolReady()'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:86: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&, llvm::Error)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:97: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyResolved()'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:100: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'\n/tmp/toy-e5b39c.o:(.data.rel.ro._ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE[_ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE]+0x30): undefined reference to `llvm::orc::SymbolResolver::anchor()'\nclang-7: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\n定位到最下方的一次函数调用`handleFullyReady`，在 `/usr/local/lib` 目录下使用`grep handleFullyReady . -r -n`搜索，发现该函数位于 `LibLLVMOrcJIT.so` 文件中。\n```bash\nBinary file ./libLLVMOrcJIT.so.7svn matches\n```\n\n使用新的命令\n```bash\nclang++ -g -rdynamic toy.cpp -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy\n```\n问题解决。\n","source":"_posts/record_LLVM_compile_error_solution.md","raw":"---\ntitle: 记录一次 LLVM 编译错误的解决\ncopyright: true\ndate: 2018-07-09 22:21:37\ntags: [LLVM]\ncomments:\n---\n\n> undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'\n\n使用官方教程中的命令编译\n```bash\nclang++ -g -rdynamic toy.cpp -L/usr/local/lib -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy\n```\n会得到如下错误：\n```bash\nwarning: unknown warning option '-Wno-maybe-uninitialized'; did you mean '-Wno-uninitialized'? [-Wunknown-warning-option]\n1 warning generated.\n/tmp/toy-e5b39c.o: In function `llvm::orc::RTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize()':\n/usr/local/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:191: undefined reference to `llvm::orc::JITSymbolResolverAdapter::JITSymbolResolverAdapter(llvm::orc::ExecutionSession&, llvm::orc::SymbolResolver&, llvm::orc::MaterializationResponsibility*)'\n/tmp/toy-e5b39c.o: In function `llvm::orc::JITSymbolResolverAdapter::~JITSymbolResolverAdapter()':\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:23: undefined reference to `vtable for llvm::orc::JITSymbolResolverAdapter'\n/tmp/toy-e5b39c.o: In function `llvm::orc::ExecutionSessionBase::materializeOnCurrentThread(llvm::orc::VSO&, std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >)':\n/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::MaterializationResponsibility(llvm::orc::VSO&, std::map<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, std::less<llvm::orc::SymbolStringPtr>, std::allocator<std::pair<llvm::orc::SymbolStringPtr const, llvm::JITSymbolFlags> > >)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::~MaterializationResponsibility()'\n/tmp/toy-e5b39c.o: In function `std::set<llvm::orc::SymbolStringPtr, std::less<std::set>, std::allocator<std::set> > llvm::orc::lookupWithLegacyFn<llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}>(llvm::orc::ExecutionSession&, llvm::orc::AsynchronousSymbolQuery&, std::allocator<std::set> const&, llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1})':\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:90: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&, llvm::Error)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:82: undefined reference to `llvm::orc::AsynchronousSymbolQuery::resolve(llvm::orc::SymbolStringPtr const&, llvm::JITEvaluatedSymbol)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:83: undefined reference to `llvm::orc::AsynchronousSymbolQuery::notifySymbolReady()'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:86: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&, llvm::Error)'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:97: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyResolved()'\n/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:100: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'\n/tmp/toy-e5b39c.o:(.data.rel.ro._ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE[_ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE]+0x30): undefined reference to `llvm::orc::SymbolResolver::anchor()'\nclang-7: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n\n定位到最下方的一次函数调用`handleFullyReady`，在 `/usr/local/lib` 目录下使用`grep handleFullyReady . -r -n`搜索，发现该函数位于 `LibLLVMOrcJIT.so` 文件中。\n```bash\nBinary file ./libLLVMOrcJIT.so.7svn matches\n```\n\n使用新的命令\n```bash\nclang++ -g -rdynamic toy.cpp -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy\n```\n问题解决。\n","slug":"record_LLVM_compile_error_solution","published":1,"updated":"2018-07-13T02:27:01.000Z","layout":"post","photos":[],"link":"","_id":"cjucbl8eo000ab9fshpqewlmq","content":"<blockquote>\n<p>undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()’</p>\n</blockquote>\n<p>使用官方教程中的命令编译<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang++ -g -rdynamic toy.cpp -L/usr/<span class=\"built_in\">local</span>/lib -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy</span><br></pre></td></tr></table></figure></p>\n<p>会得到如下错误：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: unknown warning option <span class=\"string\">'-Wno-maybe-uninitialized'</span>; did you mean <span class=\"string\">'-Wno-uninitialized'</span>? [-Wunknown-warning-option]</span><br><span class=\"line\">1 warning generated.</span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::RTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize()<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:191: undefined reference to `llvm::orc::JITSymbolResolverAdapter::JITSymbolResolverAdapter(llvm::orc::ExecutionSession&amp;, llvm::orc::SymbolResolver&amp;, llvm::orc::MaterializationResponsibility*)'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::JITSymbolResolverAdapter::~JITSymbolResolverAdapter()<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:23: undefined reference to `vtable for llvm::orc::JITSymbolResolverAdapter'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::ExecutionSessionBase::materializeOnCurrentThread(llvm::orc::VSO&amp;, std::unique_ptr&lt;llvm::orc::MaterializationUnit, std::default_delete&lt;llvm::orc::MaterializationUnit&gt; &gt;)<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::MaterializationResponsibility(llvm::orc::VSO&amp;, std::map&lt;llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, std::less&lt;llvm::orc::SymbolStringPtr&gt;, std::allocator&lt;std::pair&lt;llvm::orc::SymbolStringPtr const, llvm::JITSymbolFlags&gt; &gt; &gt;)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::~MaterializationResponsibility()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/tmp/toy-e5b39c.o: In function `std::set&lt;llvm::orc::SymbolStringPtr, std::less&lt;std::set&gt;, std::allocator&lt;std::set&gt; &gt; llvm::orc::lookupWithLegacyFn&lt;llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::&#123;lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1&#125;&gt;(llvm::orc::ExecutionSession&amp;, llvm::orc::AsynchronousSymbolQuery&amp;, std::allocator&lt;std::set&gt; const&amp;, llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::&#123;lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1&#125;)'</span>:</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:90: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&amp;, llvm::Error)<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:82: undefined reference to `llvm::orc::AsynchronousSymbolQuery::resolve(llvm::orc::SymbolStringPtr const&amp;, llvm::JITEvaluatedSymbol)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:83: undefined reference to `llvm::orc::AsynchronousSymbolQuery::notifySymbolReady()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:86: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&amp;, llvm::Error)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:97: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyResolved()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:100: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o:(.data.rel.ro._ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE[_ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE]+0x30): undefined reference to `llvm::orc::SymbolResolver::anchor()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">clang-7: error: linker command failed with exit code 1 (use -v to see invocation)</span></span><br></pre></td></tr></table></figure></p>\n<p>定位到最下方的一次函数调用<code>handleFullyReady</code>，在 <code>/usr/local/lib</code> 目录下使用<code>grep handleFullyReady . -r -n</code>搜索，发现该函数位于 <code>LibLLVMOrcJIT.so</code> 文件中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Binary file ./libLLVMOrcJIT.so.7svn matches</span><br></pre></td></tr></table></figure></p>\n<p>使用新的命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang++ -g -rdynamic toy.cpp -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy</span><br></pre></td></tr></table></figure></p>\n<p>问题解决。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()’</p>\n</blockquote>\n<p>使用官方教程中的命令编译<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang++ -g -rdynamic toy.cpp -L/usr/<span class=\"built_in\">local</span>/lib -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy</span><br></pre></td></tr></table></figure></p>\n<p>会得到如下错误：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: unknown warning option <span class=\"string\">'-Wno-maybe-uninitialized'</span>; did you mean <span class=\"string\">'-Wno-uninitialized'</span>? [-Wunknown-warning-option]</span><br><span class=\"line\">1 warning generated.</span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::RTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::finalize()<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:191: undefined reference to `llvm::orc::JITSymbolResolverAdapter::JITSymbolResolverAdapter(llvm::orc::ExecutionSession&amp;, llvm::orc::SymbolResolver&amp;, llvm::orc::MaterializationResponsibility*)'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::JITSymbolResolverAdapter::~JITSymbolResolverAdapter()<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:23: undefined reference to `vtable for llvm::orc::JITSymbolResolverAdapter'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o: In <span class=\"keyword\">function</span> `llvm::orc::ExecutionSessionBase::materializeOnCurrentThread(llvm::orc::VSO&amp;, std::unique_ptr&lt;llvm::orc::MaterializationUnit, std::default_delete&lt;llvm::orc::MaterializationUnit&gt; &gt;)<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::MaterializationResponsibility(llvm::orc::VSO&amp;, std::map&lt;llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, std::less&lt;llvm::orc::SymbolStringPtr&gt;, std::allocator&lt;std::pair&lt;llvm::orc::SymbolStringPtr const, llvm::JITSymbolFlags&gt; &gt; &gt;)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Core.h:188: undefined reference to `llvm::orc::MaterializationResponsibility::~MaterializationResponsibility()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/tmp/toy-e5b39c.o: In function `std::set&lt;llvm::orc::SymbolStringPtr, std::less&lt;std::set&gt;, std::allocator&lt;std::set&gt; &gt; llvm::orc::lookupWithLegacyFn&lt;llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::&#123;lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1&#125;&gt;(llvm::orc::ExecutionSession&amp;, llvm::orc::AsynchronousSymbolQuery&amp;, std::allocator&lt;std::set&gt; const&amp;, llvm::orc::KaleidoscopeJIT::KaleidoscopeJIT()::&#123;lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1&#125;)'</span>:</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:90: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&amp;, llvm::Error)<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:82: undefined reference to `llvm::orc::AsynchronousSymbolQuery::resolve(llvm::orc::SymbolStringPtr const&amp;, llvm::JITEvaluatedSymbol)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:83: undefined reference to `llvm::orc::AsynchronousSymbolQuery::notifySymbolReady()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:86: undefined reference to `llvm::orc::ExecutionSessionBase::failQuery(llvm::orc::AsynchronousSymbolQuery&amp;, llvm::Error)'</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/include/llvm/ExecutionEngine/Orc/Legacy.h:97: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyResolved()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/include/llvm/ExecutionEngine/Orc/Legacy.h:100: undefined reference to `llvm::orc::AsynchronousSymbolQuery::handleFullyReady()'</span></span><br><span class=\"line\">/tmp/toy-e5b39c.o:(.data.rel.ro._ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE[_ZTVN4llvm3orc22LegacyLookupFnResolverIZNS0_15KaleidoscopeJITC1EvEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE]+0x30): undefined reference to `llvm::orc::SymbolResolver::anchor()<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">clang-7: error: linker command failed with exit code 1 (use -v to see invocation)</span></span><br></pre></td></tr></table></figure></p>\n<p>定位到最下方的一次函数调用<code>handleFullyReady</code>，在 <code>/usr/local/lib</code> 目录下使用<code>grep handleFullyReady . -r -n</code>搜索，发现该函数位于 <code>LibLLVMOrcJIT.so</code> 文件中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Binary file ./libLLVMOrcJIT.so.7svn matches</span><br></pre></td></tr></table></figure></p>\n<p>使用新的命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang++ -g -rdynamic toy.cpp -lLLVMOrcJIT `llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native` -O3 -o toy</span><br></pre></td></tr></table></figure></p>\n<p>问题解决。</p>\n"},{"title":"关闭 tmux panel 无需确认","date":"2018-05-10T07:46:40.000Z","comments":1,"copyright":true,"_content":"\n使用 tmux 时经常开启关闭临时面板（panel），每次关闭时 tmux 都会让你确认是否真的要关闭，有些繁琐。\n将如下配置加入你的`.tmux.conf`文件来避免繁琐的确认步骤：\n\n```\nbind-key & kill-window\nbind-key x kill-pane\n```\n重启 tmux 服务，或者重新加载 tmux 配置文件（`.tmux.conf`）后生效。\n\n参考链接：\nhttps://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window\n\n<!--more-->\n\n回答部分翻译如下：\n\n前缀键（通常指 ctrl+b）& 通常与`confirm-before -p \"kill-window #W? (y/n)\" kill-window`相绑定，`confirm-before`导致你需要进行确认的操作。如果你想避免确认步骤，只需要将原有的按键命令解绑，然后直接将其与`kill-window`重新绑定即可。\n\n如果你想要知道你的 tmux 配置默认有哪些操作需要确认步骤，使用如下命令：\n```\ntmux list-keys | grep confirm-before\n```","source":"_posts/tmux-close-panal-without-confirm.md","raw":"---\ntitle: 关闭 tmux panel 无需确认\ndate: 2018-05-10 15:46:40\ntags: [tmux]\ncomments: tmux tips\ncopyright: true\n---\n\n使用 tmux 时经常开启关闭临时面板（panel），每次关闭时 tmux 都会让你确认是否真的要关闭，有些繁琐。\n将如下配置加入你的`.tmux.conf`文件来避免繁琐的确认步骤：\n\n```\nbind-key & kill-window\nbind-key x kill-pane\n```\n重启 tmux 服务，或者重新加载 tmux 配置文件（`.tmux.conf`）后生效。\n\n参考链接：\nhttps://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window\n\n<!--more-->\n\n回答部分翻译如下：\n\n前缀键（通常指 ctrl+b）& 通常与`confirm-before -p \"kill-window #W? (y/n)\" kill-window`相绑定，`confirm-before`导致你需要进行确认的操作。如果你想避免确认步骤，只需要将原有的按键命令解绑，然后直接将其与`kill-window`重新绑定即可。\n\n如果你想要知道你的 tmux 配置默认有哪些操作需要确认步骤，使用如下命令：\n```\ntmux list-keys | grep confirm-before\n```","slug":"tmux-close-panal-without-confirm","published":1,"updated":"2019-03-18T08:50:01.888Z","layout":"post","photos":[],"link":"","_id":"cjucbl8eq000bb9fsgej1tovs","content":"<p>使用 tmux 时经常开启关闭临时面板（panel），每次关闭时 tmux 都会让你确认是否真的要关闭，有些繁琐。<br>将如下配置加入你的<code>.tmux.conf</code>文件来避免繁琐的确认步骤：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-key &amp; kill-window</span><br><span class=\"line\">bind-key x kill-pane</span><br></pre></td></tr></table></figure>\n<p>重启 tmux 服务，或者重新加载 tmux 配置文件（<code>.tmux.conf</code>）后生效。</p>\n<p>参考链接：<br><a href=\"https://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window\" target=\"_blank\" rel=\"noopener\">https://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window</a></p>\n<a id=\"more\"></a>\n<p>回答部分翻译如下：</p>\n<p>前缀键（通常指 ctrl+b）&amp; 通常与<code>confirm-before -p &quot;kill-window #W? (y/n)&quot; kill-window</code>相绑定，<code>confirm-before</code>导致你需要进行确认的操作。如果你想避免确认步骤，只需要将原有的按键命令解绑，然后直接将其与<code>kill-window</code>重新绑定即可。</p>\n<p>如果你想要知道你的 tmux 配置默认有哪些操作需要确认步骤，使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmux list-keys | grep confirm-before</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>使用 tmux 时经常开启关闭临时面板（panel），每次关闭时 tmux 都会让你确认是否真的要关闭，有些繁琐。<br>将如下配置加入你的<code>.tmux.conf</code>文件来避免繁琐的确认步骤：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-key &amp; kill-window</span><br><span class=\"line\">bind-key x kill-pane</span><br></pre></td></tr></table></figure>\n<p>重启 tmux 服务，或者重新加载 tmux 配置文件（<code>.tmux.conf</code>）后生效。</p>\n<p>参考链接：<br><a href=\"https://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window\" target=\"_blank\" rel=\"noopener\">https://unix.stackexchange.com/questions/30270/tmux-disable-confirmation-prompt-on-kill-window</a></p>","more":"<p>回答部分翻译如下：</p>\n<p>前缀键（通常指 ctrl+b）&amp; 通常与<code>confirm-before -p &quot;kill-window #W? (y/n)&quot; kill-window</code>相绑定，<code>confirm-before</code>导致你需要进行确认的操作。如果你想避免确认步骤，只需要将原有的按键命令解绑，然后直接将其与<code>kill-window</code>重新绑定即可。</p>\n<p>如果你想要知道你的 tmux 配置默认有哪些操作需要确认步骤，使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmux list-keys | grep confirm-before</span><br></pre></td></tr></table></figure></p>"},{"title":"时间顺序","copyright":true,"date":"2016-08-29T15:15:46.000Z","comments":1,"_content":"\n广州，一个微热的下午，一个人躲在楼顶的凉棚下，穿着舅舅的旧汗衫，学着 c++，背着 gre，看着闲书，淡金色的阳光融化在天际，杂乱的花坛和菜地，清凉的积水下青苔密布，真的有一种忽而盛夏的错觉。\n\n--------------------------------------------------------------------------------\n\n读书时，时常因为某些字句触动回忆，竟至情难自已，无法呼吸，不能再阅读下去。\n\n新干线，光是名字就能勾起我美好得令人窒息的回忆......\n名字，是最短的咒语。\n\n--------------------------------------------------------------------------------\n\n暴雨欲来，空气中飘着雨腥味，那种雨水混合着尘土，然后在空气中肆意弥漫的气息，大自然好闲适惬意啊，she just can do whatever she want，not like me。那种庄子所说的自由。很是羡慕啊。\n\n风雨已来，心中躁动难耐。幼稚的灵魂无法找到可以希冀的未来。\n\n我希望我的回忆纯洁、温润如玉。年少的无知、冲动，现在想想就黯然。\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n下面是这些天，写的一点杂碎东西。\nI want to write something, as a matter of fact, I DO NOT know what I'm goning to write.\nI do know, 我想写下一些东西，无论是古老的伸展的汉字，还是由二十六个字母组成的 colorful 字符，我只想体验书写的感觉。用铅笔尖端滑过干净白纸的锐利多刺；用渐渐钝去的笔锋书写哲理，用形如刀锋的笔触写下回忆。事实上这三种笔锋一直都是水乳交融的，I owe you,you belong to me. 真的很喜欢使用铅笔，时光会风化这清邃浅棕的石墨印记。意识的无规则流动，汪洋无语。\n\n--------------------------------------------------------------------------------\n\n很久没有写下韵脚的诗句\n风卷走象牙塔里我的叹息\n笔会钝      感觉会粗粝\n好吧     大学     我恨你\n也许我应该恨我自己\n\n--------------------------------------------------------------------------------\n\n亲爱的，这个日记里面我会写下一些我为人处世之中的一些困扰，当然大都是一些小事，该怎么去处理和避免呢？\n亲爱的你可以告诉我吗？\n\n--------------------------------------------------------------------------------\n\n天空蔚蓝，云朵微澜\n\n天空中的云朵，边缘重叠，光色弥漫，清晰得如同概念。\n\n--------------------------------------------------------------------------------\n\n武汉雷鸣骤雨，我从没觉得闪电也可以如此吓人。\n\n--------------------------------------------------------------------------------\n\n高二那个刚看完《秒速五厘米》的冬日下午，我坐在阳台上，用日记本盛满阳光。\n\n--------------------------------------------------------------------------------\n\n色泽如成熟小麦的金黄马尾、秀发。\n让我想到...... 嗯，每一位男孩子满脑子一直在想的事。\n醇如清凉井水的酒液。\n她湛蓝色双眼衬着神色的波浪金发，映照着身上的淡蓝色礼服。\n我害怕有一天，我会学到迂腐，用 1 和 0 的符号为你写一首诗。\n\n我希望我能更善用时间，用媲美日光的光线温暖自己。\n她的发丝轻触我的脸庞，呼出的温暖气息就像羽毛一样轻触我身。\n\n哇，好大只啊，萌死了。\n听她的呼吸，就像聆听风在林隙间穿梭一样，微弱的细碎响声，像把纸揉碎。\n很奇怪，我没有经历过那样的情感，但是文字却能让我感受到。\n\n--------------------------------------------------------------------------------\n\n生命的千种可能，我的千种名字\n习惯性地在纸上写下我的名字，写下一种承诺。\n很奇妙，不知道是这个名字属于我，还是我属于这个名字。\n这个名字自我出生开始就和我的生命骨血相连，我是别人眼里的这个名字，我支配着这个名字。\n\n--------------------------------------------------------------------------------\n\n漫山的秋意落在身上，青春的梧桐绿了又黄。\n\n--------------------------------------------------------------------------------\n\n半夜空中飞舞的雪晶，不甚明亮的路灯，疏朗的梧桐，云隙间漏下的月光。美丽一如我初来武大的日子。\n\n弹奏键盘的小男孩\n\n--------------------------------------------------------------------------------\n\n帝台在鼓钟之山宴饮百神，还有座山叫高前山，山上的泉水，人称帝台之浆，水质清寒，据说喝了它就不会心痛。\n\n能让我喝一口吗？\n能让全天下人都喝一口吗？\n若真有此水，我愿用我的生命换全天下人共饮一口。\n\n--------------------------------------------------------------------------------\n\n（上面的文字写成于本科的不同时期。基本按照时间顺序整理。）\n","source":"_posts/时间顺序.md","raw":"---\ntitle: 时间顺序\ncopyright: true\ndate: 2016-08-29 23:15:46\ntags: [chaos]\ncomments:\n---\n\n广州，一个微热的下午，一个人躲在楼顶的凉棚下，穿着舅舅的旧汗衫，学着 c++，背着 gre，看着闲书，淡金色的阳光融化在天际，杂乱的花坛和菜地，清凉的积水下青苔密布，真的有一种忽而盛夏的错觉。\n\n--------------------------------------------------------------------------------\n\n读书时，时常因为某些字句触动回忆，竟至情难自已，无法呼吸，不能再阅读下去。\n\n新干线，光是名字就能勾起我美好得令人窒息的回忆......\n名字，是最短的咒语。\n\n--------------------------------------------------------------------------------\n\n暴雨欲来，空气中飘着雨腥味，那种雨水混合着尘土，然后在空气中肆意弥漫的气息，大自然好闲适惬意啊，she just can do whatever she want，not like me。那种庄子所说的自由。很是羡慕啊。\n\n风雨已来，心中躁动难耐。幼稚的灵魂无法找到可以希冀的未来。\n\n我希望我的回忆纯洁、温润如玉。年少的无知、冲动，现在想想就黯然。\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n下面是这些天，写的一点杂碎东西。\nI want to write something, as a matter of fact, I DO NOT know what I'm goning to write.\nI do know, 我想写下一些东西，无论是古老的伸展的汉字，还是由二十六个字母组成的 colorful 字符，我只想体验书写的感觉。用铅笔尖端滑过干净白纸的锐利多刺；用渐渐钝去的笔锋书写哲理，用形如刀锋的笔触写下回忆。事实上这三种笔锋一直都是水乳交融的，I owe you,you belong to me. 真的很喜欢使用铅笔，时光会风化这清邃浅棕的石墨印记。意识的无规则流动，汪洋无语。\n\n--------------------------------------------------------------------------------\n\n很久没有写下韵脚的诗句\n风卷走象牙塔里我的叹息\n笔会钝      感觉会粗粝\n好吧     大学     我恨你\n也许我应该恨我自己\n\n--------------------------------------------------------------------------------\n\n亲爱的，这个日记里面我会写下一些我为人处世之中的一些困扰，当然大都是一些小事，该怎么去处理和避免呢？\n亲爱的你可以告诉我吗？\n\n--------------------------------------------------------------------------------\n\n天空蔚蓝，云朵微澜\n\n天空中的云朵，边缘重叠，光色弥漫，清晰得如同概念。\n\n--------------------------------------------------------------------------------\n\n武汉雷鸣骤雨，我从没觉得闪电也可以如此吓人。\n\n--------------------------------------------------------------------------------\n\n高二那个刚看完《秒速五厘米》的冬日下午，我坐在阳台上，用日记本盛满阳光。\n\n--------------------------------------------------------------------------------\n\n色泽如成熟小麦的金黄马尾、秀发。\n让我想到...... 嗯，每一位男孩子满脑子一直在想的事。\n醇如清凉井水的酒液。\n她湛蓝色双眼衬着神色的波浪金发，映照着身上的淡蓝色礼服。\n我害怕有一天，我会学到迂腐，用 1 和 0 的符号为你写一首诗。\n\n我希望我能更善用时间，用媲美日光的光线温暖自己。\n她的发丝轻触我的脸庞，呼出的温暖气息就像羽毛一样轻触我身。\n\n哇，好大只啊，萌死了。\n听她的呼吸，就像聆听风在林隙间穿梭一样，微弱的细碎响声，像把纸揉碎。\n很奇怪，我没有经历过那样的情感，但是文字却能让我感受到。\n\n--------------------------------------------------------------------------------\n\n生命的千种可能，我的千种名字\n习惯性地在纸上写下我的名字，写下一种承诺。\n很奇妙，不知道是这个名字属于我，还是我属于这个名字。\n这个名字自我出生开始就和我的生命骨血相连，我是别人眼里的这个名字，我支配着这个名字。\n\n--------------------------------------------------------------------------------\n\n漫山的秋意落在身上，青春的梧桐绿了又黄。\n\n--------------------------------------------------------------------------------\n\n半夜空中飞舞的雪晶，不甚明亮的路灯，疏朗的梧桐，云隙间漏下的月光。美丽一如我初来武大的日子。\n\n弹奏键盘的小男孩\n\n--------------------------------------------------------------------------------\n\n帝台在鼓钟之山宴饮百神，还有座山叫高前山，山上的泉水，人称帝台之浆，水质清寒，据说喝了它就不会心痛。\n\n能让我喝一口吗？\n能让全天下人都喝一口吗？\n若真有此水，我愿用我的生命换全天下人共饮一口。\n\n--------------------------------------------------------------------------------\n\n（上面的文字写成于本科的不同时期。基本按照时间顺序整理。）\n","slug":"时间顺序","published":1,"updated":"2019-03-07T01:47:08.078Z","layout":"post","photos":[],"link":"","_id":"cjucbl8es000db9fswcmsgym0","content":"<p>广州，一个微热的下午，一个人躲在楼顶的凉棚下，穿着舅舅的旧汗衫，学着 c++，背着 gre，看着闲书，淡金色的阳光融化在天际，杂乱的花坛和菜地，清凉的积水下青苔密布，真的有一种忽而盛夏的错觉。</p>\n<hr>\n<p>读书时，时常因为某些字句触动回忆，竟至情难自已，无法呼吸，不能再阅读下去。</p>\n<p>新干线，光是名字就能勾起我美好得令人窒息的回忆……<br>名字，是最短的咒语。</p>\n<hr>\n<p>暴雨欲来，空气中飘着雨腥味，那种雨水混合着尘土，然后在空气中肆意弥漫的气息，大自然好闲适惬意啊，she just can do whatever she want，not like me。那种庄子所说的自由。很是羡慕啊。</p>\n<p>风雨已来，心中躁动难耐。幼稚的灵魂无法找到可以希冀的未来。</p>\n<p>我希望我的回忆纯洁、温润如玉。年少的无知、冲动，现在想想就黯然。</p>\n<a id=\"more\"></a>\n<hr>\n<p>下面是这些天，写的一点杂碎东西。<br>I want to write something, as a matter of fact, I DO NOT know what I’m goning to write.<br>I do know, 我想写下一些东西，无论是古老的伸展的汉字，还是由二十六个字母组成的 colorful 字符，我只想体验书写的感觉。用铅笔尖端滑过干净白纸的锐利多刺；用渐渐钝去的笔锋书写哲理，用形如刀锋的笔触写下回忆。事实上这三种笔锋一直都是水乳交融的，I owe you,you belong to me. 真的很喜欢使用铅笔，时光会风化这清邃浅棕的石墨印记。意识的无规则流动，汪洋无语。</p>\n<hr>\n<p>很久没有写下韵脚的诗句<br>风卷走象牙塔里我的叹息<br>笔会钝      感觉会粗粝<br>好吧     大学     我恨你<br>也许我应该恨我自己</p>\n<hr>\n<p>亲爱的，这个日记里面我会写下一些我为人处世之中的一些困扰，当然大都是一些小事，该怎么去处理和避免呢？<br>亲爱的你可以告诉我吗？</p>\n<hr>\n<p>天空蔚蓝，云朵微澜</p>\n<p>天空中的云朵，边缘重叠，光色弥漫，清晰得如同概念。</p>\n<hr>\n<p>武汉雷鸣骤雨，我从没觉得闪电也可以如此吓人。</p>\n<hr>\n<p>高二那个刚看完《秒速五厘米》的冬日下午，我坐在阳台上，用日记本盛满阳光。</p>\n<hr>\n<p>色泽如成熟小麦的金黄马尾、秀发。<br>让我想到…… 嗯，每一位男孩子满脑子一直在想的事。<br>醇如清凉井水的酒液。<br>她湛蓝色双眼衬着神色的波浪金发，映照着身上的淡蓝色礼服。<br>我害怕有一天，我会学到迂腐，用 1 和 0 的符号为你写一首诗。</p>\n<p>我希望我能更善用时间，用媲美日光的光线温暖自己。<br>她的发丝轻触我的脸庞，呼出的温暖气息就像羽毛一样轻触我身。</p>\n<p>哇，好大只啊，萌死了。<br>听她的呼吸，就像聆听风在林隙间穿梭一样，微弱的细碎响声，像把纸揉碎。<br>很奇怪，我没有经历过那样的情感，但是文字却能让我感受到。</p>\n<hr>\n<p>生命的千种可能，我的千种名字<br>习惯性地在纸上写下我的名字，写下一种承诺。<br>很奇妙，不知道是这个名字属于我，还是我属于这个名字。<br>这个名字自我出生开始就和我的生命骨血相连，我是别人眼里的这个名字，我支配着这个名字。</p>\n<hr>\n<p>漫山的秋意落在身上，青春的梧桐绿了又黄。</p>\n<hr>\n<p>半夜空中飞舞的雪晶，不甚明亮的路灯，疏朗的梧桐，云隙间漏下的月光。美丽一如我初来武大的日子。</p>\n<p>弹奏键盘的小男孩</p>\n<hr>\n<p>帝台在鼓钟之山宴饮百神，还有座山叫高前山，山上的泉水，人称帝台之浆，水质清寒，据说喝了它就不会心痛。</p>\n<p>能让我喝一口吗？<br>能让全天下人都喝一口吗？<br>若真有此水，我愿用我的生命换全天下人共饮一口。</p>\n<hr>\n<p>（上面的文字写成于本科的不同时期。基本按照时间顺序整理。）</p>\n","site":{"data":{}},"excerpt":"<p>广州，一个微热的下午，一个人躲在楼顶的凉棚下，穿着舅舅的旧汗衫，学着 c++，背着 gre，看着闲书，淡金色的阳光融化在天际，杂乱的花坛和菜地，清凉的积水下青苔密布，真的有一种忽而盛夏的错觉。</p>\n<hr>\n<p>读书时，时常因为某些字句触动回忆，竟至情难自已，无法呼吸，不能再阅读下去。</p>\n<p>新干线，光是名字就能勾起我美好得令人窒息的回忆……<br>名字，是最短的咒语。</p>\n<hr>\n<p>暴雨欲来，空气中飘着雨腥味，那种雨水混合着尘土，然后在空气中肆意弥漫的气息，大自然好闲适惬意啊，she just can do whatever she want，not like me。那种庄子所说的自由。很是羡慕啊。</p>\n<p>风雨已来，心中躁动难耐。幼稚的灵魂无法找到可以希冀的未来。</p>\n<p>我希望我的回忆纯洁、温润如玉。年少的无知、冲动，现在想想就黯然。</p>","more":"<hr>\n<p>下面是这些天，写的一点杂碎东西。<br>I want to write something, as a matter of fact, I DO NOT know what I’m goning to write.<br>I do know, 我想写下一些东西，无论是古老的伸展的汉字，还是由二十六个字母组成的 colorful 字符，我只想体验书写的感觉。用铅笔尖端滑过干净白纸的锐利多刺；用渐渐钝去的笔锋书写哲理，用形如刀锋的笔触写下回忆。事实上这三种笔锋一直都是水乳交融的，I owe you,you belong to me. 真的很喜欢使用铅笔，时光会风化这清邃浅棕的石墨印记。意识的无规则流动，汪洋无语。</p>\n<hr>\n<p>很久没有写下韵脚的诗句<br>风卷走象牙塔里我的叹息<br>笔会钝      感觉会粗粝<br>好吧     大学     我恨你<br>也许我应该恨我自己</p>\n<hr>\n<p>亲爱的，这个日记里面我会写下一些我为人处世之中的一些困扰，当然大都是一些小事，该怎么去处理和避免呢？<br>亲爱的你可以告诉我吗？</p>\n<hr>\n<p>天空蔚蓝，云朵微澜</p>\n<p>天空中的云朵，边缘重叠，光色弥漫，清晰得如同概念。</p>\n<hr>\n<p>武汉雷鸣骤雨，我从没觉得闪电也可以如此吓人。</p>\n<hr>\n<p>高二那个刚看完《秒速五厘米》的冬日下午，我坐在阳台上，用日记本盛满阳光。</p>\n<hr>\n<p>色泽如成熟小麦的金黄马尾、秀发。<br>让我想到…… 嗯，每一位男孩子满脑子一直在想的事。<br>醇如清凉井水的酒液。<br>她湛蓝色双眼衬着神色的波浪金发，映照着身上的淡蓝色礼服。<br>我害怕有一天，我会学到迂腐，用 1 和 0 的符号为你写一首诗。</p>\n<p>我希望我能更善用时间，用媲美日光的光线温暖自己。<br>她的发丝轻触我的脸庞，呼出的温暖气息就像羽毛一样轻触我身。</p>\n<p>哇，好大只啊，萌死了。<br>听她的呼吸，就像聆听风在林隙间穿梭一样，微弱的细碎响声，像把纸揉碎。<br>很奇怪，我没有经历过那样的情感，但是文字却能让我感受到。</p>\n<hr>\n<p>生命的千种可能，我的千种名字<br>习惯性地在纸上写下我的名字，写下一种承诺。<br>很奇妙，不知道是这个名字属于我，还是我属于这个名字。<br>这个名字自我出生开始就和我的生命骨血相连，我是别人眼里的这个名字，我支配着这个名字。</p>\n<hr>\n<p>漫山的秋意落在身上，青春的梧桐绿了又黄。</p>\n<hr>\n<p>半夜空中飞舞的雪晶，不甚明亮的路灯，疏朗的梧桐，云隙间漏下的月光。美丽一如我初来武大的日子。</p>\n<p>弹奏键盘的小男孩</p>\n<hr>\n<p>帝台在鼓钟之山宴饮百神，还有座山叫高前山，山上的泉水，人称帝台之浆，水质清寒，据说喝了它就不会心痛。</p>\n<p>能让我喝一口吗？<br>能让全天下人都喝一口吗？<br>若真有此水，我愿用我的生命换全天下人共饮一口。</p>\n<hr>\n<p>（上面的文字写成于本科的不同时期。基本按照时间顺序整理。）</p>"},{"title":"深入解析 Docker 镜像机制 -- 为何 Docker 镜像 ID 会显示 missing ?『译』","copyright":true,"date":"2019-01-09T08:57:40.000Z","comments":1,"_content":"\n_原文地址：https://windsock.io/explaining-docker-image-ids/_\n_Author：Nigel Brown_\n_Translator：SU Hang_\n_经原作者 Nigel Brown 授权翻译 | Translator authorized by the Nigel Brown_\n\n当 Docker v1.10 发布时，Docker Engine 处理镜像的方式发生了相当大的变化。虽然这种[新的处理机制](https://blog.docker.com/2016/01/docker-1-10-rc/) 被解释得很清楚，并且对 Docker 的常规使用（除了镜像迁移之外）几乎没有影响，但是有一些 UI 变动还是引起了一些[误解](https://github.com/moby/moby/issues/20131)。那么这种变化是什么，为什么 `docker history` 命令会显示一些镜像层的 ID 为 `<missing>`呢？\n\n<!--more-->\n\n```bash\n$ docker history debian\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\n1742affe03b5        10 days ago         /bin/sh -c #(nop) CMD [\"/bin/bash\"]             0 B\n<missing>           10 days ago         /bin/sh -c #(nop) ADD file:5d8521419ad6cfb695   125.1 MB\n```\n\n#### 前言\n首先交代一些相关背景。docker 镜像是用于创建容器的只读模板，并提供基于多层文件和目录的顺序联合的文件系统，这种[联合文件系统](https://en.wikipedia.org/wiki/Union_mount) 使得 Docker 镜像得以复用。Docker 平台提供了\"共享镜像层\"这一基本组件，通常使用[写时复制（COW）](https://zh.wikipedia.org/wiki/%E5%AF%AB%E5%85%A5%E6%99%82%E8%A4%87%E8%A3%BD) 机制来实现。在容器运行的生命周期中，如果容器需要从下层的某个只读镜像中修改文件，则在进行更改之前，它会将文件复制到其自己的专用读写层 - 即容器层。\n\n在 Docker 镜像构建过程中，会创建一个镜像或'diff'，在容器中运行的命令 - 譬如上面提到的 `/bin/bash`等等 - 会生成新的或修改过的文件和目录。这些新的或修改过的文件和目录被“提交”到容器层。`docker history` 输出显示 `debian` 镜像有两层。\n\n#### 历史遗留\n历史上（在 Docker v1.10 版本之前），每次由于提交操作（译者注：`docker commit`) 而创建新镜像时，就会随机生成一个 256 位 [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) 标识来代表这唯一镜像，通常称为镜像 ID（在 UI 中显示为短 12 位十六进制字符串或长 64 位十六进制字符串）。Docker 将镜像内容存储在名称与镜像 ID 相同的目录中。在该目录内部，包括镜像的配置信息 (configuration object ) 和 镜像 ID 和镜像的父镜像的 ID 和。通过这种方式，Docker 能够为容器构建文件系统，每个镜像依次引用其父镜像内容，直到到达没有父级的基本镜像。每一层镜像也可以用有意义的名称（例如 `my_image:1.0`）标记（可选，不强制），但这通常保留用于叶子镜像。这在下图中描述：\n\n![Historical_Image](Historical_Image.png)\n\n使用 `docker inspect` 命令将输出：\n```bash\n$ docker inspect my_image:1.0\n[\n    {\n        \"Id\": \"ca1f5f48ef431c0818d5e8797dfe707557bdc728fe7c3027c75de18f934a3b76\",\n        \"Parent\": \"91bac885982d2d564c0e1869e8b8827c435eead714c06d4c670aaae616c1542c\"\n        ...\n        ...\n```\n这种方法在很长一段时间都工作良好，但随着时间的推移，由于各种原因，它被认为是一种次优的选择。驱使作出改变的一个重要原因是：当从 Docker registry（如 [Docker Hub](https://hub.docker.com/)）中推送到或拉取时，缺乏检测镜像内容是否在被篡改的方法。这收到了整个社区的[强烈批评](https://github.com/moby/moby/issues/9719)，最终促使了内容可寻址 ID (content addressable IDs) 的诞生。\n\n#### 内容可寻址 ID\n从 Docker v1.10 开始，镜像和层级 (images and layers) 不再是同义词。除此之外，镜像可以直接引用一个或多个层级。\n\n现在层级通过摘要来进行识别，摘要采用如下形式：`algorithm:hex` 例如：\n```bash\nsha256:fc92eec5cac70b0c324cec2933cd7db1c0eae7c9e2649e42d02e77eb6da0d15f\n```\n\n通过将 [SHA256](https://github.com/moby/moby/issues/9719) 算法应用于镜像的内容之上，来计算十六进制 hash 值。如果内容发生变化，则计算的摘要也将发生变化，这意味着 Docker 可以使用其发布的摘要来检查镜像的内容，以验证其是否被篡改。层级不同于\"镜像\"这个概念，也不属于\"镜像\"这个概念的一部分，它只是文件和目录的集合。\n\n现在的 Docker 镜像由一个配置对象 (configuration object) 组成，配置对象中包含了一个有序层级摘要列表，这使得 Docker Engine 能够根据层级摘要而不是父镜像来组装容器的文件系统。镜像 ID 也是一个摘要，是镜像配置对象的 SHA256 哈希值，镜像配置对象涵盖了组成该镜像文件系统的所有\"层级\"的 hash 摘要。下图描绘了 Docker v1.10 之后镜像和层级之间的关系：\n\n![Content_Addressable_Image](Content_Addressable_Image.png)\n\n为了便于阅读，镜像和镜像的 SHA256 hash 摘要被缩短了。\n\n用于存储层级内容的目录 `diff` , 现在以随机生成的“cache ID”命名，Docker Engine 维护层级与其 cache ID 之间的关联性，以便它在磁盘上定位层级内容的位置。\n\n因此，当从 registery 中提取 Docker 镜像时，`docker history` 命令用于显示其内容，其输出类似于这样：\n```bash\n$ docker history swarm\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\nc54bba046158        9 days ago          /bin/sh -c #(nop) CMD [\"--help\"]                0 B\n<missing>           9 days ago          /bin/sh -c #(nop) ENTRYPOINT &{[\"/swarm\"]}      0 B\n<missing>           9 days ago          /bin/sh -c #(nop) VOLUME [/.swarm]              0 B\n<missing>           9 days ago          /bin/sh -c #(nop) EXPOSE 2375/tcp               0 B\n<missing>           9 days ago          /bin/sh -c #(nop) ENV SWARM_HOST=:2375          0 B\n<missing>           9 days ago          /bin/sh -c #(nop) COPY dir:b76b2255a3b423981a   0 B\n<missing>           9 days ago          /bin/sh -c #(nop) COPY file:5acf949e76228329d   277.2 kB\n<missing>           9 days ago          /bin/sh -c #(nop) COPY file:a2157cec2320f541a   19.06 MB\n```\n\n该命令提供具体镜像及其层级的详细组成信息。除了镜像的最上面一个层级之外（译者注：这不一定）, 所有 `IMAGE` 字段中的值都是`<missing>`, 很不幸，这个值极具误导性，因为它给人一种错误的暗示。但严格来说这么做没错，因为层级不再与镜像同义。我认为把这个领域留空是更恰当的（译者在这里表示赞同）。此外，镜像 ID 似乎仅仅与最上层相关联，但实际上，镜像 ID 不属于任何层。相反，这些层级共同属于该镜像。\n\n#### 本地构建镜像\n虽然这个内容可寻址镜像的描述适用于 Docker v1.10 版本 之后的所有 Docker 镜像，但 Docker 主机上的本地构建镜像的方式略有不同。本地构建的镜像保持不变 - 它是包含配置项的配置对象，包括层级摘要的有序列表。\n\n但是，当本地 Docker 主机上构建的层级提交给镜像时，会同时创建“中间”镜像。与所有其他镜像一样，\"中间镜像\"也具有配置项，该配置项是组成镜像的层级摘要列表，并且其 ID（或摘要）包含配置对象的 hash 值。中间镜像没有标记名 (tag name)，但是，它们有一个“父”键（译者注：原文这里有点小瑕疵，不是\"父\"键，在代码中是以对象成员表示的），其中包含父镜像的 ID。\n\n使用中间镜像和包含对父镜像的引用的目的，是为了便于 Docker [构建缓存](https://docs.docker.com/engine/reference/builder/#from) 。构建缓存是 Docker 平台的另一个重要特性，用于帮助 Docker 引擎利用预先存在的层级，以免为相同的构建命令不必要地重复生成内容。它使得构建过程更有效。在本地构建镜像时，该 `docker history` 命令可能提供类似于以下内容的输出：\n\n```bash\n$ docker history jbloggs/my_image:latest\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\n26cca5b0c787        52 seconds ago      /bin/sh -c #(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/b   0 B\n97e47fb9e0a6        52 seconds ago      /bin/sh -c apt-get update &&     apt-get inst   16.98 MB\n1742affe03b5        13 days ago         /bin/sh -c #(nop) CMD [\"/bin/bash\"]             0 B\n<missing>           13 days ago         /bin/sh -c #(nop) ADD file:5d8521419ad6cfb695   125.1 MB\n```\n\n在此示例中，上面两个层级是在本地镜像构建期间创建的，而底层是来自基本镜像（例如 [Dockerfile 指令](https://docs.docker.com/engine/reference/builder/#from) `FROM debian`）。我们可以使用 `docker inspect` 命令查看与该镜像关联的层级摘要：\n\n```\n$ docker inspect jboggs/my_image:latest\n[\n    {\n        ...\n        ...\n        \"RootFS\": {\n            \"Type\": \"layers\",\n            \"Layers\": [\n                \"sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90\",\n                \"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\",\n                \"sha256:f22bfbc1df820c465d94215e45bf9b1f0ae0fe3435a90dc5296a4b55712f46e7\"\n            ]\n        }\n    }\n]\n```\n\n`docker history` 命令显示镜像具有四个层级，但 `docker inspect` 显示仅包含三个镜像。这是因为两条 `CMD` 指令仅为镜像生成元数据，不添加任何实质性内容，因此'diff'为空。摘要 5f70bf18a08a 是空镜像的 SHA256 哈希值，由两个相关层共享。\n\n被推送到 registry 的本地构建镜像，是仅有的\"叶子镜像\", 与它的组成层级一同上传，并随后由另一个 Docker 主机拉取，这过程将不会产生任何中间父镜像。这是因为一旦借助 registry 将镜像提供给不同 Docker 主机上的其他潜在用户时，它的属性将变为只读，并且不再需要构建缓存 (build cache) 组件的支持。所以此时，`<missing>`值将被插入到其相应位置。\n\n将镜像推送到 registry 可能会产生如下输出：\n```bash\n$ docker push jbloggs/my_image:latest\nThe push refers to a repository [docker.io/jbloggs/my_image]\nf22bfbc1df82: Pushed\n5f70bf18a086: Layer already exists\n4dcab49015d4: Layer already exists\nlatest: digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820 size: 3147\n```\n\n在此示例中，仅推送了一个层级，因为 registry 中已存在两个层级，这两个层级可能被一个或多个其他镜像引用。\n\n#### 最后的\"小别扭\"\nDocker 的层级“diffs”摘要，包含 `diff`目录 的 tar 包的 sha256 hash 值。在将镜像上传到 registry 之前，会对其进行压缩以提高带宽效率。除此之外，还会创建清单 (manifest) 来描述镜像的内容，它包含压缩层级内容的摘要。因此，清单中的层级摘要与在其未压缩状态下生成的摘要不同。该清单也会被推送到 registry。\n\n压缩层 diff 的摘要可以被称为“分发摘要”，而未压缩层 diff 的摘要可以被称为“内容摘要”。因此，当我们在不同的 Docker 主机上提取示例镜像时，`docker pull` 命令会提供以下输出：\n\n```bash\n$ docker pull jbloggs/my_image\nUsing default tag: latest\nlatest: Pulling from jbloggs/my_image\n\n51f5c6a04d83: Pull complete\na3ed95caeb02: Pull complete\n9a246d793396: Pull complete\nDigest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820\nStatus: Downloaded newer image for jbloggs/my_image:latest\n```\n\n`docker pull` 命令输出中的分发摘要，与`docker push`命令输出的摘要非常不同 。但是，pull 将解压缩层级，`docker inspect` 命令的输出将与我们在构建镜像后看到的内容摘要相同。\n\n#### 总结\n在 Docker v1.10 中更改镜像和镜像处理机制之后：\n\n* Docker 镜像基于它存储到层级差异 (diffs) 的引用为派生容器提供文件系统；\n* 使用摘要引用层级差异 (diffs)，摘要包含差异 (diffs) 内容归档（译者注：就是 tar 包）的 SHA256 hash 值；\n* Docker 镜像的 ID 是一个摘要，其中包含镜像的 JSON 配置对象的 SHA256 哈希值；\n* 为了维护构建缓存，Docker 在本地镜像构建期间会创建中间镜像；\n* 镜像清单会在推送镜像时一并推送到 Docker registry;\n* 镜像清单包含镜像层级的摘要，其中包含压缩的归档差异内容的 SHA256 哈希值；\n","source":"_posts/Inside-Docker-images-and-layers.md","raw":"---\ntitle: 深入解析 Docker 镜像机制 -- 为何 Docker 镜像 ID 会显示 missing ?『译』\ncopyright: true\ndate: 2019-01-09 16:57:40\ntags: [Docker]\ncomments:\n---\n\n_原文地址：https://windsock.io/explaining-docker-image-ids/_\n_Author：Nigel Brown_\n_Translator：SU Hang_\n_经原作者 Nigel Brown 授权翻译 | Translator authorized by the Nigel Brown_\n\n当 Docker v1.10 发布时，Docker Engine 处理镜像的方式发生了相当大的变化。虽然这种[新的处理机制](https://blog.docker.com/2016/01/docker-1-10-rc/) 被解释得很清楚，并且对 Docker 的常规使用（除了镜像迁移之外）几乎没有影响，但是有一些 UI 变动还是引起了一些[误解](https://github.com/moby/moby/issues/20131)。那么这种变化是什么，为什么 `docker history` 命令会显示一些镜像层的 ID 为 `<missing>`呢？\n\n<!--more-->\n\n```bash\n$ docker history debian\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\n1742affe03b5        10 days ago         /bin/sh -c #(nop) CMD [\"/bin/bash\"]             0 B\n<missing>           10 days ago         /bin/sh -c #(nop) ADD file:5d8521419ad6cfb695   125.1 MB\n```\n\n#### 前言\n首先交代一些相关背景。docker 镜像是用于创建容器的只读模板，并提供基于多层文件和目录的顺序联合的文件系统，这种[联合文件系统](https://en.wikipedia.org/wiki/Union_mount) 使得 Docker 镜像得以复用。Docker 平台提供了\"共享镜像层\"这一基本组件，通常使用[写时复制（COW）](https://zh.wikipedia.org/wiki/%E5%AF%AB%E5%85%A5%E6%99%82%E8%A4%87%E8%A3%BD) 机制来实现。在容器运行的生命周期中，如果容器需要从下层的某个只读镜像中修改文件，则在进行更改之前，它会将文件复制到其自己的专用读写层 - 即容器层。\n\n在 Docker 镜像构建过程中，会创建一个镜像或'diff'，在容器中运行的命令 - 譬如上面提到的 `/bin/bash`等等 - 会生成新的或修改过的文件和目录。这些新的或修改过的文件和目录被“提交”到容器层。`docker history` 输出显示 `debian` 镜像有两层。\n\n#### 历史遗留\n历史上（在 Docker v1.10 版本之前），每次由于提交操作（译者注：`docker commit`) 而创建新镜像时，就会随机生成一个 256 位 [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) 标识来代表这唯一镜像，通常称为镜像 ID（在 UI 中显示为短 12 位十六进制字符串或长 64 位十六进制字符串）。Docker 将镜像内容存储在名称与镜像 ID 相同的目录中。在该目录内部，包括镜像的配置信息 (configuration object ) 和 镜像 ID 和镜像的父镜像的 ID 和。通过这种方式，Docker 能够为容器构建文件系统，每个镜像依次引用其父镜像内容，直到到达没有父级的基本镜像。每一层镜像也可以用有意义的名称（例如 `my_image:1.0`）标记（可选，不强制），但这通常保留用于叶子镜像。这在下图中描述：\n\n![Historical_Image](Historical_Image.png)\n\n使用 `docker inspect` 命令将输出：\n```bash\n$ docker inspect my_image:1.0\n[\n    {\n        \"Id\": \"ca1f5f48ef431c0818d5e8797dfe707557bdc728fe7c3027c75de18f934a3b76\",\n        \"Parent\": \"91bac885982d2d564c0e1869e8b8827c435eead714c06d4c670aaae616c1542c\"\n        ...\n        ...\n```\n这种方法在很长一段时间都工作良好，但随着时间的推移，由于各种原因，它被认为是一种次优的选择。驱使作出改变的一个重要原因是：当从 Docker registry（如 [Docker Hub](https://hub.docker.com/)）中推送到或拉取时，缺乏检测镜像内容是否在被篡改的方法。这收到了整个社区的[强烈批评](https://github.com/moby/moby/issues/9719)，最终促使了内容可寻址 ID (content addressable IDs) 的诞生。\n\n#### 内容可寻址 ID\n从 Docker v1.10 开始，镜像和层级 (images and layers) 不再是同义词。除此之外，镜像可以直接引用一个或多个层级。\n\n现在层级通过摘要来进行识别，摘要采用如下形式：`algorithm:hex` 例如：\n```bash\nsha256:fc92eec5cac70b0c324cec2933cd7db1c0eae7c9e2649e42d02e77eb6da0d15f\n```\n\n通过将 [SHA256](https://github.com/moby/moby/issues/9719) 算法应用于镜像的内容之上，来计算十六进制 hash 值。如果内容发生变化，则计算的摘要也将发生变化，这意味着 Docker 可以使用其发布的摘要来检查镜像的内容，以验证其是否被篡改。层级不同于\"镜像\"这个概念，也不属于\"镜像\"这个概念的一部分，它只是文件和目录的集合。\n\n现在的 Docker 镜像由一个配置对象 (configuration object) 组成，配置对象中包含了一个有序层级摘要列表，这使得 Docker Engine 能够根据层级摘要而不是父镜像来组装容器的文件系统。镜像 ID 也是一个摘要，是镜像配置对象的 SHA256 哈希值，镜像配置对象涵盖了组成该镜像文件系统的所有\"层级\"的 hash 摘要。下图描绘了 Docker v1.10 之后镜像和层级之间的关系：\n\n![Content_Addressable_Image](Content_Addressable_Image.png)\n\n为了便于阅读，镜像和镜像的 SHA256 hash 摘要被缩短了。\n\n用于存储层级内容的目录 `diff` , 现在以随机生成的“cache ID”命名，Docker Engine 维护层级与其 cache ID 之间的关联性，以便它在磁盘上定位层级内容的位置。\n\n因此，当从 registery 中提取 Docker 镜像时，`docker history` 命令用于显示其内容，其输出类似于这样：\n```bash\n$ docker history swarm\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\nc54bba046158        9 days ago          /bin/sh -c #(nop) CMD [\"--help\"]                0 B\n<missing>           9 days ago          /bin/sh -c #(nop) ENTRYPOINT &{[\"/swarm\"]}      0 B\n<missing>           9 days ago          /bin/sh -c #(nop) VOLUME [/.swarm]              0 B\n<missing>           9 days ago          /bin/sh -c #(nop) EXPOSE 2375/tcp               0 B\n<missing>           9 days ago          /bin/sh -c #(nop) ENV SWARM_HOST=:2375          0 B\n<missing>           9 days ago          /bin/sh -c #(nop) COPY dir:b76b2255a3b423981a   0 B\n<missing>           9 days ago          /bin/sh -c #(nop) COPY file:5acf949e76228329d   277.2 kB\n<missing>           9 days ago          /bin/sh -c #(nop) COPY file:a2157cec2320f541a   19.06 MB\n```\n\n该命令提供具体镜像及其层级的详细组成信息。除了镜像的最上面一个层级之外（译者注：这不一定）, 所有 `IMAGE` 字段中的值都是`<missing>`, 很不幸，这个值极具误导性，因为它给人一种错误的暗示。但严格来说这么做没错，因为层级不再与镜像同义。我认为把这个领域留空是更恰当的（译者在这里表示赞同）。此外，镜像 ID 似乎仅仅与最上层相关联，但实际上，镜像 ID 不属于任何层。相反，这些层级共同属于该镜像。\n\n#### 本地构建镜像\n虽然这个内容可寻址镜像的描述适用于 Docker v1.10 版本 之后的所有 Docker 镜像，但 Docker 主机上的本地构建镜像的方式略有不同。本地构建的镜像保持不变 - 它是包含配置项的配置对象，包括层级摘要的有序列表。\n\n但是，当本地 Docker 主机上构建的层级提交给镜像时，会同时创建“中间”镜像。与所有其他镜像一样，\"中间镜像\"也具有配置项，该配置项是组成镜像的层级摘要列表，并且其 ID（或摘要）包含配置对象的 hash 值。中间镜像没有标记名 (tag name)，但是，它们有一个“父”键（译者注：原文这里有点小瑕疵，不是\"父\"键，在代码中是以对象成员表示的），其中包含父镜像的 ID。\n\n使用中间镜像和包含对父镜像的引用的目的，是为了便于 Docker [构建缓存](https://docs.docker.com/engine/reference/builder/#from) 。构建缓存是 Docker 平台的另一个重要特性，用于帮助 Docker 引擎利用预先存在的层级，以免为相同的构建命令不必要地重复生成内容。它使得构建过程更有效。在本地构建镜像时，该 `docker history` 命令可能提供类似于以下内容的输出：\n\n```bash\n$ docker history jbloggs/my_image:latest\nIMAGE               CREATED             CREATED BY                                      SIZE                COMMENT\n26cca5b0c787        52 seconds ago      /bin/sh -c #(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/b   0 B\n97e47fb9e0a6        52 seconds ago      /bin/sh -c apt-get update &&     apt-get inst   16.98 MB\n1742affe03b5        13 days ago         /bin/sh -c #(nop) CMD [\"/bin/bash\"]             0 B\n<missing>           13 days ago         /bin/sh -c #(nop) ADD file:5d8521419ad6cfb695   125.1 MB\n```\n\n在此示例中，上面两个层级是在本地镜像构建期间创建的，而底层是来自基本镜像（例如 [Dockerfile 指令](https://docs.docker.com/engine/reference/builder/#from) `FROM debian`）。我们可以使用 `docker inspect` 命令查看与该镜像关联的层级摘要：\n\n```\n$ docker inspect jboggs/my_image:latest\n[\n    {\n        ...\n        ...\n        \"RootFS\": {\n            \"Type\": \"layers\",\n            \"Layers\": [\n                \"sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90\",\n                \"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\",\n                \"sha256:f22bfbc1df820c465d94215e45bf9b1f0ae0fe3435a90dc5296a4b55712f46e7\"\n            ]\n        }\n    }\n]\n```\n\n`docker history` 命令显示镜像具有四个层级，但 `docker inspect` 显示仅包含三个镜像。这是因为两条 `CMD` 指令仅为镜像生成元数据，不添加任何实质性内容，因此'diff'为空。摘要 5f70bf18a08a 是空镜像的 SHA256 哈希值，由两个相关层共享。\n\n被推送到 registry 的本地构建镜像，是仅有的\"叶子镜像\", 与它的组成层级一同上传，并随后由另一个 Docker 主机拉取，这过程将不会产生任何中间父镜像。这是因为一旦借助 registry 将镜像提供给不同 Docker 主机上的其他潜在用户时，它的属性将变为只读，并且不再需要构建缓存 (build cache) 组件的支持。所以此时，`<missing>`值将被插入到其相应位置。\n\n将镜像推送到 registry 可能会产生如下输出：\n```bash\n$ docker push jbloggs/my_image:latest\nThe push refers to a repository [docker.io/jbloggs/my_image]\nf22bfbc1df82: Pushed\n5f70bf18a086: Layer already exists\n4dcab49015d4: Layer already exists\nlatest: digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820 size: 3147\n```\n\n在此示例中，仅推送了一个层级，因为 registry 中已存在两个层级，这两个层级可能被一个或多个其他镜像引用。\n\n#### 最后的\"小别扭\"\nDocker 的层级“diffs”摘要，包含 `diff`目录 的 tar 包的 sha256 hash 值。在将镜像上传到 registry 之前，会对其进行压缩以提高带宽效率。除此之外，还会创建清单 (manifest) 来描述镜像的内容，它包含压缩层级内容的摘要。因此，清单中的层级摘要与在其未压缩状态下生成的摘要不同。该清单也会被推送到 registry。\n\n压缩层 diff 的摘要可以被称为“分发摘要”，而未压缩层 diff 的摘要可以被称为“内容摘要”。因此，当我们在不同的 Docker 主机上提取示例镜像时，`docker pull` 命令会提供以下输出：\n\n```bash\n$ docker pull jbloggs/my_image\nUsing default tag: latest\nlatest: Pulling from jbloggs/my_image\n\n51f5c6a04d83: Pull complete\na3ed95caeb02: Pull complete\n9a246d793396: Pull complete\nDigest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820\nStatus: Downloaded newer image for jbloggs/my_image:latest\n```\n\n`docker pull` 命令输出中的分发摘要，与`docker push`命令输出的摘要非常不同 。但是，pull 将解压缩层级，`docker inspect` 命令的输出将与我们在构建镜像后看到的内容摘要相同。\n\n#### 总结\n在 Docker v1.10 中更改镜像和镜像处理机制之后：\n\n* Docker 镜像基于它存储到层级差异 (diffs) 的引用为派生容器提供文件系统；\n* 使用摘要引用层级差异 (diffs)，摘要包含差异 (diffs) 内容归档（译者注：就是 tar 包）的 SHA256 hash 值；\n* Docker 镜像的 ID 是一个摘要，其中包含镜像的 JSON 配置对象的 SHA256 哈希值；\n* 为了维护构建缓存，Docker 在本地镜像构建期间会创建中间镜像；\n* 镜像清单会在推送镜像时一并推送到 Docker registry;\n* 镜像清单包含镜像层级的摘要，其中包含压缩的归档差异内容的 SHA256 哈希值；\n","slug":"Inside-Docker-images-and-layers","published":1,"updated":"2019-03-18T08:46:18.631Z","layout":"post","photos":[],"link":"","_id":"cjucbl8l20010b9fsmzqdcd65","content":"<p><em>原文地址：<a href=\"https://windsock.io/explaining-docker-image-ids/\" target=\"_blank\" rel=\"noopener\">https://windsock.io/explaining-docker-image-ids/</a></em><br><em>Author：Nigel Brown</em><br><em>Translator：SU Hang</em><br><em>经原作者 Nigel Brown 授权翻译 | Translator authorized by the Nigel Brown</em></p>\n<p>当 Docker v1.10 发布时，Docker Engine 处理镜像的方式发生了相当大的变化。虽然这种<a href=\"https://blog.docker.com/2016/01/docker-1-10-rc/\" target=\"_blank\" rel=\"noopener\">新的处理机制</a> 被解释得很清楚，并且对 Docker 的常规使用（除了镜像迁移之外）几乎没有影响，但是有一些 UI 变动还是引起了一些<a href=\"https://github.com/moby/moby/issues/20131\" target=\"_blank\" rel=\"noopener\">误解</a>。那么这种变化是什么，为什么 <code>docker history</code> 命令会显示一些镜像层的 ID 为 <code>&lt;missing&gt;</code>呢？</p>\n<a id=\"more\"></a>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> debian</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">1742affe03b5        10 days ago         /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/bash\"]             0 B</span></span><br><span class=\"line\">&lt;missing&gt;           10 days ago         /bin/sh -c <span class=\"comment\">#(nop) ADD file:5d8521419ad6cfb695   125.1 MB</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>首先交代一些相关背景。docker 镜像是用于创建容器的只读模板，并提供基于多层文件和目录的顺序联合的文件系统，这种<a href=\"https://en.wikipedia.org/wiki/Union_mount\" target=\"_blank\" rel=\"noopener\">联合文件系统</a> 使得 Docker 镜像得以复用。Docker 平台提供了”共享镜像层”这一基本组件，通常使用<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%AB%E5%85%A5%E6%99%82%E8%A4%87%E8%A3%BD\" target=\"_blank\" rel=\"noopener\">写时复制（COW）</a> 机制来实现。在容器运行的生命周期中，如果容器需要从下层的某个只读镜像中修改文件，则在进行更改之前，它会将文件复制到其自己的专用读写层 - 即容器层。</p>\n<p>在 Docker 镜像构建过程中，会创建一个镜像或’diff’，在容器中运行的命令 - 譬如上面提到的 <code>/bin/bash</code>等等 - 会生成新的或修改过的文件和目录。这些新的或修改过的文件和目录被“提交”到容器层。<code>docker history</code> 输出显示 <code>debian</code> 镜像有两层。</p>\n<h4 id=\"历史遗留\"><a href=\"#历史遗留\" class=\"headerlink\" title=\"历史遗留\"></a>历史遗留</h4><p>历史上（在 Docker v1.10 版本之前），每次由于提交操作（译者注：<code>docker commit</code>) 而创建新镜像时，就会随机生成一个 256 位 <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" target=\"_blank\" rel=\"noopener\">UUID</a> 标识来代表这唯一镜像，通常称为镜像 ID（在 UI 中显示为短 12 位十六进制字符串或长 64 位十六进制字符串）。Docker 将镜像内容存储在名称与镜像 ID 相同的目录中。在该目录内部，包括镜像的配置信息 (configuration object ) 和 镜像 ID 和镜像的父镜像的 ID 和。通过这种方式，Docker 能够为容器构建文件系统，每个镜像依次引用其父镜像内容，直到到达没有父级的基本镜像。每一层镜像也可以用有意义的名称（例如 <code>my_image:1.0</code>）标记（可选，不强制），但这通常保留用于叶子镜像。这在下图中描述：</p>\n<p><img src=\"Historical_Image.png\" alt=\"Historical_Image\"></p>\n<p>使用 <code>docker inspect</code> 命令将输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker inspect my_image:1.0</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">\"Id\"</span>: <span class=\"string\">\"ca1f5f48ef431c0818d5e8797dfe707557bdc728fe7c3027c75de18f934a3b76\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Parent\"</span>: <span class=\"string\">\"91bac885982d2d564c0e1869e8b8827c435eead714c06d4c670aaae616c1542c\"</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ...</span><br></pre></td></tr></table></figure></p>\n<p>这种方法在很长一段时间都工作良好，但随着时间的推移，由于各种原因，它被认为是一种次优的选择。驱使作出改变的一个重要原因是：当从 Docker registry（如 <a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker Hub</a>）中推送到或拉取时，缺乏检测镜像内容是否在被篡改的方法。这收到了整个社区的<a href=\"https://github.com/moby/moby/issues/9719\" target=\"_blank\" rel=\"noopener\">强烈批评</a>，最终促使了内容可寻址 ID (content addressable IDs) 的诞生。</p>\n<h4 id=\"内容可寻址-ID\"><a href=\"#内容可寻址-ID\" class=\"headerlink\" title=\"内容可寻址 ID\"></a>内容可寻址 ID</h4><p>从 Docker v1.10 开始，镜像和层级 (images and layers) 不再是同义词。除此之外，镜像可以直接引用一个或多个层级。</p>\n<p>现在层级通过摘要来进行识别，摘要采用如下形式：<code>algorithm:hex</code> 例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sha256:fc92eec5cac70b0c324cec2933cd7db1c0eae7c9e2649e42d02e77eb6da0d15f</span><br></pre></td></tr></table></figure></p>\n<p>通过将 <a href=\"https://github.com/moby/moby/issues/9719\" target=\"_blank\" rel=\"noopener\">SHA256</a> 算法应用于镜像的内容之上，来计算十六进制 hash 值。如果内容发生变化，则计算的摘要也将发生变化，这意味着 Docker 可以使用其发布的摘要来检查镜像的内容，以验证其是否被篡改。层级不同于”镜像”这个概念，也不属于”镜像”这个概念的一部分，它只是文件和目录的集合。</p>\n<p>现在的 Docker 镜像由一个配置对象 (configuration object) 组成，配置对象中包含了一个有序层级摘要列表，这使得 Docker Engine 能够根据层级摘要而不是父镜像来组装容器的文件系统。镜像 ID 也是一个摘要，是镜像配置对象的 SHA256 哈希值，镜像配置对象涵盖了组成该镜像文件系统的所有”层级”的 hash 摘要。下图描绘了 Docker v1.10 之后镜像和层级之间的关系：</p>\n<p><img src=\"Content_Addressable_Image.png\" alt=\"Content_Addressable_Image\"></p>\n<p>为了便于阅读，镜像和镜像的 SHA256 hash 摘要被缩短了。</p>\n<p>用于存储层级内容的目录 <code>diff</code> , 现在以随机生成的“cache ID”命名，Docker Engine 维护层级与其 cache ID 之间的关联性，以便它在磁盘上定位层级内容的位置。</p>\n<p>因此，当从 registery 中提取 Docker 镜像时，<code>docker history</code> 命令用于显示其内容，其输出类似于这样：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> swarm</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">c54bba046158        9 days ago          /bin/sh -c <span class=\"comment\">#(nop) CMD [\"--help\"]                0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) ENTRYPOINT &amp;&#123;[\"/swarm\"]&#125;      0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) VOLUME [/.swarm]              0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) EXPOSE 2375/tcp               0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) ENV SWARM_HOST=:2375          0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY dir:b76b2255a3b423981a   0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY file:5acf949e76228329d   277.2 kB</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY file:a2157cec2320f541a   19.06 MB</span></span><br></pre></td></tr></table></figure></p>\n<p>该命令提供具体镜像及其层级的详细组成信息。除了镜像的最上面一个层级之外（译者注：这不一定）, 所有 <code>IMAGE</code> 字段中的值都是<code>&lt;missing&gt;</code>, 很不幸，这个值极具误导性，因为它给人一种错误的暗示。但严格来说这么做没错，因为层级不再与镜像同义。我认为把这个领域留空是更恰当的（译者在这里表示赞同）。此外，镜像 ID 似乎仅仅与最上层相关联，但实际上，镜像 ID 不属于任何层。相反，这些层级共同属于该镜像。</p>\n<h4 id=\"本地构建镜像\"><a href=\"#本地构建镜像\" class=\"headerlink\" title=\"本地构建镜像\"></a>本地构建镜像</h4><p>虽然这个内容可寻址镜像的描述适用于 Docker v1.10 版本 之后的所有 Docker 镜像，但 Docker 主机上的本地构建镜像的方式略有不同。本地构建的镜像保持不变 - 它是包含配置项的配置对象，包括层级摘要的有序列表。</p>\n<p>但是，当本地 Docker 主机上构建的层级提交给镜像时，会同时创建“中间”镜像。与所有其他镜像一样，”中间镜像”也具有配置项，该配置项是组成镜像的层级摘要列表，并且其 ID（或摘要）包含配置对象的 hash 值。中间镜像没有标记名 (tag name)，但是，它们有一个“父”键（译者注：原文这里有点小瑕疵，不是”父”键，在代码中是以对象成员表示的），其中包含父镜像的 ID。</p>\n<p>使用中间镜像和包含对父镜像的引用的目的，是为了便于 Docker <a href=\"https://docs.docker.com/engine/reference/builder/#from\" target=\"_blank\" rel=\"noopener\">构建缓存</a> 。构建缓存是 Docker 平台的另一个重要特性，用于帮助 Docker 引擎利用预先存在的层级，以免为相同的构建命令不必要地重复生成内容。它使得构建过程更有效。在本地构建镜像时，该 <code>docker history</code> 命令可能提供类似于以下内容的输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> jbloggs/my_image:latest</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">26cca5b0c787        52 seconds ago      /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/b   0 B</span></span><br><span class=\"line\">97e47fb9e0a6        52 seconds ago      /bin/sh -c apt-get update &amp;&amp;     apt-get inst   16.98 MB</span><br><span class=\"line\">1742affe03b5        13 days ago         /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/bash\"]             0 B</span></span><br><span class=\"line\">&lt;missing&gt;           13 days ago         /bin/sh -c <span class=\"comment\">#(nop) ADD file:5d8521419ad6cfb695   125.1 MB</span></span><br></pre></td></tr></table></figure>\n<p>在此示例中，上面两个层级是在本地镜像构建期间创建的，而底层是来自基本镜像（例如 <a href=\"https://docs.docker.com/engine/reference/builder/#from\" target=\"_blank\" rel=\"noopener\">Dockerfile 指令</a> <code>FROM debian</code>）。我们可以使用 <code>docker inspect</code> 命令查看与该镜像关联的层级摘要：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker inspect jboggs/my_image:latest</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        &quot;RootFS&quot;: &#123;</span><br><span class=\"line\">            &quot;Type&quot;: &quot;layers&quot;,</span><br><span class=\"line\">            &quot;Layers&quot;: [</span><br><span class=\"line\">                &quot;sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90&quot;,</span><br><span class=\"line\">                &quot;sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef&quot;,</span><br><span class=\"line\">                &quot;sha256:f22bfbc1df820c465d94215e45bf9b1f0ae0fe3435a90dc5296a4b55712f46e7&quot;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p><code>docker history</code> 命令显示镜像具有四个层级，但 <code>docker inspect</code> 显示仅包含三个镜像。这是因为两条 <code>CMD</code> 指令仅为镜像生成元数据，不添加任何实质性内容，因此’diff’为空。摘要 5f70bf18a08a 是空镜像的 SHA256 哈希值，由两个相关层共享。</p>\n<p>被推送到 registry 的本地构建镜像，是仅有的”叶子镜像”, 与它的组成层级一同上传，并随后由另一个 Docker 主机拉取，这过程将不会产生任何中间父镜像。这是因为一旦借助 registry 将镜像提供给不同 Docker 主机上的其他潜在用户时，它的属性将变为只读，并且不再需要构建缓存 (build cache) 组件的支持。所以此时，<code>&lt;missing&gt;</code>值将被插入到其相应位置。</p>\n<p>将镜像推送到 registry 可能会产生如下输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker push jbloggs/my_image:latest</span><br><span class=\"line\">The push refers to a repository [docker.io/jbloggs/my_image]</span><br><span class=\"line\">f22bfbc1df82: Pushed</span><br><span class=\"line\">5f70bf18a086: Layer already exists</span><br><span class=\"line\">4dcab49015d4: Layer already exists</span><br><span class=\"line\">latest: digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820 size: 3147</span><br></pre></td></tr></table></figure></p>\n<p>在此示例中，仅推送了一个层级，因为 registry 中已存在两个层级，这两个层级可能被一个或多个其他镜像引用。</p>\n<h4 id=\"最后的”小别扭”\"><a href=\"#最后的”小别扭”\" class=\"headerlink\" title=\"最后的”小别扭”\"></a>最后的”小别扭”</h4><p>Docker 的层级“diffs”摘要，包含 <code>diff</code>目录 的 tar 包的 sha256 hash 值。在将镜像上传到 registry 之前，会对其进行压缩以提高带宽效率。除此之外，还会创建清单 (manifest) 来描述镜像的内容，它包含压缩层级内容的摘要。因此，清单中的层级摘要与在其未压缩状态下生成的摘要不同。该清单也会被推送到 registry。</p>\n<p>压缩层 diff 的摘要可以被称为“分发摘要”，而未压缩层 diff 的摘要可以被称为“内容摘要”。因此，当我们在不同的 Docker 主机上提取示例镜像时，<code>docker pull</code> 命令会提供以下输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull jbloggs/my_image</span><br><span class=\"line\">Using default tag: latest</span><br><span class=\"line\">latest: Pulling from jbloggs/my_image</span><br><span class=\"line\"></span><br><span class=\"line\">51f5c6a04d83: Pull complete</span><br><span class=\"line\">a3ed95caeb02: Pull complete</span><br><span class=\"line\">9a246d793396: Pull complete</span><br><span class=\"line\">Digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> jbloggs/my_image:latest</span><br></pre></td></tr></table></figure>\n<p><code>docker pull</code> 命令输出中的分发摘要，与<code>docker push</code>命令输出的摘要非常不同 。但是，pull 将解压缩层级，<code>docker inspect</code> 命令的输出将与我们在构建镜像后看到的内容摘要相同。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>在 Docker v1.10 中更改镜像和镜像处理机制之后：</p>\n<ul>\n<li>Docker 镜像基于它存储到层级差异 (diffs) 的引用为派生容器提供文件系统；</li>\n<li>使用摘要引用层级差异 (diffs)，摘要包含差异 (diffs) 内容归档（译者注：就是 tar 包）的 SHA256 hash 值；</li>\n<li>Docker 镜像的 ID 是一个摘要，其中包含镜像的 JSON 配置对象的 SHA256 哈希值；</li>\n<li>为了维护构建缓存，Docker 在本地镜像构建期间会创建中间镜像；</li>\n<li>镜像清单会在推送镜像时一并推送到 Docker registry;</li>\n<li>镜像清单包含镜像层级的摘要，其中包含压缩的归档差异内容的 SHA256 哈希值；</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><em>原文地址：<a href=\"https://windsock.io/explaining-docker-image-ids/\" target=\"_blank\" rel=\"noopener\">https://windsock.io/explaining-docker-image-ids/</a></em><br><em>Author：Nigel Brown</em><br><em>Translator：SU Hang</em><br><em>经原作者 Nigel Brown 授权翻译 | Translator authorized by the Nigel Brown</em></p>\n<p>当 Docker v1.10 发布时，Docker Engine 处理镜像的方式发生了相当大的变化。虽然这种<a href=\"https://blog.docker.com/2016/01/docker-1-10-rc/\" target=\"_blank\" rel=\"noopener\">新的处理机制</a> 被解释得很清楚，并且对 Docker 的常规使用（除了镜像迁移之外）几乎没有影响，但是有一些 UI 变动还是引起了一些<a href=\"https://github.com/moby/moby/issues/20131\" target=\"_blank\" rel=\"noopener\">误解</a>。那么这种变化是什么，为什么 <code>docker history</code> 命令会显示一些镜像层的 ID 为 <code>&lt;missing&gt;</code>呢？</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> debian</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">1742affe03b5        10 days ago         /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/bash\"]             0 B</span></span><br><span class=\"line\">&lt;missing&gt;           10 days ago         /bin/sh -c <span class=\"comment\">#(nop) ADD file:5d8521419ad6cfb695   125.1 MB</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>首先交代一些相关背景。docker 镜像是用于创建容器的只读模板，并提供基于多层文件和目录的顺序联合的文件系统，这种<a href=\"https://en.wikipedia.org/wiki/Union_mount\" target=\"_blank\" rel=\"noopener\">联合文件系统</a> 使得 Docker 镜像得以复用。Docker 平台提供了”共享镜像层”这一基本组件，通常使用<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%AB%E5%85%A5%E6%99%82%E8%A4%87%E8%A3%BD\" target=\"_blank\" rel=\"noopener\">写时复制（COW）</a> 机制来实现。在容器运行的生命周期中，如果容器需要从下层的某个只读镜像中修改文件，则在进行更改之前，它会将文件复制到其自己的专用读写层 - 即容器层。</p>\n<p>在 Docker 镜像构建过程中，会创建一个镜像或’diff’，在容器中运行的命令 - 譬如上面提到的 <code>/bin/bash</code>等等 - 会生成新的或修改过的文件和目录。这些新的或修改过的文件和目录被“提交”到容器层。<code>docker history</code> 输出显示 <code>debian</code> 镜像有两层。</p>\n<h4 id=\"历史遗留\"><a href=\"#历史遗留\" class=\"headerlink\" title=\"历史遗留\"></a>历史遗留</h4><p>历史上（在 Docker v1.10 版本之前），每次由于提交操作（译者注：<code>docker commit</code>) 而创建新镜像时，就会随机生成一个 256 位 <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\" target=\"_blank\" rel=\"noopener\">UUID</a> 标识来代表这唯一镜像，通常称为镜像 ID（在 UI 中显示为短 12 位十六进制字符串或长 64 位十六进制字符串）。Docker 将镜像内容存储在名称与镜像 ID 相同的目录中。在该目录内部，包括镜像的配置信息 (configuration object ) 和 镜像 ID 和镜像的父镜像的 ID 和。通过这种方式，Docker 能够为容器构建文件系统，每个镜像依次引用其父镜像内容，直到到达没有父级的基本镜像。每一层镜像也可以用有意义的名称（例如 <code>my_image:1.0</code>）标记（可选，不强制），但这通常保留用于叶子镜像。这在下图中描述：</p>\n<p><img src=\"Historical_Image.png\" alt=\"Historical_Image\"></p>\n<p>使用 <code>docker inspect</code> 命令将输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker inspect my_image:1.0</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">\"Id\"</span>: <span class=\"string\">\"ca1f5f48ef431c0818d5e8797dfe707557bdc728fe7c3027c75de18f934a3b76\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Parent\"</span>: <span class=\"string\">\"91bac885982d2d564c0e1869e8b8827c435eead714c06d4c670aaae616c1542c\"</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ...</span><br></pre></td></tr></table></figure></p>\n<p>这种方法在很长一段时间都工作良好，但随着时间的推移，由于各种原因，它被认为是一种次优的选择。驱使作出改变的一个重要原因是：当从 Docker registry（如 <a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"noopener\">Docker Hub</a>）中推送到或拉取时，缺乏检测镜像内容是否在被篡改的方法。这收到了整个社区的<a href=\"https://github.com/moby/moby/issues/9719\" target=\"_blank\" rel=\"noopener\">强烈批评</a>，最终促使了内容可寻址 ID (content addressable IDs) 的诞生。</p>\n<h4 id=\"内容可寻址-ID\"><a href=\"#内容可寻址-ID\" class=\"headerlink\" title=\"内容可寻址 ID\"></a>内容可寻址 ID</h4><p>从 Docker v1.10 开始，镜像和层级 (images and layers) 不再是同义词。除此之外，镜像可以直接引用一个或多个层级。</p>\n<p>现在层级通过摘要来进行识别，摘要采用如下形式：<code>algorithm:hex</code> 例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sha256:fc92eec5cac70b0c324cec2933cd7db1c0eae7c9e2649e42d02e77eb6da0d15f</span><br></pre></td></tr></table></figure></p>\n<p>通过将 <a href=\"https://github.com/moby/moby/issues/9719\" target=\"_blank\" rel=\"noopener\">SHA256</a> 算法应用于镜像的内容之上，来计算十六进制 hash 值。如果内容发生变化，则计算的摘要也将发生变化，这意味着 Docker 可以使用其发布的摘要来检查镜像的内容，以验证其是否被篡改。层级不同于”镜像”这个概念，也不属于”镜像”这个概念的一部分，它只是文件和目录的集合。</p>\n<p>现在的 Docker 镜像由一个配置对象 (configuration object) 组成，配置对象中包含了一个有序层级摘要列表，这使得 Docker Engine 能够根据层级摘要而不是父镜像来组装容器的文件系统。镜像 ID 也是一个摘要，是镜像配置对象的 SHA256 哈希值，镜像配置对象涵盖了组成该镜像文件系统的所有”层级”的 hash 摘要。下图描绘了 Docker v1.10 之后镜像和层级之间的关系：</p>\n<p><img src=\"Content_Addressable_Image.png\" alt=\"Content_Addressable_Image\"></p>\n<p>为了便于阅读，镜像和镜像的 SHA256 hash 摘要被缩短了。</p>\n<p>用于存储层级内容的目录 <code>diff</code> , 现在以随机生成的“cache ID”命名，Docker Engine 维护层级与其 cache ID 之间的关联性，以便它在磁盘上定位层级内容的位置。</p>\n<p>因此，当从 registery 中提取 Docker 镜像时，<code>docker history</code> 命令用于显示其内容，其输出类似于这样：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> swarm</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">c54bba046158        9 days ago          /bin/sh -c <span class=\"comment\">#(nop) CMD [\"--help\"]                0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) ENTRYPOINT &amp;&#123;[\"/swarm\"]&#125;      0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) VOLUME [/.swarm]              0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) EXPOSE 2375/tcp               0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) ENV SWARM_HOST=:2375          0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY dir:b76b2255a3b423981a   0 B</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY file:5acf949e76228329d   277.2 kB</span></span><br><span class=\"line\">&lt;missing&gt;           9 days ago          /bin/sh -c <span class=\"comment\">#(nop) COPY file:a2157cec2320f541a   19.06 MB</span></span><br></pre></td></tr></table></figure></p>\n<p>该命令提供具体镜像及其层级的详细组成信息。除了镜像的最上面一个层级之外（译者注：这不一定）, 所有 <code>IMAGE</code> 字段中的值都是<code>&lt;missing&gt;</code>, 很不幸，这个值极具误导性，因为它给人一种错误的暗示。但严格来说这么做没错，因为层级不再与镜像同义。我认为把这个领域留空是更恰当的（译者在这里表示赞同）。此外，镜像 ID 似乎仅仅与最上层相关联，但实际上，镜像 ID 不属于任何层。相反，这些层级共同属于该镜像。</p>\n<h4 id=\"本地构建镜像\"><a href=\"#本地构建镜像\" class=\"headerlink\" title=\"本地构建镜像\"></a>本地构建镜像</h4><p>虽然这个内容可寻址镜像的描述适用于 Docker v1.10 版本 之后的所有 Docker 镜像，但 Docker 主机上的本地构建镜像的方式略有不同。本地构建的镜像保持不变 - 它是包含配置项的配置对象，包括层级摘要的有序列表。</p>\n<p>但是，当本地 Docker 主机上构建的层级提交给镜像时，会同时创建“中间”镜像。与所有其他镜像一样，”中间镜像”也具有配置项，该配置项是组成镜像的层级摘要列表，并且其 ID（或摘要）包含配置对象的 hash 值。中间镜像没有标记名 (tag name)，但是，它们有一个“父”键（译者注：原文这里有点小瑕疵，不是”父”键，在代码中是以对象成员表示的），其中包含父镜像的 ID。</p>\n<p>使用中间镜像和包含对父镜像的引用的目的，是为了便于 Docker <a href=\"https://docs.docker.com/engine/reference/builder/#from\" target=\"_blank\" rel=\"noopener\">构建缓存</a> 。构建缓存是 Docker 平台的另一个重要特性，用于帮助 Docker 引擎利用预先存在的层级，以免为相同的构建命令不必要地重复生成内容。它使得构建过程更有效。在本地构建镜像时，该 <code>docker history</code> 命令可能提供类似于以下内容的输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker <span class=\"built_in\">history</span> jbloggs/my_image:latest</span><br><span class=\"line\">IMAGE               CREATED             CREATED BY                                      SIZE                COMMENT</span><br><span class=\"line\">26cca5b0c787        52 seconds ago      /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/sh\" \"-c\" \"/bin/b   0 B</span></span><br><span class=\"line\">97e47fb9e0a6        52 seconds ago      /bin/sh -c apt-get update &amp;&amp;     apt-get inst   16.98 MB</span><br><span class=\"line\">1742affe03b5        13 days ago         /bin/sh -c <span class=\"comment\">#(nop) CMD [\"/bin/bash\"]             0 B</span></span><br><span class=\"line\">&lt;missing&gt;           13 days ago         /bin/sh -c <span class=\"comment\">#(nop) ADD file:5d8521419ad6cfb695   125.1 MB</span></span><br></pre></td></tr></table></figure>\n<p>在此示例中，上面两个层级是在本地镜像构建期间创建的，而底层是来自基本镜像（例如 <a href=\"https://docs.docker.com/engine/reference/builder/#from\" target=\"_blank\" rel=\"noopener\">Dockerfile 指令</a> <code>FROM debian</code>）。我们可以使用 <code>docker inspect</code> 命令查看与该镜像关联的层级摘要：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker inspect jboggs/my_image:latest</span><br><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        &quot;RootFS&quot;: &#123;</span><br><span class=\"line\">            &quot;Type&quot;: &quot;layers&quot;,</span><br><span class=\"line\">            &quot;Layers&quot;: [</span><br><span class=\"line\">                &quot;sha256:4dcab49015d47e8f300ec33400a02cebc7b54cadd09c37e49eccbc655279da90&quot;,</span><br><span class=\"line\">                &quot;sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef&quot;,</span><br><span class=\"line\">                &quot;sha256:f22bfbc1df820c465d94215e45bf9b1f0ae0fe3435a90dc5296a4b55712f46e7&quot;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p><code>docker history</code> 命令显示镜像具有四个层级，但 <code>docker inspect</code> 显示仅包含三个镜像。这是因为两条 <code>CMD</code> 指令仅为镜像生成元数据，不添加任何实质性内容，因此’diff’为空。摘要 5f70bf18a08a 是空镜像的 SHA256 哈希值，由两个相关层共享。</p>\n<p>被推送到 registry 的本地构建镜像，是仅有的”叶子镜像”, 与它的组成层级一同上传，并随后由另一个 Docker 主机拉取，这过程将不会产生任何中间父镜像。这是因为一旦借助 registry 将镜像提供给不同 Docker 主机上的其他潜在用户时，它的属性将变为只读，并且不再需要构建缓存 (build cache) 组件的支持。所以此时，<code>&lt;missing&gt;</code>值将被插入到其相应位置。</p>\n<p>将镜像推送到 registry 可能会产生如下输出：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker push jbloggs/my_image:latest</span><br><span class=\"line\">The push refers to a repository [docker.io/jbloggs/my_image]</span><br><span class=\"line\">f22bfbc1df82: Pushed</span><br><span class=\"line\">5f70bf18a086: Layer already exists</span><br><span class=\"line\">4dcab49015d4: Layer already exists</span><br><span class=\"line\">latest: digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820 size: 3147</span><br></pre></td></tr></table></figure></p>\n<p>在此示例中，仅推送了一个层级，因为 registry 中已存在两个层级，这两个层级可能被一个或多个其他镜像引用。</p>\n<h4 id=\"最后的”小别扭”\"><a href=\"#最后的”小别扭”\" class=\"headerlink\" title=\"最后的”小别扭”\"></a>最后的”小别扭”</h4><p>Docker 的层级“diffs”摘要，包含 <code>diff</code>目录 的 tar 包的 sha256 hash 值。在将镜像上传到 registry 之前，会对其进行压缩以提高带宽效率。除此之外，还会创建清单 (manifest) 来描述镜像的内容，它包含压缩层级内容的摘要。因此，清单中的层级摘要与在其未压缩状态下生成的摘要不同。该清单也会被推送到 registry。</p>\n<p>压缩层 diff 的摘要可以被称为“分发摘要”，而未压缩层 diff 的摘要可以被称为“内容摘要”。因此，当我们在不同的 Docker 主机上提取示例镜像时，<code>docker pull</code> 命令会提供以下输出：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull jbloggs/my_image</span><br><span class=\"line\">Using default tag: latest</span><br><span class=\"line\">latest: Pulling from jbloggs/my_image</span><br><span class=\"line\"></span><br><span class=\"line\">51f5c6a04d83: Pull complete</span><br><span class=\"line\">a3ed95caeb02: Pull complete</span><br><span class=\"line\">9a246d793396: Pull complete</span><br><span class=\"line\">Digest: sha256:7f63e3661b1377e2658e458ac1ff6d5e0079f0cfd9ff2830786d1b45ae1bb820</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> jbloggs/my_image:latest</span><br></pre></td></tr></table></figure>\n<p><code>docker pull</code> 命令输出中的分发摘要，与<code>docker push</code>命令输出的摘要非常不同 。但是，pull 将解压缩层级，<code>docker inspect</code> 命令的输出将与我们在构建镜像后看到的内容摘要相同。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>在 Docker v1.10 中更改镜像和镜像处理机制之后：</p>\n<ul>\n<li>Docker 镜像基于它存储到层级差异 (diffs) 的引用为派生容器提供文件系统；</li>\n<li>使用摘要引用层级差异 (diffs)，摘要包含差异 (diffs) 内容归档（译者注：就是 tar 包）的 SHA256 hash 值；</li>\n<li>Docker 镜像的 ID 是一个摘要，其中包含镜像的 JSON 配置对象的 SHA256 哈希值；</li>\n<li>为了维护构建缓存，Docker 在本地镜像构建期间会创建中间镜像；</li>\n<li>镜像清单会在推送镜像时一并推送到 Docker registry;</li>\n<li>镜像清单包含镜像层级的摘要，其中包含压缩的归档差异内容的 SHA256 哈希值；</li>\n</ul>"},{"title":"Using QEMU to implement micro:bit machine type emulation","date":"2018-04-27T13:01:49.000Z","comments":1,"copyright":true,"_content":"\nBasic Information\n----------\n\n* __Name:__ darcy\n* __IRC nickname:__ darcy\n* __Programming languages (fluent):__ C, C++\n* __Past open source contributions:__\n    participating write a open source technical book about 'OpenResty'\n    https://github.com/moonbingbing/openresty-best-practices\n* __Sample source code, hobby projects, GitHub, etc URLs:__\n    https://github.com/DarcySail\n\nWhy you are applying\n----------\n\nThere are two reasons for participating in QEMU-GSoC:\n\nFirst, I'm an virtualization technology enthusiast. During my junior year at college, I've designed and implemented a C programming language based compiler, allowing users to directly convert native C code into a my own designed Stack-Based Instruction Set. Internally, a virtual machine to support byte-code execution is integrated into this compiler. Although this simple virtual machine prototype cannot support the full stack of virtualization technology, it's actually the starting point for my interest in virtualization. Now, I'm pursuing my PH.D degree in University of Chinese Academy of Sciences. And I focus on low-level system software design，including virtualization technologies and AI operating systems, e.g., QEMU, Docker, etc. Thus, I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\n<!--more-->\n\nFirst, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that support the subset of C language, the compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it's actually the starting point for my interest in virtualization.  When I came to University of Chinese Academy of Sciences as a master student, most of tasks assigned to me by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\nFirstly, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that supports the subset of C language. The compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it's actually my starting point of the interest in virtualization.  When I came to University of Chinese Academy of Sciences as a Master student, most tasks of mine assigned by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\nSecondly, when I use Linux and various open source software every day, the idea of contributing to Open Source Community naturally emerge in my deep heart. QEMU-GSoC is the best practice I could take part in. Since I have read all project ideas listed in QEMU, I thought the implementation of micro:bit is not only able to satisfy my requirement of learning peripheral emulation, but also within the capability of my skill.\n\nAnd I have already contributed to QEMU Community by commit 4 patchs, three of them have been merged into master branch. Here are links:[[1]](#1) [[2]](#2) [[3]](#3) [[4]](#4)\n\nSummary of your understanding of the project idea\n----------\n\nThe Project Idea of implementing micro:bit machine type provides the best testing platform for developers or kids.Besides, the implemented peripherals can be reused as modular components by future devices.\n\nWhat I need to do includes:\n\n### Part I.\n* Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU.\n\nAlthough the architectures are binary instructions upward compatible from Armv6-M to Armv7-M, and most(not all) binary instructions available for the Cortex-M0 can execute without modification on the Cortex-M3.[[4]](#4) [[5]](#5)\n\nNormally, when porting from the Cortex-M3 to the Cortex-M0, I need to change the peripheral access code, and update system features like clock speed, sleep modes, and so on. And this part of the code in the qemu architecture basically does not belong to implementiion of CPU (./target/arm), but is the work of the implementation of peripherals (./hw/arm).[[6]](#6)\n\nHowever, what I need to do is to use QEMU's support for cortex-m3 to implement a \"true\" virtual CPU rather than just using the existing cortex-m3 to implement the microbit machine functionality.\n\nExcept for some functional differences in some of the instructions, the two CPUs still have some differences above features. Some programmers may write some code based on the characteristics of the processor. And some softwares should validate the existence of a feature before attempting to use it. When programmers write such code on Cortex-M0, it is assumed that these features are supported on qemu. In fact, in this case, if we directly replace cortex-m0 with cortex-m3, a series of unpredictable problems will happen. This is why we should trim unnecessary feature from Cortex-M3.[[7]](#7)\n\n#### 1. Differences between instructions\n\nThe Cortex-M0 contains traditional Thumb-1, not including new instructions (CBZ, CBNZ, IT) which were added in Armv7-M architecture, and a minor subset of Thumb-2 instructions (BL, DMB, DSB, ISB, MRS, MSR). The Cortex-M3 have all base Thumb-1 and Thumb-2 instructions.[[8]](#8)\n\n* The Cortex-M0 only has 32-bit multiply instructions with a lower-32-bit result (32bit × 32bit = lower 32bit), where as the Cortex-M3 / M4 / M7 / M33 includes additional 32-bit multiply instructions with 64-bit results (32bit × 32bit = 64bit).[[8]](#8)\n\nAll this unsupported instructions should be trimmed from current Cortex-M3 implementation. The specific method is to utilize the following functions provided by QEMU, using `UNPREDICTABLE` or `UNDEFINED` to replace the original instructions.\n\n```c\n#define ENABLE_ARCH_V6     arm_dc_feature(s, ARM_FEATURE_V6)\nstatic void disas_arm_insn(DisasContext *s, unsigned int insn)\n{\n    ....\n    /* for different feature that not supported by cotex-m0(armv6);\n     * we could raise the INVSTATE UsageFault exception.\n     */\n    if (arm_dc_feature(s, ARM_FEATURE_V6)) {\n        gen_exception_insn(s, 4, EXCP_INVSTATE, syn_uncategorized(),\n                           default_exception_el(s));\n        return;\n    }\n    ....\n    /* for Instruction that not supported by cortex-m0(armv6), we\n     * choose to UNDEF.\n     */\n    if (!arm_dc_feature(s, ARM_FEATURE_NEON)) {\n        goto illegal_op;\n    }\nillegal_op:\n        gen_exception_insn(s, 4, EXCP_UDEF, syn_uncategorized(),\n                           default_exception_el(s));\n    ....\n}\n```\n\n#### 2. Differences between features\nThe following features should be taken into consideration:\n\nARM architecture: The Cortex-M0 implement the Armv6-M architecture, and the Cortex-M3 implements the Armv7-M architecture.\n\n* Interrupts: 1 to 32 (Cortex-M0), 1 to 240 (Cortex-M3).\n* Vector Table Offset Register: Not available for Cortex-M0.\n* Number of watchpoint comparators: 0 to 2 (Cortex M0), 0 to 4 (Cortex-M3).\n* Number of breakpoint comparators: 0 to 4 (Cortex M0), 0 to 8 (Cortex-M3).\n* The performance efficiency: 0.9 DMIPS/MHz 1.25 DMIPS/MHz(this part won't affect QEMU)[[8]](#8)\n\nExcept for listed above, aligned access is another important different feature. An aligned access is an operation where a word-aligned address is used for a word or multiple word access, or where a halfword-aligned address is used for a halfword access. Byte accesses are always aligned.\n\nThere is no support for unaligned accesses on the Cortex-M0 processor. Any attempt to perform an unaligned memory access operation results in a HardFault exception.[[9]](#9)\n\nNVIC and SCB (System Control Block) registers in the Cortex-M0 can only be accessed in word-size transfers.  While some registers in the NVIC and the SCB in the Cortex-M3 are not available in the Cortex-M0. These include the Interrupt Active Status Register, the Software Trigger Interrupt Register, the Vector Table Offset Register, and some of the fault status registers.[[6]](#6)\n\nThe bit-band feature in the Cortex-M3 is not available in the Cortex-M0. If the bit-band alias access is used, it needs to return an error_id.\n\nIn general, Cortex-M0 memory access must always be naturally aligned while Cortex-M3 doesn't have this limit. The unsupported features should be trimmed to satisfy Cortex-M0.\n(refered to [[code]](#code2)):\n\n### Part II.\n* Implementing a \"microbit\" machine type.\n* Implementing at least the 5x5 LED display, buttons, and UART.\n* Stubbing out other devices as needed for the runtime to start successfully.\n\nDifferent from X86 architecture which provides port-mapped I/O, ARM architecture uses memory-mapped I/O to perform input/output (I/O) between CPU and peripheral devices. In programming of kernel module, we control peripherals by read/write I/O registers.  Because of the opposite behaviors, when we try to emulate peripheral device, we should read the value of I/O register to figure out what kind of operations do users want us to achieve so that we can give feedback to users by write corresponding I/O register. In order to specify utilize QEMU to emulate peripherals in ARM architecture, we should add a QEMU data structure named \"MemoryRegion\" per I/O mapped-memory, then hook the \"MemoryRegion\" with two callback functions(one for responding reading behavior, one for responding writing behavior), as long as user's code tries to access this \"MemoryRegion\", no matter reading or writing, the right corresponding callback function will be called. And exactly in this callback function should we implement the concrete peripherals feature.[[10]](#10)\n\n<span id = \"code2\"></span>\n```c\nstatic uint64_t microbit_rom_read_hook(void *opaque, hwaddr offset, unsigned size)\n{\n    if (offset & 0x1) {\n        qemu_log_mask(LOG_GUEST_ERROR,\n                      \"ROM: read at bad offset 0x%x\\n\", (int)offset);\n        return 0;\n    }\n    ...\n}\n\nstatic const MemoryRegionOps microbit_rom_ops = {\n    .read = microbit_rom_read,\n    .write = microbit_rom_write,\n    .endianness = DEVICE_NATIVE_ENDIAN,\n};\n```\n\nThere is no big difference between stubbing a device and actually implementing a device, both of them need to allocate a MemoryRegion, and hook the access to them, expect for stubbed device hooked with almost empty functions.\n\n### Part III.\n* Test code.\n\nIn order to test the correctness of emulation code, we could use online Python(or Javascript Blocks editors) to generate specific code which controls specific peripheral. According to \"nRF51 Series Reference Manual\", we check whether the generated code has written right value of right address.  For example, in the emulation of LED device, we can use Python to generate \".hex\" file that only controls one LED light to blink. Then we check whether the corresponding callback function has been called, and whether \".hex\" code has written expected value to right I/O registers.\n\nIn addition to using these official compilers, we can also use the runtime environment provided by Lancaster University, to minimize irrelevant variables.\n\n```c\n//This code should blink LED every 500ms.\n#include \"mbed.h\"\n\nDigitalOut led1(LED1);\n\nint main() {\n    while (true) {\n        led1 = !led1;\n        wait(0.5);\n    }\n}\n```\n\nThen use the following shell command to compile the source code.\n```bash\nyotta init\nyotta target bbc-microbit-classic-gcc\nyotta install lancaster-university/microbit\nyotta build\n```\n\nThe hex file we need to burn to flash rom will be found in project `LED-Blink/build/bbc-microbit-classic-gcc/source` and it will be called `LED-Blink-combined.hex`.\n\nIn addition, assembly code, which directly controls peripherals, should also be able to test on baremetel virtual machine.\n\nProject plan\n----------\n\n__5.15 - 5.22__\nImplementing a micro:bit .hex ROM loader;\n\n(approximately 500 - 1000 line of c code)\n\n__5.23 - 7.11__\nImplementing a \"microbit\" machine type;\n\nStubbing out other devices as needed for the runtime to start successfully;\n\nImplementing at least the 5x5 LED display, buttons, and UART;\n\n(approximately 1000 - 1500 line of c code for these three tasks.)\n\n> __6.12 - 6.13__\n> GSoC middle evaluations.\n\n__7.12 - 7.22__\nImplementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU;\n\n(approximately 98 instructions need to be trimmed, approximately 98 * 5 = 490. Include trimming feature code, approximately 500 - 800 line of c code.)\n\n> __7.10 - 7.11__\n> GSoC middle evaluations.\n\n__7.23 - 7.31__\nFinish all basic task, completely test code, prepare and start to code other peripherals and GUI;\n\n__8.1 - 8.14__\nImplement basic GUI. Implement other meaningful peripherals;\n\nReference\n----------\n\n* <span id = \"1\"> [1] http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html</span>\n* <span id = \"2\"> [2] http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html</span>\n* <span id = \"3\"> [3] http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html</span>\n* <span id = \"4\"> [4] http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html</span>\n* <span id = \"5\"> [4] ARMv6-M Architecture Reference Manual</span>\n* <span id = \"6\"> [5] ARMv7-M Architecture Reference Manual</span>\n* <span id = \"7\"> [6] The Definitive Guide to the ARM Cortex-M0</span>\n* <span id = \"8\"> [7] Cortex-M3 Embedded Software Development</span>\n* <span id = \"9\"> [8] https://en.wikipedia.org/wiki/ARM_Cortex-M</span>\n* <span id = \"10\"> [9] STM32F0xxx Cortex-M0 programming manual</span>\n* <span id = \"11\"> [10] https://www.qemu.org/2018/02/09/understanding-qemu-devices/</span>\n","source":"_posts/QEMU-GSoC-2018-proposal.md","raw":"---\ntitle: Using QEMU to implement micro:bit machine type emulation\ndate: 2018-04-27 21:01:49\ntags: [QEMU]\ncomments: Proposal for 2018 QEMU-GSoC\ncopyright: true\n---\n\nBasic Information\n----------\n\n* __Name:__ darcy\n* __IRC nickname:__ darcy\n* __Programming languages (fluent):__ C, C++\n* __Past open source contributions:__\n    participating write a open source technical book about 'OpenResty'\n    https://github.com/moonbingbing/openresty-best-practices\n* __Sample source code, hobby projects, GitHub, etc URLs:__\n    https://github.com/DarcySail\n\nWhy you are applying\n----------\n\nThere are two reasons for participating in QEMU-GSoC:\n\nFirst, I'm an virtualization technology enthusiast. During my junior year at college, I've designed and implemented a C programming language based compiler, allowing users to directly convert native C code into a my own designed Stack-Based Instruction Set. Internally, a virtual machine to support byte-code execution is integrated into this compiler. Although this simple virtual machine prototype cannot support the full stack of virtualization technology, it's actually the starting point for my interest in virtualization. Now, I'm pursuing my PH.D degree in University of Chinese Academy of Sciences. And I focus on low-level system software design，including virtualization technologies and AI operating systems, e.g., QEMU, Docker, etc. Thus, I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\n<!--more-->\n\nFirst, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that support the subset of C language, the compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it's actually the starting point for my interest in virtualization.  When I came to University of Chinese Academy of Sciences as a master student, most of tasks assigned to me by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\nFirstly, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that supports the subset of C language. The compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it's actually my starting point of the interest in virtualization.  When I came to University of Chinese Academy of Sciences as a Master student, most tasks of mine assigned by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.\n\nSecondly, when I use Linux and various open source software every day, the idea of contributing to Open Source Community naturally emerge in my deep heart. QEMU-GSoC is the best practice I could take part in. Since I have read all project ideas listed in QEMU, I thought the implementation of micro:bit is not only able to satisfy my requirement of learning peripheral emulation, but also within the capability of my skill.\n\nAnd I have already contributed to QEMU Community by commit 4 patchs, three of them have been merged into master branch. Here are links:[[1]](#1) [[2]](#2) [[3]](#3) [[4]](#4)\n\nSummary of your understanding of the project idea\n----------\n\nThe Project Idea of implementing micro:bit machine type provides the best testing platform for developers or kids.Besides, the implemented peripherals can be reused as modular components by future devices.\n\nWhat I need to do includes:\n\n### Part I.\n* Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU.\n\nAlthough the architectures are binary instructions upward compatible from Armv6-M to Armv7-M, and most(not all) binary instructions available for the Cortex-M0 can execute without modification on the Cortex-M3.[[4]](#4) [[5]](#5)\n\nNormally, when porting from the Cortex-M3 to the Cortex-M0, I need to change the peripheral access code, and update system features like clock speed, sleep modes, and so on. And this part of the code in the qemu architecture basically does not belong to implementiion of CPU (./target/arm), but is the work of the implementation of peripherals (./hw/arm).[[6]](#6)\n\nHowever, what I need to do is to use QEMU's support for cortex-m3 to implement a \"true\" virtual CPU rather than just using the existing cortex-m3 to implement the microbit machine functionality.\n\nExcept for some functional differences in some of the instructions, the two CPUs still have some differences above features. Some programmers may write some code based on the characteristics of the processor. And some softwares should validate the existence of a feature before attempting to use it. When programmers write such code on Cortex-M0, it is assumed that these features are supported on qemu. In fact, in this case, if we directly replace cortex-m0 with cortex-m3, a series of unpredictable problems will happen. This is why we should trim unnecessary feature from Cortex-M3.[[7]](#7)\n\n#### 1. Differences between instructions\n\nThe Cortex-M0 contains traditional Thumb-1, not including new instructions (CBZ, CBNZ, IT) which were added in Armv7-M architecture, and a minor subset of Thumb-2 instructions (BL, DMB, DSB, ISB, MRS, MSR). The Cortex-M3 have all base Thumb-1 and Thumb-2 instructions.[[8]](#8)\n\n* The Cortex-M0 only has 32-bit multiply instructions with a lower-32-bit result (32bit × 32bit = lower 32bit), where as the Cortex-M3 / M4 / M7 / M33 includes additional 32-bit multiply instructions with 64-bit results (32bit × 32bit = 64bit).[[8]](#8)\n\nAll this unsupported instructions should be trimmed from current Cortex-M3 implementation. The specific method is to utilize the following functions provided by QEMU, using `UNPREDICTABLE` or `UNDEFINED` to replace the original instructions.\n\n```c\n#define ENABLE_ARCH_V6     arm_dc_feature(s, ARM_FEATURE_V6)\nstatic void disas_arm_insn(DisasContext *s, unsigned int insn)\n{\n    ....\n    /* for different feature that not supported by cotex-m0(armv6);\n     * we could raise the INVSTATE UsageFault exception.\n     */\n    if (arm_dc_feature(s, ARM_FEATURE_V6)) {\n        gen_exception_insn(s, 4, EXCP_INVSTATE, syn_uncategorized(),\n                           default_exception_el(s));\n        return;\n    }\n    ....\n    /* for Instruction that not supported by cortex-m0(armv6), we\n     * choose to UNDEF.\n     */\n    if (!arm_dc_feature(s, ARM_FEATURE_NEON)) {\n        goto illegal_op;\n    }\nillegal_op:\n        gen_exception_insn(s, 4, EXCP_UDEF, syn_uncategorized(),\n                           default_exception_el(s));\n    ....\n}\n```\n\n#### 2. Differences between features\nThe following features should be taken into consideration:\n\nARM architecture: The Cortex-M0 implement the Armv6-M architecture, and the Cortex-M3 implements the Armv7-M architecture.\n\n* Interrupts: 1 to 32 (Cortex-M0), 1 to 240 (Cortex-M3).\n* Vector Table Offset Register: Not available for Cortex-M0.\n* Number of watchpoint comparators: 0 to 2 (Cortex M0), 0 to 4 (Cortex-M3).\n* Number of breakpoint comparators: 0 to 4 (Cortex M0), 0 to 8 (Cortex-M3).\n* The performance efficiency: 0.9 DMIPS/MHz 1.25 DMIPS/MHz(this part won't affect QEMU)[[8]](#8)\n\nExcept for listed above, aligned access is another important different feature. An aligned access is an operation where a word-aligned address is used for a word or multiple word access, or where a halfword-aligned address is used for a halfword access. Byte accesses are always aligned.\n\nThere is no support for unaligned accesses on the Cortex-M0 processor. Any attempt to perform an unaligned memory access operation results in a HardFault exception.[[9]](#9)\n\nNVIC and SCB (System Control Block) registers in the Cortex-M0 can only be accessed in word-size transfers.  While some registers in the NVIC and the SCB in the Cortex-M3 are not available in the Cortex-M0. These include the Interrupt Active Status Register, the Software Trigger Interrupt Register, the Vector Table Offset Register, and some of the fault status registers.[[6]](#6)\n\nThe bit-band feature in the Cortex-M3 is not available in the Cortex-M0. If the bit-band alias access is used, it needs to return an error_id.\n\nIn general, Cortex-M0 memory access must always be naturally aligned while Cortex-M3 doesn't have this limit. The unsupported features should be trimmed to satisfy Cortex-M0.\n(refered to [[code]](#code2)):\n\n### Part II.\n* Implementing a \"microbit\" machine type.\n* Implementing at least the 5x5 LED display, buttons, and UART.\n* Stubbing out other devices as needed for the runtime to start successfully.\n\nDifferent from X86 architecture which provides port-mapped I/O, ARM architecture uses memory-mapped I/O to perform input/output (I/O) between CPU and peripheral devices. In programming of kernel module, we control peripherals by read/write I/O registers.  Because of the opposite behaviors, when we try to emulate peripheral device, we should read the value of I/O register to figure out what kind of operations do users want us to achieve so that we can give feedback to users by write corresponding I/O register. In order to specify utilize QEMU to emulate peripherals in ARM architecture, we should add a QEMU data structure named \"MemoryRegion\" per I/O mapped-memory, then hook the \"MemoryRegion\" with two callback functions(one for responding reading behavior, one for responding writing behavior), as long as user's code tries to access this \"MemoryRegion\", no matter reading or writing, the right corresponding callback function will be called. And exactly in this callback function should we implement the concrete peripherals feature.[[10]](#10)\n\n<span id = \"code2\"></span>\n```c\nstatic uint64_t microbit_rom_read_hook(void *opaque, hwaddr offset, unsigned size)\n{\n    if (offset & 0x1) {\n        qemu_log_mask(LOG_GUEST_ERROR,\n                      \"ROM: read at bad offset 0x%x\\n\", (int)offset);\n        return 0;\n    }\n    ...\n}\n\nstatic const MemoryRegionOps microbit_rom_ops = {\n    .read = microbit_rom_read,\n    .write = microbit_rom_write,\n    .endianness = DEVICE_NATIVE_ENDIAN,\n};\n```\n\nThere is no big difference between stubbing a device and actually implementing a device, both of them need to allocate a MemoryRegion, and hook the access to them, expect for stubbed device hooked with almost empty functions.\n\n### Part III.\n* Test code.\n\nIn order to test the correctness of emulation code, we could use online Python(or Javascript Blocks editors) to generate specific code which controls specific peripheral. According to \"nRF51 Series Reference Manual\", we check whether the generated code has written right value of right address.  For example, in the emulation of LED device, we can use Python to generate \".hex\" file that only controls one LED light to blink. Then we check whether the corresponding callback function has been called, and whether \".hex\" code has written expected value to right I/O registers.\n\nIn addition to using these official compilers, we can also use the runtime environment provided by Lancaster University, to minimize irrelevant variables.\n\n```c\n//This code should blink LED every 500ms.\n#include \"mbed.h\"\n\nDigitalOut led1(LED1);\n\nint main() {\n    while (true) {\n        led1 = !led1;\n        wait(0.5);\n    }\n}\n```\n\nThen use the following shell command to compile the source code.\n```bash\nyotta init\nyotta target bbc-microbit-classic-gcc\nyotta install lancaster-university/microbit\nyotta build\n```\n\nThe hex file we need to burn to flash rom will be found in project `LED-Blink/build/bbc-microbit-classic-gcc/source` and it will be called `LED-Blink-combined.hex`.\n\nIn addition, assembly code, which directly controls peripherals, should also be able to test on baremetel virtual machine.\n\nProject plan\n----------\n\n__5.15 - 5.22__\nImplementing a micro:bit .hex ROM loader;\n\n(approximately 500 - 1000 line of c code)\n\n__5.23 - 7.11__\nImplementing a \"microbit\" machine type;\n\nStubbing out other devices as needed for the runtime to start successfully;\n\nImplementing at least the 5x5 LED display, buttons, and UART;\n\n(approximately 1000 - 1500 line of c code for these three tasks.)\n\n> __6.12 - 6.13__\n> GSoC middle evaluations.\n\n__7.12 - 7.22__\nImplementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU;\n\n(approximately 98 instructions need to be trimmed, approximately 98 * 5 = 490. Include trimming feature code, approximately 500 - 800 line of c code.)\n\n> __7.10 - 7.11__\n> GSoC middle evaluations.\n\n__7.23 - 7.31__\nFinish all basic task, completely test code, prepare and start to code other peripherals and GUI;\n\n__8.1 - 8.14__\nImplement basic GUI. Implement other meaningful peripherals;\n\nReference\n----------\n\n* <span id = \"1\"> [1] http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html</span>\n* <span id = \"2\"> [2] http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html</span>\n* <span id = \"3\"> [3] http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html</span>\n* <span id = \"4\"> [4] http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html</span>\n* <span id = \"5\"> [4] ARMv6-M Architecture Reference Manual</span>\n* <span id = \"6\"> [5] ARMv7-M Architecture Reference Manual</span>\n* <span id = \"7\"> [6] The Definitive Guide to the ARM Cortex-M0</span>\n* <span id = \"8\"> [7] Cortex-M3 Embedded Software Development</span>\n* <span id = \"9\"> [8] https://en.wikipedia.org/wiki/ARM_Cortex-M</span>\n* <span id = \"10\"> [9] STM32F0xxx Cortex-M0 programming manual</span>\n* <span id = \"11\"> [10] https://www.qemu.org/2018/02/09/understanding-qemu-devices/</span>\n","slug":"QEMU-GSoC-2018-proposal","published":1,"updated":"2019-03-18T08:48:31.338Z","layout":"post","photos":[],"link":"","_id":"cjucbl8l40011b9fsoyxcqypk","content":"<h2 id=\"Basic-Information\"><a href=\"#Basic-Information\" class=\"headerlink\" title=\"Basic Information\"></a>Basic Information</h2><ul>\n<li><strong>Name:</strong> darcy</li>\n<li><strong>IRC nickname:</strong> darcy</li>\n<li><strong>Programming languages (fluent):</strong> C, C++</li>\n<li><strong>Past open source contributions:</strong><br>  participating write a open source technical book about ‘OpenResty’<br>  <a href=\"https://github.com/moonbingbing/openresty-best-practices\" target=\"_blank\" rel=\"noopener\">https://github.com/moonbingbing/openresty-best-practices</a></li>\n<li><strong>Sample source code, hobby projects, GitHub, etc URLs:</strong><br>  <a href=\"https://github.com/DarcySail\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail</a></li>\n</ul>\n<h2 id=\"Why-you-are-applying\"><a href=\"#Why-you-are-applying\" class=\"headerlink\" title=\"Why you are applying\"></a>Why you are applying</h2><p>There are two reasons for participating in QEMU-GSoC:</p>\n<p>First, I’m an virtualization technology enthusiast. During my junior year at college, I’ve designed and implemented a C programming language based compiler, allowing users to directly convert native C code into a my own designed Stack-Based Instruction Set. Internally, a virtual machine to support byte-code execution is integrated into this compiler. Although this simple virtual machine prototype cannot support the full stack of virtualization technology, it’s actually the starting point for my interest in virtualization. Now, I’m pursuing my PH.D degree in University of Chinese Academy of Sciences. And I focus on low-level system software design，including virtualization technologies and AI operating systems, e.g., QEMU, Docker, etc. Thus, I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>\n<a id=\"more\"></a>\n<p>First, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that support the subset of C language, the compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it’s actually the starting point for my interest in virtualization.  When I came to University of Chinese Academy of Sciences as a master student, most of tasks assigned to me by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>\n<p>Firstly, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that supports the subset of C language. The compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it’s actually my starting point of the interest in virtualization.  When I came to University of Chinese Academy of Sciences as a Master student, most tasks of mine assigned by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>\n<p>Secondly, when I use Linux and various open source software every day, the idea of contributing to Open Source Community naturally emerge in my deep heart. QEMU-GSoC is the best practice I could take part in. Since I have read all project ideas listed in QEMU, I thought the implementation of micro:bit is not only able to satisfy my requirement of learning peripheral emulation, but also within the capability of my skill.</p>\n<p>And I have already contributed to QEMU Community by commit 4 patchs, three of them have been merged into master branch. Here are links:<a href=\"#1\">[1]</a> <a href=\"#2\">[2]</a> <a href=\"#3\">[3]</a> <a href=\"#4\">[4]</a></p>\n<h2 id=\"Summary-of-your-understanding-of-the-project-idea\"><a href=\"#Summary-of-your-understanding-of-the-project-idea\" class=\"headerlink\" title=\"Summary of your understanding of the project idea\"></a>Summary of your understanding of the project idea</h2><p>The Project Idea of implementing micro:bit machine type provides the best testing platform for developers or kids.Besides, the implemented peripherals can be reused as modular components by future devices.</p>\n<p>What I need to do includes:</p>\n<h3 id=\"Part-I\"><a href=\"#Part-I\" class=\"headerlink\" title=\"Part I.\"></a>Part I.</h3><ul>\n<li>Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU.</li>\n</ul>\n<p>Although the architectures are binary instructions upward compatible from Armv6-M to Armv7-M, and most(not all) binary instructions available for the Cortex-M0 can execute without modification on the Cortex-M3.<a href=\"#4\">[4]</a> <a href=\"#5\">[5]</a></p>\n<p>Normally, when porting from the Cortex-M3 to the Cortex-M0, I need to change the peripheral access code, and update system features like clock speed, sleep modes, and so on. And this part of the code in the qemu architecture basically does not belong to implementiion of CPU (./target/arm), but is the work of the implementation of peripherals (./hw/arm).<a href=\"#6\">[6]</a></p>\n<p>However, what I need to do is to use QEMU’s support for cortex-m3 to implement a “true” virtual CPU rather than just using the existing cortex-m3 to implement the microbit machine functionality.</p>\n<p>Except for some functional differences in some of the instructions, the two CPUs still have some differences above features. Some programmers may write some code based on the characteristics of the processor. And some softwares should validate the existence of a feature before attempting to use it. When programmers write such code on Cortex-M0, it is assumed that these features are supported on qemu. In fact, in this case, if we directly replace cortex-m0 with cortex-m3, a series of unpredictable problems will happen. This is why we should trim unnecessary feature from Cortex-M3.<a href=\"#7\">[7]</a></p>\n<h4 id=\"1-Differences-between-instructions\"><a href=\"#1-Differences-between-instructions\" class=\"headerlink\" title=\"1. Differences between instructions\"></a>1. Differences between instructions</h4><p>The Cortex-M0 contains traditional Thumb-1, not including new instructions (CBZ, CBNZ, IT) which were added in Armv7-M architecture, and a minor subset of Thumb-2 instructions (BL, DMB, DSB, ISB, MRS, MSR). The Cortex-M3 have all base Thumb-1 and Thumb-2 instructions.<a href=\"#8\">[8]</a></p>\n<ul>\n<li>The Cortex-M0 only has 32-bit multiply instructions with a lower-32-bit result (32bit × 32bit = lower 32bit), where as the Cortex-M3 / M4 / M7 / M33 includes additional 32-bit multiply instructions with 64-bit results (32bit × 32bit = 64bit).<a href=\"#8\">[8]</a></li>\n</ul>\n<p>All this unsupported instructions should be trimmed from current Cortex-M3 implementation. The specific method is to utilize the following functions provided by QEMU, using <code>UNPREDICTABLE</code> or <code>UNDEFINED</code> to replace the original instructions.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ENABLE_ARCH_V6     arm_dc_feature(s, ARM_FEATURE_V6)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">disas_arm_insn</span><span class=\"params\">(DisasContext *s, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> insn)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    <span class=\"comment\">/* for different feature that not supported by cotex-m0(armv6);</span></span><br><span class=\"line\"><span class=\"comment\">     * we could raise the INVSTATE UsageFault exception.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arm_dc_feature(s, ARM_FEATURE_V6)) &#123;</span><br><span class=\"line\">        gen_exception_insn(s, <span class=\"number\">4</span>, EXCP_INVSTATE, syn_uncategorized(),</span><br><span class=\"line\">                           default_exception_el(s));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    <span class=\"comment\">/* for Instruction that not supported by cortex-m0(armv6), we</span></span><br><span class=\"line\"><span class=\"comment\">     * choose to UNDEF.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!arm_dc_feature(s, ARM_FEATURE_NEON)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> illegal_op;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">illegal_op:</span><br><span class=\"line\">        gen_exception_insn(s, <span class=\"number\">4</span>, EXCP_UDEF, syn_uncategorized(),</span><br><span class=\"line\">                           default_exception_el(s));</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-Differences-between-features\"><a href=\"#2-Differences-between-features\" class=\"headerlink\" title=\"2. Differences between features\"></a>2. Differences between features</h4><p>The following features should be taken into consideration:</p>\n<p>ARM architecture: The Cortex-M0 implement the Armv6-M architecture, and the Cortex-M3 implements the Armv7-M architecture.</p>\n<ul>\n<li>Interrupts: 1 to 32 (Cortex-M0), 1 to 240 (Cortex-M3).</li>\n<li>Vector Table Offset Register: Not available for Cortex-M0.</li>\n<li>Number of watchpoint comparators: 0 to 2 (Cortex M0), 0 to 4 (Cortex-M3).</li>\n<li>Number of breakpoint comparators: 0 to 4 (Cortex M0), 0 to 8 (Cortex-M3).</li>\n<li>The performance efficiency: 0.9 DMIPS/MHz 1.25 DMIPS/MHz(this part won’t affect QEMU)<a href=\"#8\">[8]</a></li>\n</ul>\n<p>Except for listed above, aligned access is another important different feature. An aligned access is an operation where a word-aligned address is used for a word or multiple word access, or where a halfword-aligned address is used for a halfword access. Byte accesses are always aligned.</p>\n<p>There is no support for unaligned accesses on the Cortex-M0 processor. Any attempt to perform an unaligned memory access operation results in a HardFault exception.<a href=\"#9\">[9]</a></p>\n<p>NVIC and SCB (System Control Block) registers in the Cortex-M0 can only be accessed in word-size transfers.  While some registers in the NVIC and the SCB in the Cortex-M3 are not available in the Cortex-M0. These include the Interrupt Active Status Register, the Software Trigger Interrupt Register, the Vector Table Offset Register, and some of the fault status registers.<a href=\"#6\">[6]</a></p>\n<p>The bit-band feature in the Cortex-M3 is not available in the Cortex-M0. If the bit-band alias access is used, it needs to return an error_id.</p>\n<p>In general, Cortex-M0 memory access must always be naturally aligned while Cortex-M3 doesn’t have this limit. The unsupported features should be trimmed to satisfy Cortex-M0.<br>(refered to <a href=\"#code2\">[code]</a>):</p>\n<h3 id=\"Part-II\"><a href=\"#Part-II\" class=\"headerlink\" title=\"Part II.\"></a>Part II.</h3><ul>\n<li>Implementing a “microbit” machine type.</li>\n<li>Implementing at least the 5x5 LED display, buttons, and UART.</li>\n<li>Stubbing out other devices as needed for the runtime to start successfully.</li>\n</ul>\n<p>Different from X86 architecture which provides port-mapped I/O, ARM architecture uses memory-mapped I/O to perform input/output (I/O) between CPU and peripheral devices. In programming of kernel module, we control peripherals by read/write I/O registers.  Because of the opposite behaviors, when we try to emulate peripheral device, we should read the value of I/O register to figure out what kind of operations do users want us to achieve so that we can give feedback to users by write corresponding I/O register. In order to specify utilize QEMU to emulate peripherals in ARM architecture, we should add a QEMU data structure named “MemoryRegion” per I/O mapped-memory, then hook the “MemoryRegion” with two callback functions(one for responding reading behavior, one for responding writing behavior), as long as user’s code tries to access this “MemoryRegion”, no matter reading or writing, the right corresponding callback function will be called. And exactly in this callback function should we implement the concrete peripherals feature.<a href=\"#10\">[10]</a></p>\n<p><span id=\"code2\"></span><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> uint64_t <span class=\"title\">microbit_rom_read_hook</span><span class=\"params\">(<span class=\"keyword\">void</span> *opaque, hwaddr offset, <span class=\"keyword\">unsigned</span> size)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (offset &amp; <span class=\"number\">0x1</span>) &#123;</span><br><span class=\"line\">        qemu_log_mask(LOG_GUEST_ERROR,</span><br><span class=\"line\">                      <span class=\"string\">\"ROM: read at bad offset 0x%x\\n\"</span>, (<span class=\"keyword\">int</span>)offset);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> MemoryRegionOps microbit_rom_ops = &#123;</span><br><span class=\"line\">    .read = microbit_rom_read,</span><br><span class=\"line\">    .write = microbit_rom_write,</span><br><span class=\"line\">    .endianness = DEVICE_NATIVE_ENDIAN,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>There is no big difference between stubbing a device and actually implementing a device, both of them need to allocate a MemoryRegion, and hook the access to them, expect for stubbed device hooked with almost empty functions.</p>\n<h3 id=\"Part-III\"><a href=\"#Part-III\" class=\"headerlink\" title=\"Part III.\"></a>Part III.</h3><ul>\n<li>Test code.</li>\n</ul>\n<p>In order to test the correctness of emulation code, we could use online Python(or Javascript Blocks editors) to generate specific code which controls specific peripheral. According to “nRF51 Series Reference Manual”, we check whether the generated code has written right value of right address.  For example, in the emulation of LED device, we can use Python to generate “.hex” file that only controls one LED light to blink. Then we check whether the corresponding callback function has been called, and whether “.hex” code has written expected value to right I/O registers.</p>\n<p>In addition to using these official compilers, we can also use the runtime environment provided by Lancaster University, to minimize irrelevant variables.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//This code should blink LED every 500ms.</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"mbed.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">DigitalOut <span class=\"title\">led1</span><span class=\"params\">(LED1)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        led1 = !led1;</span><br><span class=\"line\">        wait(<span class=\"number\">0.5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Then use the following shell command to compile the source code.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yotta init</span><br><span class=\"line\">yotta target bbc-microbit-classic-gcc</span><br><span class=\"line\">yotta install lancaster-university/microbit</span><br><span class=\"line\">yotta build</span><br></pre></td></tr></table></figure></p>\n<p>The hex file we need to burn to flash rom will be found in project <code>LED-Blink/build/bbc-microbit-classic-gcc/source</code> and it will be called <code>LED-Blink-combined.hex</code>.</p>\n<p>In addition, assembly code, which directly controls peripherals, should also be able to test on baremetel virtual machine.</p>\n<h2 id=\"Project-plan\"><a href=\"#Project-plan\" class=\"headerlink\" title=\"Project plan\"></a>Project plan</h2><p><strong>5.15 - 5.22</strong><br>Implementing a micro:bit .hex ROM loader;</p>\n<p>(approximately 500 - 1000 line of c code)</p>\n<p><strong>5.23 - 7.11</strong><br>Implementing a “microbit” machine type;</p>\n<p>Stubbing out other devices as needed for the runtime to start successfully;</p>\n<p>Implementing at least the 5x5 LED display, buttons, and UART;</p>\n<p>(approximately 1000 - 1500 line of c code for these three tasks.)</p>\n<blockquote>\n<p><strong>6.12 - 6.13</strong><br>GSoC middle evaluations.</p>\n</blockquote>\n<p><strong>7.12 - 7.22</strong><br>Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU;</p>\n<p>(approximately 98 instructions need to be trimmed, approximately 98 * 5 = 490. Include trimming feature code, approximately 500 - 800 line of c code.)</p>\n<blockquote>\n<p><strong>7.10 - 7.11</strong><br>GSoC middle evaluations.</p>\n</blockquote>\n<p><strong>7.23 - 7.31</strong><br>Finish all basic task, completely test code, prepare and start to code other peripherals and GUI;</p>\n<p><strong>8.1 - 8.14</strong><br>Implement basic GUI. Implement other meaningful peripherals;</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span id=\"1\"> [1] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html</a></span></li>\n<li><span id=\"2\"> [2] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html</a></span></li>\n<li><span id=\"3\"> [3] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html</a></span></li>\n<li><span id=\"4\"> [4] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html</a></span></li>\n<li><span id=\"5\"> [4] ARMv6-M Architecture Reference Manual</span></li>\n<li><span id=\"6\"> [5] ARMv7-M Architecture Reference Manual</span></li>\n<li><span id=\"7\"> [6] The Definitive Guide to the ARM Cortex-M0</span></li>\n<li><span id=\"8\"> [7] Cortex-M3 Embedded Software Development</span></li>\n<li><span id=\"9\"> [8] <a href=\"https://en.wikipedia.org/wiki/ARM_Cortex-M\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/ARM_Cortex-M</a></span></li>\n<li><span id=\"10\"> [9] STM32F0xxx Cortex-M0 programming manual</span></li>\n<li><span id=\"11\"> [10] <a href=\"https://www.qemu.org/2018/02/09/understanding-qemu-devices/\" target=\"_blank\" rel=\"noopener\">https://www.qemu.org/2018/02/09/understanding-qemu-devices/</a></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"Basic-Information\"><a href=\"#Basic-Information\" class=\"headerlink\" title=\"Basic Information\"></a>Basic Information</h2><ul>\n<li><strong>Name:</strong> darcy</li>\n<li><strong>IRC nickname:</strong> darcy</li>\n<li><strong>Programming languages (fluent):</strong> C, C++</li>\n<li><strong>Past open source contributions:</strong><br>  participating write a open source technical book about ‘OpenResty’<br>  <a href=\"https://github.com/moonbingbing/openresty-best-practices\" target=\"_blank\" rel=\"noopener\">https://github.com/moonbingbing/openresty-best-practices</a></li>\n<li><strong>Sample source code, hobby projects, GitHub, etc URLs:</strong><br>  <a href=\"https://github.com/DarcySail\" target=\"_blank\" rel=\"noopener\">https://github.com/DarcySail</a></li>\n</ul>\n<h2 id=\"Why-you-are-applying\"><a href=\"#Why-you-are-applying\" class=\"headerlink\" title=\"Why you are applying\"></a>Why you are applying</h2><p>There are two reasons for participating in QEMU-GSoC:</p>\n<p>First, I’m an virtualization technology enthusiast. During my junior year at college, I’ve designed and implemented a C programming language based compiler, allowing users to directly convert native C code into a my own designed Stack-Based Instruction Set. Internally, a virtual machine to support byte-code execution is integrated into this compiler. Although this simple virtual machine prototype cannot support the full stack of virtualization technology, it’s actually the starting point for my interest in virtualization. Now, I’m pursuing my PH.D degree in University of Chinese Academy of Sciences. And I focus on low-level system software design，including virtualization technologies and AI operating systems, e.g., QEMU, Docker, etc. Thus, I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>","more":"<p>First, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that support the subset of C language, the compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it’s actually the starting point for my interest in virtualization.  When I came to University of Chinese Academy of Sciences as a master student, most of tasks assigned to me by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>\n<p>Firstly, I am greatly interested in virtualization. When I was a junior, I designed and implemented a compiler that supports the subset of C language. The compiler accepted C code as input, and output Stack-based Instruction Set(also designed by myself). A virtual machine was written in order to run this bytecode.  Now, in my point of view, this amateur virtual machine is far from virtualization, but it’s actually my starting point of the interest in virtualization.  When I came to University of Chinese Academy of Sciences as a Master student, most tasks of mine assigned by my school mentor are about low-level system software. And I want to utilize QEMU to implement the emulation of Intelligence Chip after I am familiar enough with QEMU.</p>\n<p>Secondly, when I use Linux and various open source software every day, the idea of contributing to Open Source Community naturally emerge in my deep heart. QEMU-GSoC is the best practice I could take part in. Since I have read all project ideas listed in QEMU, I thought the implementation of micro:bit is not only able to satisfy my requirement of learning peripheral emulation, but also within the capability of my skill.</p>\n<p>And I have already contributed to QEMU Community by commit 4 patchs, three of them have been merged into master branch. Here are links:<a href=\"#1\">[1]</a> <a href=\"#2\">[2]</a> <a href=\"#3\">[3]</a> <a href=\"#4\">[4]</a></p>\n<h2 id=\"Summary-of-your-understanding-of-the-project-idea\"><a href=\"#Summary-of-your-understanding-of-the-project-idea\" class=\"headerlink\" title=\"Summary of your understanding of the project idea\"></a>Summary of your understanding of the project idea</h2><p>The Project Idea of implementing micro:bit machine type provides the best testing platform for developers or kids.Besides, the implemented peripherals can be reused as modular components by future devices.</p>\n<p>What I need to do includes:</p>\n<h3 id=\"Part-I\"><a href=\"#Part-I\" class=\"headerlink\" title=\"Part I.\"></a>Part I.</h3><ul>\n<li>Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU.</li>\n</ul>\n<p>Although the architectures are binary instructions upward compatible from Armv6-M to Armv7-M, and most(not all) binary instructions available for the Cortex-M0 can execute without modification on the Cortex-M3.<a href=\"#4\">[4]</a> <a href=\"#5\">[5]</a></p>\n<p>Normally, when porting from the Cortex-M3 to the Cortex-M0, I need to change the peripheral access code, and update system features like clock speed, sleep modes, and so on. And this part of the code in the qemu architecture basically does not belong to implementiion of CPU (./target/arm), but is the work of the implementation of peripherals (./hw/arm).<a href=\"#6\">[6]</a></p>\n<p>However, what I need to do is to use QEMU’s support for cortex-m3 to implement a “true” virtual CPU rather than just using the existing cortex-m3 to implement the microbit machine functionality.</p>\n<p>Except for some functional differences in some of the instructions, the two CPUs still have some differences above features. Some programmers may write some code based on the characteristics of the processor. And some softwares should validate the existence of a feature before attempting to use it. When programmers write such code on Cortex-M0, it is assumed that these features are supported on qemu. In fact, in this case, if we directly replace cortex-m0 with cortex-m3, a series of unpredictable problems will happen. This is why we should trim unnecessary feature from Cortex-M3.<a href=\"#7\">[7]</a></p>\n<h4 id=\"1-Differences-between-instructions\"><a href=\"#1-Differences-between-instructions\" class=\"headerlink\" title=\"1. Differences between instructions\"></a>1. Differences between instructions</h4><p>The Cortex-M0 contains traditional Thumb-1, not including new instructions (CBZ, CBNZ, IT) which were added in Armv7-M architecture, and a minor subset of Thumb-2 instructions (BL, DMB, DSB, ISB, MRS, MSR). The Cortex-M3 have all base Thumb-1 and Thumb-2 instructions.<a href=\"#8\">[8]</a></p>\n<ul>\n<li>The Cortex-M0 only has 32-bit multiply instructions with a lower-32-bit result (32bit × 32bit = lower 32bit), where as the Cortex-M3 / M4 / M7 / M33 includes additional 32-bit multiply instructions with 64-bit results (32bit × 32bit = 64bit).<a href=\"#8\">[8]</a></li>\n</ul>\n<p>All this unsupported instructions should be trimmed from current Cortex-M3 implementation. The specific method is to utilize the following functions provided by QEMU, using <code>UNPREDICTABLE</code> or <code>UNDEFINED</code> to replace the original instructions.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ENABLE_ARCH_V6     arm_dc_feature(s, ARM_FEATURE_V6)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">disas_arm_insn</span><span class=\"params\">(DisasContext *s, <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> insn)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    <span class=\"comment\">/* for different feature that not supported by cotex-m0(armv6);</span></span><br><span class=\"line\"><span class=\"comment\">     * we could raise the INVSTATE UsageFault exception.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arm_dc_feature(s, ARM_FEATURE_V6)) &#123;</span><br><span class=\"line\">        gen_exception_insn(s, <span class=\"number\">4</span>, EXCP_INVSTATE, syn_uncategorized(),</span><br><span class=\"line\">                           default_exception_el(s));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ....</span><br><span class=\"line\">    <span class=\"comment\">/* for Instruction that not supported by cortex-m0(armv6), we</span></span><br><span class=\"line\"><span class=\"comment\">     * choose to UNDEF.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!arm_dc_feature(s, ARM_FEATURE_NEON)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> illegal_op;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">illegal_op:</span><br><span class=\"line\">        gen_exception_insn(s, <span class=\"number\">4</span>, EXCP_UDEF, syn_uncategorized(),</span><br><span class=\"line\">                           default_exception_el(s));</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-Differences-between-features\"><a href=\"#2-Differences-between-features\" class=\"headerlink\" title=\"2. Differences between features\"></a>2. Differences between features</h4><p>The following features should be taken into consideration:</p>\n<p>ARM architecture: The Cortex-M0 implement the Armv6-M architecture, and the Cortex-M3 implements the Armv7-M architecture.</p>\n<ul>\n<li>Interrupts: 1 to 32 (Cortex-M0), 1 to 240 (Cortex-M3).</li>\n<li>Vector Table Offset Register: Not available for Cortex-M0.</li>\n<li>Number of watchpoint comparators: 0 to 2 (Cortex M0), 0 to 4 (Cortex-M3).</li>\n<li>Number of breakpoint comparators: 0 to 4 (Cortex M0), 0 to 8 (Cortex-M3).</li>\n<li>The performance efficiency: 0.9 DMIPS/MHz 1.25 DMIPS/MHz(this part won’t affect QEMU)<a href=\"#8\">[8]</a></li>\n</ul>\n<p>Except for listed above, aligned access is another important different feature. An aligned access is an operation where a word-aligned address is used for a word or multiple word access, or where a halfword-aligned address is used for a halfword access. Byte accesses are always aligned.</p>\n<p>There is no support for unaligned accesses on the Cortex-M0 processor. Any attempt to perform an unaligned memory access operation results in a HardFault exception.<a href=\"#9\">[9]</a></p>\n<p>NVIC and SCB (System Control Block) registers in the Cortex-M0 can only be accessed in word-size transfers.  While some registers in the NVIC and the SCB in the Cortex-M3 are not available in the Cortex-M0. These include the Interrupt Active Status Register, the Software Trigger Interrupt Register, the Vector Table Offset Register, and some of the fault status registers.<a href=\"#6\">[6]</a></p>\n<p>The bit-band feature in the Cortex-M3 is not available in the Cortex-M0. If the bit-band alias access is used, it needs to return an error_id.</p>\n<p>In general, Cortex-M0 memory access must always be naturally aligned while Cortex-M3 doesn’t have this limit. The unsupported features should be trimmed to satisfy Cortex-M0.<br>(refered to <a href=\"#code2\">[code]</a>):</p>\n<h3 id=\"Part-II\"><a href=\"#Part-II\" class=\"headerlink\" title=\"Part II.\"></a>Part II.</h3><ul>\n<li>Implementing a “microbit” machine type.</li>\n<li>Implementing at least the 5x5 LED display, buttons, and UART.</li>\n<li>Stubbing out other devices as needed for the runtime to start successfully.</li>\n</ul>\n<p>Different from X86 architecture which provides port-mapped I/O, ARM architecture uses memory-mapped I/O to perform input/output (I/O) between CPU and peripheral devices. In programming of kernel module, we control peripherals by read/write I/O registers.  Because of the opposite behaviors, when we try to emulate peripheral device, we should read the value of I/O register to figure out what kind of operations do users want us to achieve so that we can give feedback to users by write corresponding I/O register. In order to specify utilize QEMU to emulate peripherals in ARM architecture, we should add a QEMU data structure named “MemoryRegion” per I/O mapped-memory, then hook the “MemoryRegion” with two callback functions(one for responding reading behavior, one for responding writing behavior), as long as user’s code tries to access this “MemoryRegion”, no matter reading or writing, the right corresponding callback function will be called. And exactly in this callback function should we implement the concrete peripherals feature.<a href=\"#10\">[10]</a></p>\n<p><span id=\"code2\"></span><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> uint64_t <span class=\"title\">microbit_rom_read_hook</span><span class=\"params\">(<span class=\"keyword\">void</span> *opaque, hwaddr offset, <span class=\"keyword\">unsigned</span> size)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (offset &amp; <span class=\"number\">0x1</span>) &#123;</span><br><span class=\"line\">        qemu_log_mask(LOG_GUEST_ERROR,</span><br><span class=\"line\">                      <span class=\"string\">\"ROM: read at bad offset 0x%x\\n\"</span>, (<span class=\"keyword\">int</span>)offset);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> MemoryRegionOps microbit_rom_ops = &#123;</span><br><span class=\"line\">    .read = microbit_rom_read,</span><br><span class=\"line\">    .write = microbit_rom_write,</span><br><span class=\"line\">    .endianness = DEVICE_NATIVE_ENDIAN,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>There is no big difference between stubbing a device and actually implementing a device, both of them need to allocate a MemoryRegion, and hook the access to them, expect for stubbed device hooked with almost empty functions.</p>\n<h3 id=\"Part-III\"><a href=\"#Part-III\" class=\"headerlink\" title=\"Part III.\"></a>Part III.</h3><ul>\n<li>Test code.</li>\n</ul>\n<p>In order to test the correctness of emulation code, we could use online Python(or Javascript Blocks editors) to generate specific code which controls specific peripheral. According to “nRF51 Series Reference Manual”, we check whether the generated code has written right value of right address.  For example, in the emulation of LED device, we can use Python to generate “.hex” file that only controls one LED light to blink. Then we check whether the corresponding callback function has been called, and whether “.hex” code has written expected value to right I/O registers.</p>\n<p>In addition to using these official compilers, we can also use the runtime environment provided by Lancaster University, to minimize irrelevant variables.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//This code should blink LED every 500ms.</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"mbed.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">DigitalOut <span class=\"title\">led1</span><span class=\"params\">(LED1)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        led1 = !led1;</span><br><span class=\"line\">        wait(<span class=\"number\">0.5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Then use the following shell command to compile the source code.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yotta init</span><br><span class=\"line\">yotta target bbc-microbit-classic-gcc</span><br><span class=\"line\">yotta install lancaster-university/microbit</span><br><span class=\"line\">yotta build</span><br></pre></td></tr></table></figure></p>\n<p>The hex file we need to burn to flash rom will be found in project <code>LED-Blink/build/bbc-microbit-classic-gcc/source</code> and it will be called <code>LED-Blink-combined.hex</code>.</p>\n<p>In addition, assembly code, which directly controls peripherals, should also be able to test on baremetel virtual machine.</p>\n<h2 id=\"Project-plan\"><a href=\"#Project-plan\" class=\"headerlink\" title=\"Project plan\"></a>Project plan</h2><p><strong>5.15 - 5.22</strong><br>Implementing a micro:bit .hex ROM loader;</p>\n<p>(approximately 500 - 1000 line of c code)</p>\n<p><strong>5.23 - 7.11</strong><br>Implementing a “microbit” machine type;</p>\n<p>Stubbing out other devices as needed for the runtime to start successfully;</p>\n<p>Implementing at least the 5x5 LED display, buttons, and UART;</p>\n<p>(approximately 1000 - 1500 line of c code for these three tasks.)</p>\n<blockquote>\n<p><strong>6.12 - 6.13</strong><br>GSoC middle evaluations.</p>\n</blockquote>\n<p><strong>7.12 - 7.22</strong><br>Implementing ARM Cortex-M0 CPU support based on existing Cortex-M3 support in QEMU;</p>\n<p>(approximately 98 instructions need to be trimmed, approximately 98 * 5 = 490. Include trimming feature code, approximately 500 - 800 line of c code.)</p>\n<blockquote>\n<p><strong>7.10 - 7.11</strong><br>GSoC middle evaluations.</p>\n</blockquote>\n<p><strong>7.23 - 7.31</strong><br>Finish all basic task, completely test code, prepare and start to code other peripherals and GUI;</p>\n<p><strong>8.1 - 8.14</strong><br>Implement basic GUI. Implement other meaningful peripherals;</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><span id=\"1\"> [1] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg06778.html</a></span></li>\n<li><span id=\"2\"> [2] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-03/msg01626.html</a></span></li>\n<li><span id=\"3\"> [3] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg00899.html</a></span></li>\n<li><span id=\"4\"> [4] <a href=\"http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html\" target=\"_blank\" rel=\"noopener\">http://lists.nongnu.org/archive/html/qemu-devel/2018-04/msg03242.html</a></span></li>\n<li><span id=\"5\"> [4] ARMv6-M Architecture Reference Manual</span></li>\n<li><span id=\"6\"> [5] ARMv7-M Architecture Reference Manual</span></li>\n<li><span id=\"7\"> [6] The Definitive Guide to the ARM Cortex-M0</span></li>\n<li><span id=\"8\"> [7] Cortex-M3 Embedded Software Development</span></li>\n<li><span id=\"9\"> [8] <a href=\"https://en.wikipedia.org/wiki/ARM_Cortex-M\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/ARM_Cortex-M</a></span></li>\n<li><span id=\"10\"> [9] STM32F0xxx Cortex-M0 programming manual</span></li>\n<li><span id=\"11\"> [10] <a href=\"https://www.qemu.org/2018/02/09/understanding-qemu-devices/\" target=\"_blank\" rel=\"noopener\">https://www.qemu.org/2018/02/09/understanding-qemu-devices/</a></span></li>\n</ul>"},{"title":"What is data flow analysis?","copyright":true,"date":"2019-03-07T06:15:01.000Z","comments":1,"_content":"\n数据流分析是一项编译时使用的技术，它能从程序代码中收集程序的语义信息，并通过代数的方法在编译时确定变量的定义和使用。通过数据流分析，可以不必实际运行程序就能够发现程序运行时的行为，这样可以帮助大家理解程序。数据流分析被用于解决编译优化、程序验证、调试、测试、并行、向量化和并行编程环境等问题。简单地说：所谓的数据流分析，就是对程序中数据的使用、定义及其之间的依赖关系等各方面的信息进行收集的过程。\n\n<!--more-->\n\n#### 数据流分析基本概念\n\n**基本块与控制流程图** 进行数据流分析首先要搞清楚什么是基本块和控制流程图 (Control flow)，这是进行数据流分析的基础。所谓基本块就是一个连续的线性代码的语句序列，程序控制流从它的开始处进人，并从它的结尾处离开，不可能有中断或者是分支（末尾除外）。简单地说就是一个单入单出的区域。\n\n对一个给定的程序，我们都可以把它划分为一系列的基本块。我们将每一个基本块都蜕化成一个节点，这样就产生了该程序（或该函数）的控制流程图。\n只有在划分了程序的基本块和构造程序的控制流程图以后，我们才能进行数据流分析和进一步的编译优化。\n\n**数据流方程** 为了优化代码，编译器需要把程序作为一个整体来收集信息，并把这些信息分配给流图的各个基本块。通过在程序的各个点建立和求解与信息有关的方程系统即可收集数据流信息。典型的方程形式如下：\n`$out [S]=gen [S] \\cup (in [S] - kill [S])$`\n\n这个方程的意思是：当控制流通过一个语句（或基本块）时，在语句（或基本块）末尾得到的信息或者是在该语句（或基本块〉中产生的信息，或者是进人语句（或基本块）开始点时携带的并且没有被这个语句注销的那些信息。这样的方程就叫做数据流方程。\n\n利用数据流方程，我们可以得到一种解决数据流问题的重要方法。我们首先建立流图，然后同时计算每个节点（大多是以基本块为节点）的 in 和 out 集合。\n\n#### 数据流问題的分类\n\n对于编译优化来说：涉及的数据流分析问题都是属性无关的类型，即，它们对感兴趣的每一个对象指定一个格元素，这个对象可以是变童定值，表达式计算，或其它的任何东西。\n同样编译优化考虑的几乎所有问题都是一个方向的，或者是向前的 (forward)，或者是向后的 (backward〉。双向（bi-directional) 问题要求 同时向前和向后传播，并且一般情况下将其公式化和求解都比单向问题要复杂。不过，在优化中双向问题非常少见。而且也已可以被更为现代的只使用单向分析的形式所替代。\n\n与程序优化有关的最重要的数据流分析信息包括：\n\n**到达定义（readching definitions)** 到达定义问题确定过程中一个变童的哪些定义可以到达该变量的每一个使用。到达定义是使用位向量的格的向前问题，其中位向量的每一位对应变量的一个定义。\n\n**可用表达式 (available expressions)** 可用表达式问题确定在过程的每个点上哪些表达式是可用的，在某点可用的含义是指：从人口到该点的每一条路径上存在着该表达式的一个计算，并且在此路径上的这个计算之后到该点之间，出现在该表达式中的所有变量都没有被重新賦值。可用表达式是位向貴上的格的向前问题，其中位向量的每一位对应表达式的—个定义。\n\n**活跃变量 (live variables)** 对于给定的变量和程序中给定的点，活跃变董问题确定沿着此点到出口的路径上是否存在对该变量的使用。这是一个使用位向量的向后问题，其中变置的每一个使用在位向量中有一个位置。\n\n**向上暴露使用（upwards exposed uses)**  此问题确定在特定点上哪些变量的使用可以由特定的定义而到达。这是一种使用位向量的向后问题，一个变量的每一个使用在位向置中相应地有一位。它是到达定义的对偶问题，到达定义连接定义到使用，而向上暴露使用连接使用到定义。注意这两者是有所不同的。\n\n**复写传播分析 (copy'propagation analysis)**\n复写传播分析确定从一个复写賦值，比如说 `T—y`, 到变董 `z` 的使用的每—条路径上都不存在对 ^ 的賦值。这是一个使用位向量的向前问题，位向量的每一位表示一个賦值。\n\n**常數传播分析（constant-propagation analysis)**\n常数传播分析确定从对一个变量的常数賦值，比如说 `$x \\leftarrow const$`, 到 `x`\n的使用的每一条路径上，对 `x` 的賦值都只是此常数值 `const`。这是一个向前问题。\n\n**部分冗余消除（partial-redundancy analysis)** 部分冗余消除确定在某条执行路径上被执行了两次（或多次），而其操作数在这些计算之间没有修改过的那些计算。\n\n在优化中遇到的不仅仅是上面列出的这些数据流问题，但它们是其中最重要的一些问题。\n\n#### 数据流分析使用的方法\n\n解数据流问题有下面列出的多种方法：\n1. 强连通区域方法；\n2. 迭代算法；\n3. TK - T2 分析；\n4. 结点列表算法；\n5. 图形文法方法；\n6. 消去法，例如，区间分析；\n7. 髙级语法制导的方法；\n8. 结构分析；\n9. 位置式 (slotwise) 分析。\n\n我们主要来看一个最常用也是最实用的迭代法。\n\n数据流信息的求解方法有两种，对于结构化的程序可采用语法制导的求解方法，对于任意控制流的程序可采用数据流方程的迭代求解方法。语法制导的方法比较简单和快速，但有其一定的局限性，所以，大部分情况下我们最多使用的方法还是数据流方程的迭代求解方法。\n\n以到达定义的迭代算法为例，我们来看看它的具体实现算法：\n\n我们为每个基本块 B 定义 `$out [B]$`, `$gen [B]$` ,`$kill [B]$` 和 `$in [B]$`, 在这里，每个块 B 可以看作是一个或多个賦值语句的串联。假设已经计算出了每一个块的 `$gen$` 和 `$kill$`, 我们可以创建两组和 $in$ 与 $out$ 有关的方程。定义 P 为 B 的前驱。\n```\n$in[B]= \\cup out[P]$\n\n$out [B]=gen [B] \\cup (in [B]—kill [B])$\n```\n第一组方程是基于这样的观察得来的，即 `$in [B]$` 是从 B 的所有前驱到达定义的并。第二组方程则是我们的对所有语句都成立的数据流方程。如果流图有 n 个基本块，我们将得到 2n 个方程。通过循环计算 in 和 out 集合即可对这 2n 个方程进行求解。从上面的方程可以看出，作为 out 集合的并，in 集合在 out 集合为空时亦为空，因此，我们可以从空的 in 集合开始。具体的算法如下：\n\n输入：已经算出每个块 B 的 `$kill [B]$` 和 `$gen [B]$` 的流图。\n\n输出：每个块 B 的 `$in [B]$` 和 `$out [B]$`。\n\n方法：我们使用迭代法，对所有的 B，从 `$in [B] = 空 $` 开始，然后逐步收敛到 in 和 out 的期望值。因为我们必须重复迭代一直到 in(out) 收敛，我们利用一个布尔变量 change 来记录在对块的每一遍扫描中 in 是否发生了变化。算法框架如下：\n\n```\n/*初始化 out, 假设对所有的 B，m[B]= 空*/\n(1) for 每个块 B do out[B]: =gen [B];\n(2) change := ture; /* while 循坏继续下去 * /\n(3)while change do begin:\n(4)    change： = false;\n(5)    for 每个块 B do begin:\n(6)        in[B] = $\\cup$ out[P];\n(7)        oldout := out[B];\n(8)        out[B] := gen[B] $\\cup $ (in[B] - kill[B]);\n(9)        if out[B] != oldout then change := true;\n(10)   end\n(11)end\n```\n\n直观上，算法传播定义到尽可能远的地方，只要它们没有被注销，在某种意义上说，模拟程序所有可能的执行。可以看出该算法最终总会停止，因为任何控制流图结点 N 的 out[N] 的大小不会减小。一旦加人一个定值，它便永远留在这个集合中。因为所有定值集合是有限的，最终总有一遍 while 循环的结果使得第 (9) 行每个 N 的`oldout = out [N]`, change 仍为 false, 算法终止。算法的终止是安全的，因为 out 没有改变，那么下一遍的 in 也不会改变。如果 in 不变，那么 out 也不变，所有以后的遍都不会有任何改变。\n","source":"_posts/What-is-data-flow-analysis.md","raw":"---\ntitle: What is data flow analysis?\ncopyright: true\ndate: 2019-03-07 14:15:01\ntags:\ncomments:\n---\n\n数据流分析是一项编译时使用的技术，它能从程序代码中收集程序的语义信息，并通过代数的方法在编译时确定变量的定义和使用。通过数据流分析，可以不必实际运行程序就能够发现程序运行时的行为，这样可以帮助大家理解程序。数据流分析被用于解决编译优化、程序验证、调试、测试、并行、向量化和并行编程环境等问题。简单地说：所谓的数据流分析，就是对程序中数据的使用、定义及其之间的依赖关系等各方面的信息进行收集的过程。\n\n<!--more-->\n\n#### 数据流分析基本概念\n\n**基本块与控制流程图** 进行数据流分析首先要搞清楚什么是基本块和控制流程图 (Control flow)，这是进行数据流分析的基础。所谓基本块就是一个连续的线性代码的语句序列，程序控制流从它的开始处进人，并从它的结尾处离开，不可能有中断或者是分支（末尾除外）。简单地说就是一个单入单出的区域。\n\n对一个给定的程序，我们都可以把它划分为一系列的基本块。我们将每一个基本块都蜕化成一个节点，这样就产生了该程序（或该函数）的控制流程图。\n只有在划分了程序的基本块和构造程序的控制流程图以后，我们才能进行数据流分析和进一步的编译优化。\n\n**数据流方程** 为了优化代码，编译器需要把程序作为一个整体来收集信息，并把这些信息分配给流图的各个基本块。通过在程序的各个点建立和求解与信息有关的方程系统即可收集数据流信息。典型的方程形式如下：\n`$out [S]=gen [S] \\cup (in [S] - kill [S])$`\n\n这个方程的意思是：当控制流通过一个语句（或基本块）时，在语句（或基本块）末尾得到的信息或者是在该语句（或基本块〉中产生的信息，或者是进人语句（或基本块）开始点时携带的并且没有被这个语句注销的那些信息。这样的方程就叫做数据流方程。\n\n利用数据流方程，我们可以得到一种解决数据流问题的重要方法。我们首先建立流图，然后同时计算每个节点（大多是以基本块为节点）的 in 和 out 集合。\n\n#### 数据流问題的分类\n\n对于编译优化来说：涉及的数据流分析问题都是属性无关的类型，即，它们对感兴趣的每一个对象指定一个格元素，这个对象可以是变童定值，表达式计算，或其它的任何东西。\n同样编译优化考虑的几乎所有问题都是一个方向的，或者是向前的 (forward)，或者是向后的 (backward〉。双向（bi-directional) 问题要求 同时向前和向后传播，并且一般情况下将其公式化和求解都比单向问题要复杂。不过，在优化中双向问题非常少见。而且也已可以被更为现代的只使用单向分析的形式所替代。\n\n与程序优化有关的最重要的数据流分析信息包括：\n\n**到达定义（readching definitions)** 到达定义问题确定过程中一个变童的哪些定义可以到达该变量的每一个使用。到达定义是使用位向量的格的向前问题，其中位向量的每一位对应变量的一个定义。\n\n**可用表达式 (available expressions)** 可用表达式问题确定在过程的每个点上哪些表达式是可用的，在某点可用的含义是指：从人口到该点的每一条路径上存在着该表达式的一个计算，并且在此路径上的这个计算之后到该点之间，出现在该表达式中的所有变量都没有被重新賦值。可用表达式是位向貴上的格的向前问题，其中位向量的每一位对应表达式的—个定义。\n\n**活跃变量 (live variables)** 对于给定的变量和程序中给定的点，活跃变董问题确定沿着此点到出口的路径上是否存在对该变量的使用。这是一个使用位向量的向后问题，其中变置的每一个使用在位向量中有一个位置。\n\n**向上暴露使用（upwards exposed uses)**  此问题确定在特定点上哪些变量的使用可以由特定的定义而到达。这是一种使用位向量的向后问题，一个变量的每一个使用在位向置中相应地有一位。它是到达定义的对偶问题，到达定义连接定义到使用，而向上暴露使用连接使用到定义。注意这两者是有所不同的。\n\n**复写传播分析 (copy'propagation analysis)**\n复写传播分析确定从一个复写賦值，比如说 `T—y`, 到变董 `z` 的使用的每—条路径上都不存在对 ^ 的賦值。这是一个使用位向量的向前问题，位向量的每一位表示一个賦值。\n\n**常數传播分析（constant-propagation analysis)**\n常数传播分析确定从对一个变量的常数賦值，比如说 `$x \\leftarrow const$`, 到 `x`\n的使用的每一条路径上，对 `x` 的賦值都只是此常数值 `const`。这是一个向前问题。\n\n**部分冗余消除（partial-redundancy analysis)** 部分冗余消除确定在某条执行路径上被执行了两次（或多次），而其操作数在这些计算之间没有修改过的那些计算。\n\n在优化中遇到的不仅仅是上面列出的这些数据流问题，但它们是其中最重要的一些问题。\n\n#### 数据流分析使用的方法\n\n解数据流问题有下面列出的多种方法：\n1. 强连通区域方法；\n2. 迭代算法；\n3. TK - T2 分析；\n4. 结点列表算法；\n5. 图形文法方法；\n6. 消去法，例如，区间分析；\n7. 髙级语法制导的方法；\n8. 结构分析；\n9. 位置式 (slotwise) 分析。\n\n我们主要来看一个最常用也是最实用的迭代法。\n\n数据流信息的求解方法有两种，对于结构化的程序可采用语法制导的求解方法，对于任意控制流的程序可采用数据流方程的迭代求解方法。语法制导的方法比较简单和快速，但有其一定的局限性，所以，大部分情况下我们最多使用的方法还是数据流方程的迭代求解方法。\n\n以到达定义的迭代算法为例，我们来看看它的具体实现算法：\n\n我们为每个基本块 B 定义 `$out [B]$`, `$gen [B]$` ,`$kill [B]$` 和 `$in [B]$`, 在这里，每个块 B 可以看作是一个或多个賦值语句的串联。假设已经计算出了每一个块的 `$gen$` 和 `$kill$`, 我们可以创建两组和 $in$ 与 $out$ 有关的方程。定义 P 为 B 的前驱。\n```\n$in[B]= \\cup out[P]$\n\n$out [B]=gen [B] \\cup (in [B]—kill [B])$\n```\n第一组方程是基于这样的观察得来的，即 `$in [B]$` 是从 B 的所有前驱到达定义的并。第二组方程则是我们的对所有语句都成立的数据流方程。如果流图有 n 个基本块，我们将得到 2n 个方程。通过循环计算 in 和 out 集合即可对这 2n 个方程进行求解。从上面的方程可以看出，作为 out 集合的并，in 集合在 out 集合为空时亦为空，因此，我们可以从空的 in 集合开始。具体的算法如下：\n\n输入：已经算出每个块 B 的 `$kill [B]$` 和 `$gen [B]$` 的流图。\n\n输出：每个块 B 的 `$in [B]$` 和 `$out [B]$`。\n\n方法：我们使用迭代法，对所有的 B，从 `$in [B] = 空 $` 开始，然后逐步收敛到 in 和 out 的期望值。因为我们必须重复迭代一直到 in(out) 收敛，我们利用一个布尔变量 change 来记录在对块的每一遍扫描中 in 是否发生了变化。算法框架如下：\n\n```\n/*初始化 out, 假设对所有的 B，m[B]= 空*/\n(1) for 每个块 B do out[B]: =gen [B];\n(2) change := ture; /* while 循坏继续下去 * /\n(3)while change do begin:\n(4)    change： = false;\n(5)    for 每个块 B do begin:\n(6)        in[B] = $\\cup$ out[P];\n(7)        oldout := out[B];\n(8)        out[B] := gen[B] $\\cup $ (in[B] - kill[B]);\n(9)        if out[B] != oldout then change := true;\n(10)   end\n(11)end\n```\n\n直观上，算法传播定义到尽可能远的地方，只要它们没有被注销，在某种意义上说，模拟程序所有可能的执行。可以看出该算法最终总会停止，因为任何控制流图结点 N 的 out[N] 的大小不会减小。一旦加人一个定值，它便永远留在这个集合中。因为所有定值集合是有限的，最终总有一遍 while 循环的结果使得第 (9) 行每个 N 的`oldout = out [N]`, change 仍为 false, 算法终止。算法的终止是安全的，因为 out 没有改变，那么下一遍的 in 也不会改变。如果 in 不变，那么 out 也不变，所有以后的遍都不会有任何改变。\n","slug":"What-is-data-flow-analysis","published":1,"updated":"2019-03-18T08:50:39.995Z","layout":"post","photos":[],"link":"","_id":"cjucbl8l70013b9fs2mh8f3af","content":"<p>数据流分析是一项编译时使用的技术，它能从程序代码中收集程序的语义信息，并通过代数的方法在编译时确定变量的定义和使用。通过数据流分析，可以不必实际运行程序就能够发现程序运行时的行为，这样可以帮助大家理解程序。数据流分析被用于解决编译优化、程序验证、调试、测试、并行、向量化和并行编程环境等问题。简单地说：所谓的数据流分析，就是对程序中数据的使用、定义及其之间的依赖关系等各方面的信息进行收集的过程。</p>\n<a id=\"more\"></a>\n<h4 id=\"数据流分析基本概念\"><a href=\"#数据流分析基本概念\" class=\"headerlink\" title=\"数据流分析基本概念\"></a>数据流分析基本概念</h4><p><strong>基本块与控制流程图</strong> 进行数据流分析首先要搞清楚什么是基本块和控制流程图 (Control flow)，这是进行数据流分析的基础。所谓基本块就是一个连续的线性代码的语句序列，程序控制流从它的开始处进人，并从它的结尾处离开，不可能有中断或者是分支（末尾除外）。简单地说就是一个单入单出的区域。</p>\n<p>对一个给定的程序，我们都可以把它划分为一系列的基本块。我们将每一个基本块都蜕化成一个节点，这样就产生了该程序（或该函数）的控制流程图。<br>只有在划分了程序的基本块和构造程序的控制流程图以后，我们才能进行数据流分析和进一步的编译优化。</p>\n<p><strong>数据流方程</strong> 为了优化代码，编译器需要把程序作为一个整体来收集信息，并把这些信息分配给流图的各个基本块。通过在程序的各个点建立和求解与信息有关的方程系统即可收集数据流信息。典型的方程形式如下：<br><code>$out [S]=gen [S] \\cup (in [S] - kill [S])$</code></p>\n<p>这个方程的意思是：当控制流通过一个语句（或基本块）时，在语句（或基本块）末尾得到的信息或者是在该语句（或基本块〉中产生的信息，或者是进人语句（或基本块）开始点时携带的并且没有被这个语句注销的那些信息。这样的方程就叫做数据流方程。</p>\n<p>利用数据流方程，我们可以得到一种解决数据流问题的重要方法。我们首先建立流图，然后同时计算每个节点（大多是以基本块为节点）的 in 和 out 集合。</p>\n<h4 id=\"数据流问題的分类\"><a href=\"#数据流问題的分类\" class=\"headerlink\" title=\"数据流问題的分类\"></a>数据流问題的分类</h4><p>对于编译优化来说：涉及的数据流分析问题都是属性无关的类型，即，它们对感兴趣的每一个对象指定一个格元素，这个对象可以是变童定值，表达式计算，或其它的任何东西。<br>同样编译优化考虑的几乎所有问题都是一个方向的，或者是向前的 (forward)，或者是向后的 (backward〉。双向（bi-directional) 问题要求 同时向前和向后传播，并且一般情况下将其公式化和求解都比单向问题要复杂。不过，在优化中双向问题非常少见。而且也已可以被更为现代的只使用单向分析的形式所替代。</p>\n<p>与程序优化有关的最重要的数据流分析信息包括：</p>\n<p><strong>到达定义（readching definitions)</strong> 到达定义问题确定过程中一个变童的哪些定义可以到达该变量的每一个使用。到达定义是使用位向量的格的向前问题，其中位向量的每一位对应变量的一个定义。</p>\n<p><strong>可用表达式 (available expressions)</strong> 可用表达式问题确定在过程的每个点上哪些表达式是可用的，在某点可用的含义是指：从人口到该点的每一条路径上存在着该表达式的一个计算，并且在此路径上的这个计算之后到该点之间，出现在该表达式中的所有变量都没有被重新賦值。可用表达式是位向貴上的格的向前问题，其中位向量的每一位对应表达式的—个定义。</p>\n<p><strong>活跃变量 (live variables)</strong> 对于给定的变量和程序中给定的点，活跃变董问题确定沿着此点到出口的路径上是否存在对该变量的使用。这是一个使用位向量的向后问题，其中变置的每一个使用在位向量中有一个位置。</p>\n<p><strong>向上暴露使用（upwards exposed uses)</strong>  此问题确定在特定点上哪些变量的使用可以由特定的定义而到达。这是一种使用位向量的向后问题，一个变量的每一个使用在位向置中相应地有一位。它是到达定义的对偶问题，到达定义连接定义到使用，而向上暴露使用连接使用到定义。注意这两者是有所不同的。</p>\n<p><strong>复写传播分析 (copy’propagation analysis)</strong><br>复写传播分析确定从一个复写賦值，比如说 <code>T—y</code>, 到变董 <code>z</code> 的使用的每—条路径上都不存在对 ^ 的賦值。这是一个使用位向量的向前问题，位向量的每一位表示一个賦值。</p>\n<p><strong>常數传播分析（constant-propagation analysis)</strong><br>常数传播分析确定从对一个变量的常数賦值，比如说 <code>$x \\leftarrow const$</code>, 到 <code>x</code><br>的使用的每一条路径上，对 <code>x</code> 的賦值都只是此常数值 <code>const</code>。这是一个向前问题。</p>\n<p><strong>部分冗余消除（partial-redundancy analysis)</strong> 部分冗余消除确定在某条执行路径上被执行了两次（或多次），而其操作数在这些计算之间没有修改过的那些计算。</p>\n<p>在优化中遇到的不仅仅是上面列出的这些数据流问题，但它们是其中最重要的一些问题。</p>\n<h4 id=\"数据流分析使用的方法\"><a href=\"#数据流分析使用的方法\" class=\"headerlink\" title=\"数据流分析使用的方法\"></a>数据流分析使用的方法</h4><p>解数据流问题有下面列出的多种方法：</p>\n<ol>\n<li>强连通区域方法；</li>\n<li>迭代算法；</li>\n<li>TK - T2 分析；</li>\n<li>结点列表算法；</li>\n<li>图形文法方法；</li>\n<li>消去法，例如，区间分析；</li>\n<li>髙级语法制导的方法；</li>\n<li>结构分析；</li>\n<li>位置式 (slotwise) 分析。</li>\n</ol>\n<p>我们主要来看一个最常用也是最实用的迭代法。</p>\n<p>数据流信息的求解方法有两种，对于结构化的程序可采用语法制导的求解方法，对于任意控制流的程序可采用数据流方程的迭代求解方法。语法制导的方法比较简单和快速，但有其一定的局限性，所以，大部分情况下我们最多使用的方法还是数据流方程的迭代求解方法。</p>\n<p>以到达定义的迭代算法为例，我们来看看它的具体实现算法：</p>\n<p>我们为每个基本块 B 定义 <code>$out [B]$</code>, <code>$gen [B]$</code> ,<code>$kill [B]$</code> 和 <code>$in [B]$</code>, 在这里，每个块 B 可以看作是一个或多个賦值语句的串联。假设已经计算出了每一个块的 <code>$gen$</code> 和 <code>$kill$</code>, 我们可以创建两组和 $in$ 与 $out$ 有关的方程。定义 P 为 B 的前驱。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$in[B]= \\cup out[P]$</span><br><span class=\"line\"></span><br><span class=\"line\">$out [B]=gen [B] \\cup (in [B]—kill [B])$</span><br></pre></td></tr></table></figure></p>\n<p>第一组方程是基于这样的观察得来的，即 <code>$in [B]$</code> 是从 B 的所有前驱到达定义的并。第二组方程则是我们的对所有语句都成立的数据流方程。如果流图有 n 个基本块，我们将得到 2n 个方程。通过循环计算 in 和 out 集合即可对这 2n 个方程进行求解。从上面的方程可以看出，作为 out 集合的并，in 集合在 out 集合为空时亦为空，因此，我们可以从空的 in 集合开始。具体的算法如下：</p>\n<p>输入：已经算出每个块 B 的 <code>$kill [B]$</code> 和 <code>$gen [B]$</code> 的流图。</p>\n<p>输出：每个块 B 的 <code>$in [B]$</code> 和 <code>$out [B]$</code>。</p>\n<p>方法：我们使用迭代法，对所有的 B，从 <code>$in [B] = 空 $</code> 开始，然后逐步收敛到 in 和 out 的期望值。因为我们必须重复迭代一直到 in(out) 收敛，我们利用一个布尔变量 change 来记录在对块的每一遍扫描中 in 是否发生了变化。算法框架如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*初始化 out, 假设对所有的 B，m[B]= 空*/</span><br><span class=\"line\">(1) for 每个块 B do out[B]: =gen [B];</span><br><span class=\"line\">(2) change := ture; /* while 循坏继续下去 * /</span><br><span class=\"line\">(3)while change do begin:</span><br><span class=\"line\">(4)    change： = false;</span><br><span class=\"line\">(5)    for 每个块 B do begin:</span><br><span class=\"line\">(6)        in[B] = $\\cup$ out[P];</span><br><span class=\"line\">(7)        oldout := out[B];</span><br><span class=\"line\">(8)        out[B] := gen[B] $\\cup $ (in[B] - kill[B]);</span><br><span class=\"line\">(9)        if out[B] != oldout then change := true;</span><br><span class=\"line\">(10)   end</span><br><span class=\"line\">(11)end</span><br></pre></td></tr></table></figure>\n<p>直观上，算法传播定义到尽可能远的地方，只要它们没有被注销，在某种意义上说，模拟程序所有可能的执行。可以看出该算法最终总会停止，因为任何控制流图结点 N 的 out[N] 的大小不会减小。一旦加人一个定值，它便永远留在这个集合中。因为所有定值集合是有限的，最终总有一遍 while 循环的结果使得第 (9) 行每个 N 的<code>oldout = out [N]</code>, change 仍为 false, 算法终止。算法的终止是安全的，因为 out 没有改变，那么下一遍的 in 也不会改变。如果 in 不变，那么 out 也不变，所有以后的遍都不会有任何改变。</p>\n","site":{"data":{}},"excerpt":"<p>数据流分析是一项编译时使用的技术，它能从程序代码中收集程序的语义信息，并通过代数的方法在编译时确定变量的定义和使用。通过数据流分析，可以不必实际运行程序就能够发现程序运行时的行为，这样可以帮助大家理解程序。数据流分析被用于解决编译优化、程序验证、调试、测试、并行、向量化和并行编程环境等问题。简单地说：所谓的数据流分析，就是对程序中数据的使用、定义及其之间的依赖关系等各方面的信息进行收集的过程。</p>","more":"<h4 id=\"数据流分析基本概念\"><a href=\"#数据流分析基本概念\" class=\"headerlink\" title=\"数据流分析基本概念\"></a>数据流分析基本概念</h4><p><strong>基本块与控制流程图</strong> 进行数据流分析首先要搞清楚什么是基本块和控制流程图 (Control flow)，这是进行数据流分析的基础。所谓基本块就是一个连续的线性代码的语句序列，程序控制流从它的开始处进人，并从它的结尾处离开，不可能有中断或者是分支（末尾除外）。简单地说就是一个单入单出的区域。</p>\n<p>对一个给定的程序，我们都可以把它划分为一系列的基本块。我们将每一个基本块都蜕化成一个节点，这样就产生了该程序（或该函数）的控制流程图。<br>只有在划分了程序的基本块和构造程序的控制流程图以后，我们才能进行数据流分析和进一步的编译优化。</p>\n<p><strong>数据流方程</strong> 为了优化代码，编译器需要把程序作为一个整体来收集信息，并把这些信息分配给流图的各个基本块。通过在程序的各个点建立和求解与信息有关的方程系统即可收集数据流信息。典型的方程形式如下：<br><code>$out [S]=gen [S] \\cup (in [S] - kill [S])$</code></p>\n<p>这个方程的意思是：当控制流通过一个语句（或基本块）时，在语句（或基本块）末尾得到的信息或者是在该语句（或基本块〉中产生的信息，或者是进人语句（或基本块）开始点时携带的并且没有被这个语句注销的那些信息。这样的方程就叫做数据流方程。</p>\n<p>利用数据流方程，我们可以得到一种解决数据流问题的重要方法。我们首先建立流图，然后同时计算每个节点（大多是以基本块为节点）的 in 和 out 集合。</p>\n<h4 id=\"数据流问題的分类\"><a href=\"#数据流问題的分类\" class=\"headerlink\" title=\"数据流问題的分类\"></a>数据流问題的分类</h4><p>对于编译优化来说：涉及的数据流分析问题都是属性无关的类型，即，它们对感兴趣的每一个对象指定一个格元素，这个对象可以是变童定值，表达式计算，或其它的任何东西。<br>同样编译优化考虑的几乎所有问题都是一个方向的，或者是向前的 (forward)，或者是向后的 (backward〉。双向（bi-directional) 问题要求 同时向前和向后传播，并且一般情况下将其公式化和求解都比单向问题要复杂。不过，在优化中双向问题非常少见。而且也已可以被更为现代的只使用单向分析的形式所替代。</p>\n<p>与程序优化有关的最重要的数据流分析信息包括：</p>\n<p><strong>到达定义（readching definitions)</strong> 到达定义问题确定过程中一个变童的哪些定义可以到达该变量的每一个使用。到达定义是使用位向量的格的向前问题，其中位向量的每一位对应变量的一个定义。</p>\n<p><strong>可用表达式 (available expressions)</strong> 可用表达式问题确定在过程的每个点上哪些表达式是可用的，在某点可用的含义是指：从人口到该点的每一条路径上存在着该表达式的一个计算，并且在此路径上的这个计算之后到该点之间，出现在该表达式中的所有变量都没有被重新賦值。可用表达式是位向貴上的格的向前问题，其中位向量的每一位对应表达式的—个定义。</p>\n<p><strong>活跃变量 (live variables)</strong> 对于给定的变量和程序中给定的点，活跃变董问题确定沿着此点到出口的路径上是否存在对该变量的使用。这是一个使用位向量的向后问题，其中变置的每一个使用在位向量中有一个位置。</p>\n<p><strong>向上暴露使用（upwards exposed uses)</strong>  此问题确定在特定点上哪些变量的使用可以由特定的定义而到达。这是一种使用位向量的向后问题，一个变量的每一个使用在位向置中相应地有一位。它是到达定义的对偶问题，到达定义连接定义到使用，而向上暴露使用连接使用到定义。注意这两者是有所不同的。</p>\n<p><strong>复写传播分析 (copy’propagation analysis)</strong><br>复写传播分析确定从一个复写賦值，比如说 <code>T—y</code>, 到变董 <code>z</code> 的使用的每—条路径上都不存在对 ^ 的賦值。这是一个使用位向量的向前问题，位向量的每一位表示一个賦值。</p>\n<p><strong>常數传播分析（constant-propagation analysis)</strong><br>常数传播分析确定从对一个变量的常数賦值，比如说 <code>$x \\leftarrow const$</code>, 到 <code>x</code><br>的使用的每一条路径上，对 <code>x</code> 的賦值都只是此常数值 <code>const</code>。这是一个向前问题。</p>\n<p><strong>部分冗余消除（partial-redundancy analysis)</strong> 部分冗余消除确定在某条执行路径上被执行了两次（或多次），而其操作数在这些计算之间没有修改过的那些计算。</p>\n<p>在优化中遇到的不仅仅是上面列出的这些数据流问题，但它们是其中最重要的一些问题。</p>\n<h4 id=\"数据流分析使用的方法\"><a href=\"#数据流分析使用的方法\" class=\"headerlink\" title=\"数据流分析使用的方法\"></a>数据流分析使用的方法</h4><p>解数据流问题有下面列出的多种方法：</p>\n<ol>\n<li>强连通区域方法；</li>\n<li>迭代算法；</li>\n<li>TK - T2 分析；</li>\n<li>结点列表算法；</li>\n<li>图形文法方法；</li>\n<li>消去法，例如，区间分析；</li>\n<li>髙级语法制导的方法；</li>\n<li>结构分析；</li>\n<li>位置式 (slotwise) 分析。</li>\n</ol>\n<p>我们主要来看一个最常用也是最实用的迭代法。</p>\n<p>数据流信息的求解方法有两种，对于结构化的程序可采用语法制导的求解方法，对于任意控制流的程序可采用数据流方程的迭代求解方法。语法制导的方法比较简单和快速，但有其一定的局限性，所以，大部分情况下我们最多使用的方法还是数据流方程的迭代求解方法。</p>\n<p>以到达定义的迭代算法为例，我们来看看它的具体实现算法：</p>\n<p>我们为每个基本块 B 定义 <code>$out [B]$</code>, <code>$gen [B]$</code> ,<code>$kill [B]$</code> 和 <code>$in [B]$</code>, 在这里，每个块 B 可以看作是一个或多个賦值语句的串联。假设已经计算出了每一个块的 <code>$gen$</code> 和 <code>$kill$</code>, 我们可以创建两组和 $in$ 与 $out$ 有关的方程。定义 P 为 B 的前驱。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$in[B]= \\cup out[P]$</span><br><span class=\"line\"></span><br><span class=\"line\">$out [B]=gen [B] \\cup (in [B]—kill [B])$</span><br></pre></td></tr></table></figure></p>\n<p>第一组方程是基于这样的观察得来的，即 <code>$in [B]$</code> 是从 B 的所有前驱到达定义的并。第二组方程则是我们的对所有语句都成立的数据流方程。如果流图有 n 个基本块，我们将得到 2n 个方程。通过循环计算 in 和 out 集合即可对这 2n 个方程进行求解。从上面的方程可以看出，作为 out 集合的并，in 集合在 out 集合为空时亦为空，因此，我们可以从空的 in 集合开始。具体的算法如下：</p>\n<p>输入：已经算出每个块 B 的 <code>$kill [B]$</code> 和 <code>$gen [B]$</code> 的流图。</p>\n<p>输出：每个块 B 的 <code>$in [B]$</code> 和 <code>$out [B]$</code>。</p>\n<p>方法：我们使用迭代法，对所有的 B，从 <code>$in [B] = 空 $</code> 开始，然后逐步收敛到 in 和 out 的期望值。因为我们必须重复迭代一直到 in(out) 收敛，我们利用一个布尔变量 change 来记录在对块的每一遍扫描中 in 是否发生了变化。算法框架如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*初始化 out, 假设对所有的 B，m[B]= 空*/</span><br><span class=\"line\">(1) for 每个块 B do out[B]: =gen [B];</span><br><span class=\"line\">(2) change := ture; /* while 循坏继续下去 * /</span><br><span class=\"line\">(3)while change do begin:</span><br><span class=\"line\">(4)    change： = false;</span><br><span class=\"line\">(5)    for 每个块 B do begin:</span><br><span class=\"line\">(6)        in[B] = $\\cup$ out[P];</span><br><span class=\"line\">(7)        oldout := out[B];</span><br><span class=\"line\">(8)        out[B] := gen[B] $\\cup $ (in[B] - kill[B]);</span><br><span class=\"line\">(9)        if out[B] != oldout then change := true;</span><br><span class=\"line\">(10)   end</span><br><span class=\"line\">(11)end</span><br></pre></td></tr></table></figure>\n<p>直观上，算法传播定义到尽可能远的地方，只要它们没有被注销，在某种意义上说，模拟程序所有可能的执行。可以看出该算法最终总会停止，因为任何控制流图结点 N 的 out[N] 的大小不会减小。一旦加人一个定值，它便永远留在这个集合中。因为所有定值集合是有限的，最终总有一遍 while 循环的结果使得第 (9) 行每个 N 的<code>oldout = out [N]</code>, change 仍为 false, 算法终止。算法的终止是安全的，因为 out 没有改变，那么下一遍的 in 也不会改变。如果 in 不变，那么 out 也不变，所有以后的遍都不会有任何改变。</p>"},{"title":"QEMU 内部原理：整体架构和线程模型『译』","date":"2018-04-22T06:46:17.000Z","_content":"原文地址：http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html\nAuthor：Stefan Hajnoczi\nTranslator：Su Hang\n_本文经原作者Stefan Hajnoczi授权翻译_\n\n这是针对开发人员的 QEMU 内部原理探析系列中的第一篇文章。它旨在分享 QEMU 工作原理的知识，并使新贡献者更容易了解 QEMU 代码。\n\n执行 guest 代码涉及到如下任务：处理定时器、处理 I/O 请求、响应虚拟机监视器的命令，等等。要想设计一个良好的、能够解决这些问题的架构，需要安全地一次性地解决所有这些资源的分发问题。尤其是当某些请求，譬如 I/O 请求、来自用户的命令，需要大量的时间去执行的话。\n\n一个 guest 的运行包括执行 guest 代码，处理定时器，处理 I / O 以及响应监视器命令。要想一次性地安排好所有这些事情需要一个能够以安全的方式调解资源的体系结构，而且最好不会暂停 guest 代码的执行。如果磁盘 I / O 或监视器命令需要很长时间才能完成，对于需要响应来自多个来源的事件的程序，有两种流行体系结构：\n\n1. 并行体系架构，将工作分解为可同时执行的进程或线程。我将称之为线程架构。\n2.  事件驱动架构，通过在一个主循环分派各个事件到与之对应的事件处理函数。这通常使用`select(2)`或`poll(2)`系列调用系列来实现，以等待多个文件描述符。\n\n但 QEMU 实际上使用了一种将事件驱动编程与多线程相结合的混合架构。这样做是有道理的，因为事件循环不能利用多个 CPU 内核的特性，因为它只有一个执行线程。另外，有时编写专用线程来处理一个特定的任务，而不是将其集成到事件驱动的体系结构，在编程实现中更为简单。尽管如此，QEMU 的核心还是事件驱动的，大多数代码在这种环境中执行。\n\n### QEMU 的事件驱动核心\n\n事件驱动的架构以事件循环为中心，该事件循环将事件分派给处理函数。QEMU 的主要事件循环是`main_loop_wait()`，它执行以下任务：\n\n* 等待文件描述符变为可读或可写。文件描述符起着至关重要的作用，因为无论是文件、套接字、管道还是各种其他资源都是通过文件描述符来控制的。文件描述符可以使用`qemu_set_fd_handler()`来添加。\n* 运行会定时过期的定时器。定时器可以使用`qemu_mod_timer()`添加。\n* 运行下半部机制 (BHs)（译者注：所谓 bottom-halves 机制，是指在允许中断的情况下，将中断处理程序延迟执行），就像立即过期的定时器一样。BH（译者注：原文中 BH 是 bottom halves 的缩写，下同）用于避免重入和溢出调用堆栈。使用`qemu_bh_schedule()`添加 BHs。\n\n<!--more-->\n\n> Linux 将一些中断处理分成两部分，第一部分是在关中断的条件下执行的，具有\"原子\"性，而且是中断发生以后一般要立即执行的，第二部分，就是 bottom half 了，是在开中断的条件下执行，这部分是可以延迟一段时间再做的，而且有可能将多个中断的 bottom half 合并起来一起做。\n\n当文件描述符准备就绪，计时器到期或调度 BH 时，事件循环会调用相应该事件的回调函数。关于回调函数的执行场景，有两条简单规则：\n1.  没有其他核心代码正在同时执行，因此不需要考虑同步问题。回调函数相对于其他核心代码是顺序的，并且以原子的方式执行。在任何时候只有一个控制线程执行核心代码。\n2.  回调函数不应阻塞系统调用或进行长时间运行的运算。由于事件循环会在回调函数返回之前等待，所以其他想要被执行的事件就因此被阻塞，避免在回调中花费大量时间非常重要。打破此规则会导致 guest 虚拟机暂停并且监视器无法再响应用户。\n\n第二条规则有时在 QEMU 的某些代码中其实是难以实现的。事实上，`qemu_aio_wait()`中甚至有一个嵌套事件循环等待顶层事件循环处理的事件子集。希望在未来重构代码时，可以消除这些违背了第二天规则的代码。新代码几乎从来没有合法的理由阻止，一种解决方案是使用专用工作线程来卸载长时间运行或阻塞的代码。\n\n### 将特定任务分配到工作线程\n\n虽然许多 I / O 操作可以以非阻塞方式执行，但是有些系统调用没有非阻塞版本。此外，有时候长时运行的计算任务会影响 CPU，并且很难将其分解成多个小的回调函数。在这些情况下，可以谨慎地通过分配专用工作线程的方式，将这些任务移出 QEMU 核心函数。\n\n一个工作线程的用户示例是`posix-aio-compat.c`，一个异步文件 I / O 实现。当 QEMU 核心代码发出 aio 请求时，该请求将被放置在一个队列中。工作线程将从队列中取出该 aio 请求并在 QEMU 核心函数之外去执行。这时就可以执行阻塞操作了，因为这些任务在自己的线程中执行并且不会阻塞 QEMU 的其余部分。通过这种方式需要注意在工作线程和 QEMU 核心函数之间执行必要的同步和通信。\n\n另一个例子是`ui/vnc-jobs-async.c`，它在工作线程中进行密集的图像压缩和编码计算。\n\n由于大多数 QEMU 核心代码不是线程安全的，所以工作线程不能调用 QEMU 核心代码代码。对于简单的实用程序——如`qemu_malloc()`——是线程安全的，但这算是例外而非规则。这种特性使得将工作线程事件传回 QEMU 核心函数变成了一个难题。\n\n当工作线程需要通知 QEMU 核心代码时，会在事件循环中添加管道或`qemu_eventfd()`文件描述符。工作线程可以写入文件描述符，并且当文件描述符的状态变为可读时，事件循环将调用回调函数。另外，必须有一个信号来确保事件循环能够在任何情况下运行。在了解 guest 代码的执行方式后，`posix-aio-compat.c`使用的这种方法更加自然。\n\n### 执行 guest 代码\n\n到目前为止，我们主要关注的是事件循环及其在 QEMU 中所扮演的的核心角色。但同样重要的是执行 guest 代码的能力，如果没有可执行的 guest 代码，QEMU 即使可以对事件做出响应，但这并没有太大意义。\n\n执行 guest 代码有两种机制：微型代码生成器 (TCG) 和 KVM。TCG 使用动态二进制翻译（也称为即时 (JIT) 编译）模拟 guest。KVM 利用现代英特尔和 AMD CPU 中的硬件虚拟化扩展技术，直接在主机 CPU 上安全地执行 guest 代码。对于本文来说，在使用中实际使用哪种技术并不重要，但重要的是 TCG 和 KVM 都允许我们跳入 guest 代码并执行。\n\n跳入 guest 代码会将执行的控制权转移给 guest。当线程正在运行 guest 代码时，它不能同时处于事件循环中，因为 guest 端对 CPU 具有（安全的）控制权。通常来说，在 guest 代码中花费的时间是有限的，因为对模拟设备寄存器的读写和其他异常处理都将导致我们离开 guest 并将控制权交还给 QEMU。但在极端情况下，guest 可以花费无限的时间去执行某段代码，而且不放弃其控制权限，在这种情况下 QEMU 会无法响应外界信息。\n\n为了解决 guest 代码占用 QEMU 的控制线程的问题，信号被用来打破 guest 的控制权限。一个 UNIX 信号会将控制权限拉离 (yank) 当前的执行流程，并调用信号处理函数。这使 QEMU 得以采取一系列步骤脱离 guest 代码，并返回到其主循环中，其中事件循环可以有机会处理被持续推入到队列中的事件。\n\n这样做的结果是，如果 QEMU 当前处于 guest 代码中，则可能无法立即检测到新事件。当然，大多数时候 QEMU 最终都会处理事件，但这种额外的延迟本身就是一个需要克服的性能问题。由于这个原因，定时器、I / O 完成 (completion) 和从工作线程到 QEMU 核心代码的通知 (notification)，使用信号机制来确保事件循环将立即运行。\n\n你可能想知道事件循环与具有多个 vcpus 的 SMP guest 虚拟机之间的整体情况。在已经讨论了线程模型和执行 guest 代码之后，我们可以讨论它的整体架构。\n\n### iothread 和 non-iothread 架构\n\n传统的体系结构是单个 QEMU 线程来执行 guest 代码和事件循环。这个模型也被称为非 iothread 或`!CONFIG_IOTHREAD`，并且在使用`./configure\n&&\nmake`编译 QEMU 源码时是默认的。QEMU 线程执行 guest 代码，直到异常或信号产生一次回退控制。然后在`select(2)`中以非阻塞的方式运行事件循环的一次迭代。之后，它回到 guest 代码并重复这一过程，直到 QEMU 进程退出。\n\n如果 guest 虚拟机使用`-smp 2`的方式启动多个 vcpus，在这种情况下，就不会创建额外的 QEMU 线程。而是单个 QEMU 线程以多路复用的方式，在两个 vcpus 的 guest 代码和事件循环之间执行。因此，non-iothread 无法利用多核主机，并可能导致 SMP guest 机性能不佳。\n\n请注意，尽管只有一个 QEMU 线程，但可能有零个或多个工作线程。这些线程既可能是暂时的有可能是永久的。请记住，它们执行特定的任务，而不执行 guest 代码或处理事件。我想强调一下，因为在监视 host 上面的线程，并将它们解释为 vcpu 线程时，工作线程很容易被 vcpu 线程所混淆。请记住，non-iothread 线程只有一个 QEMU 线程。\n\n较新的体系结构是每个 vcpu 一个 QEMU 线程以及一个专用的事件循环线程。这种模式被称为 iothread 或 CONFIG_IOTHREAD，可以在构建时使用`./configure --enable-io-thread`启用。每个 vcpu 线程可以并行执行 guest 代码，提供真正的 SMP 支持，而 iothread 负责运行事件循环。通过全局互斥体来维护，QEMU 核心代码代码永远不会同时运行的规则是。该全局互斥体通过 vcpus 和 iothread 同步 QEMU 核心代码。大多数情况下，vcpus 将执行 guest 代码，并且不需要保存全局互斥锁。大多数情况下，`select(2)`中的线程被阻塞，并且不需要保持全局互斥。\n\n请注意，TCG 不是线程安全的，因此即使在 iothread 模型下，它也是以单个 QEMU 线程来实现多路复用 vcpus。只有 KVM 可以利用 per-vcpu 线程。\n\n### 结论和展望\n希望这有助于交流 QEMU 的整体架构 (KVM 继承）。欢迎在下面的评论中留下问题。\n\n在将来，上面讨论到的细节可能会改变，我希望我们会默认使用 CONFIG_IOTHREAD，甚至可能会删除！CONFIG_IOTHREAD。\n\n当 qemu 的 master 分支做出更改时，我会尝试更新此帖。\n","source":"_posts/qemu-internals-overall-architecture.md","raw":"---\ntitle: QEMU 内部原理：整体架构和线程模型『译』\ndate: 2018-04-22 14:46:17\ntags: [QEMU, Translation]\n---\n原文地址：http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html\nAuthor：Stefan Hajnoczi\nTranslator：Su Hang\n_本文经原作者Stefan Hajnoczi授权翻译_\n\n这是针对开发人员的 QEMU 内部原理探析系列中的第一篇文章。它旨在分享 QEMU 工作原理的知识，并使新贡献者更容易了解 QEMU 代码。\n\n执行 guest 代码涉及到如下任务：处理定时器、处理 I/O 请求、响应虚拟机监视器的命令，等等。要想设计一个良好的、能够解决这些问题的架构，需要安全地一次性地解决所有这些资源的分发问题。尤其是当某些请求，譬如 I/O 请求、来自用户的命令，需要大量的时间去执行的话。\n\n一个 guest 的运行包括执行 guest 代码，处理定时器，处理 I / O 以及响应监视器命令。要想一次性地安排好所有这些事情需要一个能够以安全的方式调解资源的体系结构，而且最好不会暂停 guest 代码的执行。如果磁盘 I / O 或监视器命令需要很长时间才能完成，对于需要响应来自多个来源的事件的程序，有两种流行体系结构：\n\n1. 并行体系架构，将工作分解为可同时执行的进程或线程。我将称之为线程架构。\n2.  事件驱动架构，通过在一个主循环分派各个事件到与之对应的事件处理函数。这通常使用`select(2)`或`poll(2)`系列调用系列来实现，以等待多个文件描述符。\n\n但 QEMU 实际上使用了一种将事件驱动编程与多线程相结合的混合架构。这样做是有道理的，因为事件循环不能利用多个 CPU 内核的特性，因为它只有一个执行线程。另外，有时编写专用线程来处理一个特定的任务，而不是将其集成到事件驱动的体系结构，在编程实现中更为简单。尽管如此，QEMU 的核心还是事件驱动的，大多数代码在这种环境中执行。\n\n### QEMU 的事件驱动核心\n\n事件驱动的架构以事件循环为中心，该事件循环将事件分派给处理函数。QEMU 的主要事件循环是`main_loop_wait()`，它执行以下任务：\n\n* 等待文件描述符变为可读或可写。文件描述符起着至关重要的作用，因为无论是文件、套接字、管道还是各种其他资源都是通过文件描述符来控制的。文件描述符可以使用`qemu_set_fd_handler()`来添加。\n* 运行会定时过期的定时器。定时器可以使用`qemu_mod_timer()`添加。\n* 运行下半部机制 (BHs)（译者注：所谓 bottom-halves 机制，是指在允许中断的情况下，将中断处理程序延迟执行），就像立即过期的定时器一样。BH（译者注：原文中 BH 是 bottom halves 的缩写，下同）用于避免重入和溢出调用堆栈。使用`qemu_bh_schedule()`添加 BHs。\n\n<!--more-->\n\n> Linux 将一些中断处理分成两部分，第一部分是在关中断的条件下执行的，具有\"原子\"性，而且是中断发生以后一般要立即执行的，第二部分，就是 bottom half 了，是在开中断的条件下执行，这部分是可以延迟一段时间再做的，而且有可能将多个中断的 bottom half 合并起来一起做。\n\n当文件描述符准备就绪，计时器到期或调度 BH 时，事件循环会调用相应该事件的回调函数。关于回调函数的执行场景，有两条简单规则：\n1.  没有其他核心代码正在同时执行，因此不需要考虑同步问题。回调函数相对于其他核心代码是顺序的，并且以原子的方式执行。在任何时候只有一个控制线程执行核心代码。\n2.  回调函数不应阻塞系统调用或进行长时间运行的运算。由于事件循环会在回调函数返回之前等待，所以其他想要被执行的事件就因此被阻塞，避免在回调中花费大量时间非常重要。打破此规则会导致 guest 虚拟机暂停并且监视器无法再响应用户。\n\n第二条规则有时在 QEMU 的某些代码中其实是难以实现的。事实上，`qemu_aio_wait()`中甚至有一个嵌套事件循环等待顶层事件循环处理的事件子集。希望在未来重构代码时，可以消除这些违背了第二天规则的代码。新代码几乎从来没有合法的理由阻止，一种解决方案是使用专用工作线程来卸载长时间运行或阻塞的代码。\n\n### 将特定任务分配到工作线程\n\n虽然许多 I / O 操作可以以非阻塞方式执行，但是有些系统调用没有非阻塞版本。此外，有时候长时运行的计算任务会影响 CPU，并且很难将其分解成多个小的回调函数。在这些情况下，可以谨慎地通过分配专用工作线程的方式，将这些任务移出 QEMU 核心函数。\n\n一个工作线程的用户示例是`posix-aio-compat.c`，一个异步文件 I / O 实现。当 QEMU 核心代码发出 aio 请求时，该请求将被放置在一个队列中。工作线程将从队列中取出该 aio 请求并在 QEMU 核心函数之外去执行。这时就可以执行阻塞操作了，因为这些任务在自己的线程中执行并且不会阻塞 QEMU 的其余部分。通过这种方式需要注意在工作线程和 QEMU 核心函数之间执行必要的同步和通信。\n\n另一个例子是`ui/vnc-jobs-async.c`，它在工作线程中进行密集的图像压缩和编码计算。\n\n由于大多数 QEMU 核心代码不是线程安全的，所以工作线程不能调用 QEMU 核心代码代码。对于简单的实用程序——如`qemu_malloc()`——是线程安全的，但这算是例外而非规则。这种特性使得将工作线程事件传回 QEMU 核心函数变成了一个难题。\n\n当工作线程需要通知 QEMU 核心代码时，会在事件循环中添加管道或`qemu_eventfd()`文件描述符。工作线程可以写入文件描述符，并且当文件描述符的状态变为可读时，事件循环将调用回调函数。另外，必须有一个信号来确保事件循环能够在任何情况下运行。在了解 guest 代码的执行方式后，`posix-aio-compat.c`使用的这种方法更加自然。\n\n### 执行 guest 代码\n\n到目前为止，我们主要关注的是事件循环及其在 QEMU 中所扮演的的核心角色。但同样重要的是执行 guest 代码的能力，如果没有可执行的 guest 代码，QEMU 即使可以对事件做出响应，但这并没有太大意义。\n\n执行 guest 代码有两种机制：微型代码生成器 (TCG) 和 KVM。TCG 使用动态二进制翻译（也称为即时 (JIT) 编译）模拟 guest。KVM 利用现代英特尔和 AMD CPU 中的硬件虚拟化扩展技术，直接在主机 CPU 上安全地执行 guest 代码。对于本文来说，在使用中实际使用哪种技术并不重要，但重要的是 TCG 和 KVM 都允许我们跳入 guest 代码并执行。\n\n跳入 guest 代码会将执行的控制权转移给 guest。当线程正在运行 guest 代码时，它不能同时处于事件循环中，因为 guest 端对 CPU 具有（安全的）控制权。通常来说，在 guest 代码中花费的时间是有限的，因为对模拟设备寄存器的读写和其他异常处理都将导致我们离开 guest 并将控制权交还给 QEMU。但在极端情况下，guest 可以花费无限的时间去执行某段代码，而且不放弃其控制权限，在这种情况下 QEMU 会无法响应外界信息。\n\n为了解决 guest 代码占用 QEMU 的控制线程的问题，信号被用来打破 guest 的控制权限。一个 UNIX 信号会将控制权限拉离 (yank) 当前的执行流程，并调用信号处理函数。这使 QEMU 得以采取一系列步骤脱离 guest 代码，并返回到其主循环中，其中事件循环可以有机会处理被持续推入到队列中的事件。\n\n这样做的结果是，如果 QEMU 当前处于 guest 代码中，则可能无法立即检测到新事件。当然，大多数时候 QEMU 最终都会处理事件，但这种额外的延迟本身就是一个需要克服的性能问题。由于这个原因，定时器、I / O 完成 (completion) 和从工作线程到 QEMU 核心代码的通知 (notification)，使用信号机制来确保事件循环将立即运行。\n\n你可能想知道事件循环与具有多个 vcpus 的 SMP guest 虚拟机之间的整体情况。在已经讨论了线程模型和执行 guest 代码之后，我们可以讨论它的整体架构。\n\n### iothread 和 non-iothread 架构\n\n传统的体系结构是单个 QEMU 线程来执行 guest 代码和事件循环。这个模型也被称为非 iothread 或`!CONFIG_IOTHREAD`，并且在使用`./configure\n&&\nmake`编译 QEMU 源码时是默认的。QEMU 线程执行 guest 代码，直到异常或信号产生一次回退控制。然后在`select(2)`中以非阻塞的方式运行事件循环的一次迭代。之后，它回到 guest 代码并重复这一过程，直到 QEMU 进程退出。\n\n如果 guest 虚拟机使用`-smp 2`的方式启动多个 vcpus，在这种情况下，就不会创建额外的 QEMU 线程。而是单个 QEMU 线程以多路复用的方式，在两个 vcpus 的 guest 代码和事件循环之间执行。因此，non-iothread 无法利用多核主机，并可能导致 SMP guest 机性能不佳。\n\n请注意，尽管只有一个 QEMU 线程，但可能有零个或多个工作线程。这些线程既可能是暂时的有可能是永久的。请记住，它们执行特定的任务，而不执行 guest 代码或处理事件。我想强调一下，因为在监视 host 上面的线程，并将它们解释为 vcpu 线程时，工作线程很容易被 vcpu 线程所混淆。请记住，non-iothread 线程只有一个 QEMU 线程。\n\n较新的体系结构是每个 vcpu 一个 QEMU 线程以及一个专用的事件循环线程。这种模式被称为 iothread 或 CONFIG_IOTHREAD，可以在构建时使用`./configure --enable-io-thread`启用。每个 vcpu 线程可以并行执行 guest 代码，提供真正的 SMP 支持，而 iothread 负责运行事件循环。通过全局互斥体来维护，QEMU 核心代码代码永远不会同时运行的规则是。该全局互斥体通过 vcpus 和 iothread 同步 QEMU 核心代码。大多数情况下，vcpus 将执行 guest 代码，并且不需要保存全局互斥锁。大多数情况下，`select(2)`中的线程被阻塞，并且不需要保持全局互斥。\n\n请注意，TCG 不是线程安全的，因此即使在 iothread 模型下，它也是以单个 QEMU 线程来实现多路复用 vcpus。只有 KVM 可以利用 per-vcpu 线程。\n\n### 结论和展望\n希望这有助于交流 QEMU 的整体架构 (KVM 继承）。欢迎在下面的评论中留下问题。\n\n在将来，上面讨论到的细节可能会改变，我希望我们会默认使用 CONFIG_IOTHREAD，甚至可能会删除！CONFIG_IOTHREAD。\n\n当 qemu 的 master 分支做出更改时，我会尝试更新此帖。\n","slug":"qemu-internals-overall-architecture","published":1,"updated":"2019-03-18T08:49:05.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjucbl8l80014b9fsqkaj3u1n","content":"<p>原文地址：<a href=\"http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html\" target=\"_blank\" rel=\"noopener\">http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html</a><br>Author：Stefan Hajnoczi<br>Translator：Su Hang<br><em>本文经原作者Stefan Hajnoczi授权翻译</em></p>\n<p>这是针对开发人员的 QEMU 内部原理探析系列中的第一篇文章。它旨在分享 QEMU 工作原理的知识，并使新贡献者更容易了解 QEMU 代码。</p>\n<p>执行 guest 代码涉及到如下任务：处理定时器、处理 I/O 请求、响应虚拟机监视器的命令，等等。要想设计一个良好的、能够解决这些问题的架构，需要安全地一次性地解决所有这些资源的分发问题。尤其是当某些请求，譬如 I/O 请求、来自用户的命令，需要大量的时间去执行的话。</p>\n<p>一个 guest 的运行包括执行 guest 代码，处理定时器，处理 I / O 以及响应监视器命令。要想一次性地安排好所有这些事情需要一个能够以安全的方式调解资源的体系结构，而且最好不会暂停 guest 代码的执行。如果磁盘 I / O 或监视器命令需要很长时间才能完成，对于需要响应来自多个来源的事件的程序，有两种流行体系结构：</p>\n<ol>\n<li>并行体系架构，将工作分解为可同时执行的进程或线程。我将称之为线程架构。</li>\n<li>事件驱动架构，通过在一个主循环分派各个事件到与之对应的事件处理函数。这通常使用<code>select(2)</code>或<code>poll(2)</code>系列调用系列来实现，以等待多个文件描述符。</li>\n</ol>\n<p>但 QEMU 实际上使用了一种将事件驱动编程与多线程相结合的混合架构。这样做是有道理的，因为事件循环不能利用多个 CPU 内核的特性，因为它只有一个执行线程。另外，有时编写专用线程来处理一个特定的任务，而不是将其集成到事件驱动的体系结构，在编程实现中更为简单。尽管如此，QEMU 的核心还是事件驱动的，大多数代码在这种环境中执行。</p>\n<h3 id=\"QEMU-的事件驱动核心\"><a href=\"#QEMU-的事件驱动核心\" class=\"headerlink\" title=\"QEMU 的事件驱动核心\"></a>QEMU 的事件驱动核心</h3><p>事件驱动的架构以事件循环为中心，该事件循环将事件分派给处理函数。QEMU 的主要事件循环是<code>main_loop_wait()</code>，它执行以下任务：</p>\n<ul>\n<li>等待文件描述符变为可读或可写。文件描述符起着至关重要的作用，因为无论是文件、套接字、管道还是各种其他资源都是通过文件描述符来控制的。文件描述符可以使用<code>qemu_set_fd_handler()</code>来添加。</li>\n<li>运行会定时过期的定时器。定时器可以使用<code>qemu_mod_timer()</code>添加。</li>\n<li>运行下半部机制 (BHs)（译者注：所谓 bottom-halves 机制，是指在允许中断的情况下，将中断处理程序延迟执行），就像立即过期的定时器一样。BH（译者注：原文中 BH 是 bottom halves 的缩写，下同）用于避免重入和溢出调用堆栈。使用<code>qemu_bh_schedule()</code>添加 BHs。</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p>Linux 将一些中断处理分成两部分，第一部分是在关中断的条件下执行的，具有”原子”性，而且是中断发生以后一般要立即执行的，第二部分，就是 bottom half 了，是在开中断的条件下执行，这部分是可以延迟一段时间再做的，而且有可能将多个中断的 bottom half 合并起来一起做。</p>\n</blockquote>\n<p>当文件描述符准备就绪，计时器到期或调度 BH 时，事件循环会调用相应该事件的回调函数。关于回调函数的执行场景，有两条简单规则：</p>\n<ol>\n<li>没有其他核心代码正在同时执行，因此不需要考虑同步问题。回调函数相对于其他核心代码是顺序的，并且以原子的方式执行。在任何时候只有一个控制线程执行核心代码。</li>\n<li>回调函数不应阻塞系统调用或进行长时间运行的运算。由于事件循环会在回调函数返回之前等待，所以其他想要被执行的事件就因此被阻塞，避免在回调中花费大量时间非常重要。打破此规则会导致 guest 虚拟机暂停并且监视器无法再响应用户。</li>\n</ol>\n<p>第二条规则有时在 QEMU 的某些代码中其实是难以实现的。事实上，<code>qemu_aio_wait()</code>中甚至有一个嵌套事件循环等待顶层事件循环处理的事件子集。希望在未来重构代码时，可以消除这些违背了第二天规则的代码。新代码几乎从来没有合法的理由阻止，一种解决方案是使用专用工作线程来卸载长时间运行或阻塞的代码。</p>\n<h3 id=\"将特定任务分配到工作线程\"><a href=\"#将特定任务分配到工作线程\" class=\"headerlink\" title=\"将特定任务分配到工作线程\"></a>将特定任务分配到工作线程</h3><p>虽然许多 I / O 操作可以以非阻塞方式执行，但是有些系统调用没有非阻塞版本。此外，有时候长时运行的计算任务会影响 CPU，并且很难将其分解成多个小的回调函数。在这些情况下，可以谨慎地通过分配专用工作线程的方式，将这些任务移出 QEMU 核心函数。</p>\n<p>一个工作线程的用户示例是<code>posix-aio-compat.c</code>，一个异步文件 I / O 实现。当 QEMU 核心代码发出 aio 请求时，该请求将被放置在一个队列中。工作线程将从队列中取出该 aio 请求并在 QEMU 核心函数之外去执行。这时就可以执行阻塞操作了，因为这些任务在自己的线程中执行并且不会阻塞 QEMU 的其余部分。通过这种方式需要注意在工作线程和 QEMU 核心函数之间执行必要的同步和通信。</p>\n<p>另一个例子是<code>ui/vnc-jobs-async.c</code>，它在工作线程中进行密集的图像压缩和编码计算。</p>\n<p>由于大多数 QEMU 核心代码不是线程安全的，所以工作线程不能调用 QEMU 核心代码代码。对于简单的实用程序——如<code>qemu_malloc()</code>——是线程安全的，但这算是例外而非规则。这种特性使得将工作线程事件传回 QEMU 核心函数变成了一个难题。</p>\n<p>当工作线程需要通知 QEMU 核心代码时，会在事件循环中添加管道或<code>qemu_eventfd()</code>文件描述符。工作线程可以写入文件描述符，并且当文件描述符的状态变为可读时，事件循环将调用回调函数。另外，必须有一个信号来确保事件循环能够在任何情况下运行。在了解 guest 代码的执行方式后，<code>posix-aio-compat.c</code>使用的这种方法更加自然。</p>\n<h3 id=\"执行-guest-代码\"><a href=\"#执行-guest-代码\" class=\"headerlink\" title=\"执行 guest 代码\"></a>执行 guest 代码</h3><p>到目前为止，我们主要关注的是事件循环及其在 QEMU 中所扮演的的核心角色。但同样重要的是执行 guest 代码的能力，如果没有可执行的 guest 代码，QEMU 即使可以对事件做出响应，但这并没有太大意义。</p>\n<p>执行 guest 代码有两种机制：微型代码生成器 (TCG) 和 KVM。TCG 使用动态二进制翻译（也称为即时 (JIT) 编译）模拟 guest。KVM 利用现代英特尔和 AMD CPU 中的硬件虚拟化扩展技术，直接在主机 CPU 上安全地执行 guest 代码。对于本文来说，在使用中实际使用哪种技术并不重要，但重要的是 TCG 和 KVM 都允许我们跳入 guest 代码并执行。</p>\n<p>跳入 guest 代码会将执行的控制权转移给 guest。当线程正在运行 guest 代码时，它不能同时处于事件循环中，因为 guest 端对 CPU 具有（安全的）控制权。通常来说，在 guest 代码中花费的时间是有限的，因为对模拟设备寄存器的读写和其他异常处理都将导致我们离开 guest 并将控制权交还给 QEMU。但在极端情况下，guest 可以花费无限的时间去执行某段代码，而且不放弃其控制权限，在这种情况下 QEMU 会无法响应外界信息。</p>\n<p>为了解决 guest 代码占用 QEMU 的控制线程的问题，信号被用来打破 guest 的控制权限。一个 UNIX 信号会将控制权限拉离 (yank) 当前的执行流程，并调用信号处理函数。这使 QEMU 得以采取一系列步骤脱离 guest 代码，并返回到其主循环中，其中事件循环可以有机会处理被持续推入到队列中的事件。</p>\n<p>这样做的结果是，如果 QEMU 当前处于 guest 代码中，则可能无法立即检测到新事件。当然，大多数时候 QEMU 最终都会处理事件，但这种额外的延迟本身就是一个需要克服的性能问题。由于这个原因，定时器、I / O 完成 (completion) 和从工作线程到 QEMU 核心代码的通知 (notification)，使用信号机制来确保事件循环将立即运行。</p>\n<p>你可能想知道事件循环与具有多个 vcpus 的 SMP guest 虚拟机之间的整体情况。在已经讨论了线程模型和执行 guest 代码之后，我们可以讨论它的整体架构。</p>\n<h3 id=\"iothread-和-non-iothread-架构\"><a href=\"#iothread-和-non-iothread-架构\" class=\"headerlink\" title=\"iothread 和 non-iothread 架构\"></a>iothread 和 non-iothread 架构</h3><p>传统的体系结构是单个 QEMU 线程来执行 guest 代码和事件循环。这个模型也被称为非 iothread 或<code>!CONFIG_IOTHREAD</code>，并且在使用<code>./configure\n&amp;&amp;\nmake</code>编译 QEMU 源码时是默认的。QEMU 线程执行 guest 代码，直到异常或信号产生一次回退控制。然后在<code>select(2)</code>中以非阻塞的方式运行事件循环的一次迭代。之后，它回到 guest 代码并重复这一过程，直到 QEMU 进程退出。</p>\n<p>如果 guest 虚拟机使用<code>-smp 2</code>的方式启动多个 vcpus，在这种情况下，就不会创建额外的 QEMU 线程。而是单个 QEMU 线程以多路复用的方式，在两个 vcpus 的 guest 代码和事件循环之间执行。因此，non-iothread 无法利用多核主机，并可能导致 SMP guest 机性能不佳。</p>\n<p>请注意，尽管只有一个 QEMU 线程，但可能有零个或多个工作线程。这些线程既可能是暂时的有可能是永久的。请记住，它们执行特定的任务，而不执行 guest 代码或处理事件。我想强调一下，因为在监视 host 上面的线程，并将它们解释为 vcpu 线程时，工作线程很容易被 vcpu 线程所混淆。请记住，non-iothread 线程只有一个 QEMU 线程。</p>\n<p>较新的体系结构是每个 vcpu 一个 QEMU 线程以及一个专用的事件循环线程。这种模式被称为 iothread 或 CONFIG_IOTHREAD，可以在构建时使用<code>./configure --enable-io-thread</code>启用。每个 vcpu 线程可以并行执行 guest 代码，提供真正的 SMP 支持，而 iothread 负责运行事件循环。通过全局互斥体来维护，QEMU 核心代码代码永远不会同时运行的规则是。该全局互斥体通过 vcpus 和 iothread 同步 QEMU 核心代码。大多数情况下，vcpus 将执行 guest 代码，并且不需要保存全局互斥锁。大多数情况下，<code>select(2)</code>中的线程被阻塞，并且不需要保持全局互斥。</p>\n<p>请注意，TCG 不是线程安全的，因此即使在 iothread 模型下，它也是以单个 QEMU 线程来实现多路复用 vcpus。只有 KVM 可以利用 per-vcpu 线程。</p>\n<h3 id=\"结论和展望\"><a href=\"#结论和展望\" class=\"headerlink\" title=\"结论和展望\"></a>结论和展望</h3><p>希望这有助于交流 QEMU 的整体架构 (KVM 继承）。欢迎在下面的评论中留下问题。</p>\n<p>在将来，上面讨论到的细节可能会改变，我希望我们会默认使用 CONFIG_IOTHREAD，甚至可能会删除！CONFIG_IOTHREAD。</p>\n<p>当 qemu 的 master 分支做出更改时，我会尝试更新此帖。</p>\n","site":{"data":{}},"excerpt":"<p>原文地址：<a href=\"http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html\" target=\"_blank\" rel=\"noopener\">http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html</a><br>Author：Stefan Hajnoczi<br>Translator：Su Hang<br><em>本文经原作者Stefan Hajnoczi授权翻译</em></p>\n<p>这是针对开发人员的 QEMU 内部原理探析系列中的第一篇文章。它旨在分享 QEMU 工作原理的知识，并使新贡献者更容易了解 QEMU 代码。</p>\n<p>执行 guest 代码涉及到如下任务：处理定时器、处理 I/O 请求、响应虚拟机监视器的命令，等等。要想设计一个良好的、能够解决这些问题的架构，需要安全地一次性地解决所有这些资源的分发问题。尤其是当某些请求，譬如 I/O 请求、来自用户的命令，需要大量的时间去执行的话。</p>\n<p>一个 guest 的运行包括执行 guest 代码，处理定时器，处理 I / O 以及响应监视器命令。要想一次性地安排好所有这些事情需要一个能够以安全的方式调解资源的体系结构，而且最好不会暂停 guest 代码的执行。如果磁盘 I / O 或监视器命令需要很长时间才能完成，对于需要响应来自多个来源的事件的程序，有两种流行体系结构：</p>\n<ol>\n<li>并行体系架构，将工作分解为可同时执行的进程或线程。我将称之为线程架构。</li>\n<li>事件驱动架构，通过在一个主循环分派各个事件到与之对应的事件处理函数。这通常使用<code>select(2)</code>或<code>poll(2)</code>系列调用系列来实现，以等待多个文件描述符。</li>\n</ol>\n<p>但 QEMU 实际上使用了一种将事件驱动编程与多线程相结合的混合架构。这样做是有道理的，因为事件循环不能利用多个 CPU 内核的特性，因为它只有一个执行线程。另外，有时编写专用线程来处理一个特定的任务，而不是将其集成到事件驱动的体系结构，在编程实现中更为简单。尽管如此，QEMU 的核心还是事件驱动的，大多数代码在这种环境中执行。</p>\n<h3 id=\"QEMU-的事件驱动核心\"><a href=\"#QEMU-的事件驱动核心\" class=\"headerlink\" title=\"QEMU 的事件驱动核心\"></a>QEMU 的事件驱动核心</h3><p>事件驱动的架构以事件循环为中心，该事件循环将事件分派给处理函数。QEMU 的主要事件循环是<code>main_loop_wait()</code>，它执行以下任务：</p>\n<ul>\n<li>等待文件描述符变为可读或可写。文件描述符起着至关重要的作用，因为无论是文件、套接字、管道还是各种其他资源都是通过文件描述符来控制的。文件描述符可以使用<code>qemu_set_fd_handler()</code>来添加。</li>\n<li>运行会定时过期的定时器。定时器可以使用<code>qemu_mod_timer()</code>添加。</li>\n<li>运行下半部机制 (BHs)（译者注：所谓 bottom-halves 机制，是指在允许中断的情况下，将中断处理程序延迟执行），就像立即过期的定时器一样。BH（译者注：原文中 BH 是 bottom halves 的缩写，下同）用于避免重入和溢出调用堆栈。使用<code>qemu_bh_schedule()</code>添加 BHs。</li>\n</ul>","more":"<blockquote>\n<p>Linux 将一些中断处理分成两部分，第一部分是在关中断的条件下执行的，具有”原子”性，而且是中断发生以后一般要立即执行的，第二部分，就是 bottom half 了，是在开中断的条件下执行，这部分是可以延迟一段时间再做的，而且有可能将多个中断的 bottom half 合并起来一起做。</p>\n</blockquote>\n<p>当文件描述符准备就绪，计时器到期或调度 BH 时，事件循环会调用相应该事件的回调函数。关于回调函数的执行场景，有两条简单规则：</p>\n<ol>\n<li>没有其他核心代码正在同时执行，因此不需要考虑同步问题。回调函数相对于其他核心代码是顺序的，并且以原子的方式执行。在任何时候只有一个控制线程执行核心代码。</li>\n<li>回调函数不应阻塞系统调用或进行长时间运行的运算。由于事件循环会在回调函数返回之前等待，所以其他想要被执行的事件就因此被阻塞，避免在回调中花费大量时间非常重要。打破此规则会导致 guest 虚拟机暂停并且监视器无法再响应用户。</li>\n</ol>\n<p>第二条规则有时在 QEMU 的某些代码中其实是难以实现的。事实上，<code>qemu_aio_wait()</code>中甚至有一个嵌套事件循环等待顶层事件循环处理的事件子集。希望在未来重构代码时，可以消除这些违背了第二天规则的代码。新代码几乎从来没有合法的理由阻止，一种解决方案是使用专用工作线程来卸载长时间运行或阻塞的代码。</p>\n<h3 id=\"将特定任务分配到工作线程\"><a href=\"#将特定任务分配到工作线程\" class=\"headerlink\" title=\"将特定任务分配到工作线程\"></a>将特定任务分配到工作线程</h3><p>虽然许多 I / O 操作可以以非阻塞方式执行，但是有些系统调用没有非阻塞版本。此外，有时候长时运行的计算任务会影响 CPU，并且很难将其分解成多个小的回调函数。在这些情况下，可以谨慎地通过分配专用工作线程的方式，将这些任务移出 QEMU 核心函数。</p>\n<p>一个工作线程的用户示例是<code>posix-aio-compat.c</code>，一个异步文件 I / O 实现。当 QEMU 核心代码发出 aio 请求时，该请求将被放置在一个队列中。工作线程将从队列中取出该 aio 请求并在 QEMU 核心函数之外去执行。这时就可以执行阻塞操作了，因为这些任务在自己的线程中执行并且不会阻塞 QEMU 的其余部分。通过这种方式需要注意在工作线程和 QEMU 核心函数之间执行必要的同步和通信。</p>\n<p>另一个例子是<code>ui/vnc-jobs-async.c</code>，它在工作线程中进行密集的图像压缩和编码计算。</p>\n<p>由于大多数 QEMU 核心代码不是线程安全的，所以工作线程不能调用 QEMU 核心代码代码。对于简单的实用程序——如<code>qemu_malloc()</code>——是线程安全的，但这算是例外而非规则。这种特性使得将工作线程事件传回 QEMU 核心函数变成了一个难题。</p>\n<p>当工作线程需要通知 QEMU 核心代码时，会在事件循环中添加管道或<code>qemu_eventfd()</code>文件描述符。工作线程可以写入文件描述符，并且当文件描述符的状态变为可读时，事件循环将调用回调函数。另外，必须有一个信号来确保事件循环能够在任何情况下运行。在了解 guest 代码的执行方式后，<code>posix-aio-compat.c</code>使用的这种方法更加自然。</p>\n<h3 id=\"执行-guest-代码\"><a href=\"#执行-guest-代码\" class=\"headerlink\" title=\"执行 guest 代码\"></a>执行 guest 代码</h3><p>到目前为止，我们主要关注的是事件循环及其在 QEMU 中所扮演的的核心角色。但同样重要的是执行 guest 代码的能力，如果没有可执行的 guest 代码，QEMU 即使可以对事件做出响应，但这并没有太大意义。</p>\n<p>执行 guest 代码有两种机制：微型代码生成器 (TCG) 和 KVM。TCG 使用动态二进制翻译（也称为即时 (JIT) 编译）模拟 guest。KVM 利用现代英特尔和 AMD CPU 中的硬件虚拟化扩展技术，直接在主机 CPU 上安全地执行 guest 代码。对于本文来说，在使用中实际使用哪种技术并不重要，但重要的是 TCG 和 KVM 都允许我们跳入 guest 代码并执行。</p>\n<p>跳入 guest 代码会将执行的控制权转移给 guest。当线程正在运行 guest 代码时，它不能同时处于事件循环中，因为 guest 端对 CPU 具有（安全的）控制权。通常来说，在 guest 代码中花费的时间是有限的，因为对模拟设备寄存器的读写和其他异常处理都将导致我们离开 guest 并将控制权交还给 QEMU。但在极端情况下，guest 可以花费无限的时间去执行某段代码，而且不放弃其控制权限，在这种情况下 QEMU 会无法响应外界信息。</p>\n<p>为了解决 guest 代码占用 QEMU 的控制线程的问题，信号被用来打破 guest 的控制权限。一个 UNIX 信号会将控制权限拉离 (yank) 当前的执行流程，并调用信号处理函数。这使 QEMU 得以采取一系列步骤脱离 guest 代码，并返回到其主循环中，其中事件循环可以有机会处理被持续推入到队列中的事件。</p>\n<p>这样做的结果是，如果 QEMU 当前处于 guest 代码中，则可能无法立即检测到新事件。当然，大多数时候 QEMU 最终都会处理事件，但这种额外的延迟本身就是一个需要克服的性能问题。由于这个原因，定时器、I / O 完成 (completion) 和从工作线程到 QEMU 核心代码的通知 (notification)，使用信号机制来确保事件循环将立即运行。</p>\n<p>你可能想知道事件循环与具有多个 vcpus 的 SMP guest 虚拟机之间的整体情况。在已经讨论了线程模型和执行 guest 代码之后，我们可以讨论它的整体架构。</p>\n<h3 id=\"iothread-和-non-iothread-架构\"><a href=\"#iothread-和-non-iothread-架构\" class=\"headerlink\" title=\"iothread 和 non-iothread 架构\"></a>iothread 和 non-iothread 架构</h3><p>传统的体系结构是单个 QEMU 线程来执行 guest 代码和事件循环。这个模型也被称为非 iothread 或<code>!CONFIG_IOTHREAD</code>，并且在使用<code>./configure\n&amp;&amp;\nmake</code>编译 QEMU 源码时是默认的。QEMU 线程执行 guest 代码，直到异常或信号产生一次回退控制。然后在<code>select(2)</code>中以非阻塞的方式运行事件循环的一次迭代。之后，它回到 guest 代码并重复这一过程，直到 QEMU 进程退出。</p>\n<p>如果 guest 虚拟机使用<code>-smp 2</code>的方式启动多个 vcpus，在这种情况下，就不会创建额外的 QEMU 线程。而是单个 QEMU 线程以多路复用的方式，在两个 vcpus 的 guest 代码和事件循环之间执行。因此，non-iothread 无法利用多核主机，并可能导致 SMP guest 机性能不佳。</p>\n<p>请注意，尽管只有一个 QEMU 线程，但可能有零个或多个工作线程。这些线程既可能是暂时的有可能是永久的。请记住，它们执行特定的任务，而不执行 guest 代码或处理事件。我想强调一下，因为在监视 host 上面的线程，并将它们解释为 vcpu 线程时，工作线程很容易被 vcpu 线程所混淆。请记住，non-iothread 线程只有一个 QEMU 线程。</p>\n<p>较新的体系结构是每个 vcpu 一个 QEMU 线程以及一个专用的事件循环线程。这种模式被称为 iothread 或 CONFIG_IOTHREAD，可以在构建时使用<code>./configure --enable-io-thread</code>启用。每个 vcpu 线程可以并行执行 guest 代码，提供真正的 SMP 支持，而 iothread 负责运行事件循环。通过全局互斥体来维护，QEMU 核心代码代码永远不会同时运行的规则是。该全局互斥体通过 vcpus 和 iothread 同步 QEMU 核心代码。大多数情况下，vcpus 将执行 guest 代码，并且不需要保存全局互斥锁。大多数情况下，<code>select(2)</code>中的线程被阻塞，并且不需要保持全局互斥。</p>\n<p>请注意，TCG 不是线程安全的，因此即使在 iothread 模型下，它也是以单个 QEMU 线程来实现多路复用 vcpus。只有 KVM 可以利用 per-vcpu 线程。</p>\n<h3 id=\"结论和展望\"><a href=\"#结论和展望\" class=\"headerlink\" title=\"结论和展望\"></a>结论和展望</h3><p>希望这有助于交流 QEMU 的整体架构 (KVM 继承）。欢迎在下面的评论中留下问题。</p>\n<p>在将来，上面讨论到的细节可能会改变，我希望我们会默认使用 CONFIG_IOTHREAD，甚至可能会删除！CONFIG_IOTHREAD。</p>\n<p>当 qemu 的 master 分支做出更改时，我会尝试更新此帖。</p>"},{"title":"了解 QEMU 设备模拟原理『译』","date":"2018-04-22T03:24:39.000Z","_content":"原文地址：https://www.qemu.org/2018/02/09/understanding-qemu-devices/\nAuthor：Eric Blake\nTranslator：Su Hang\n\n以下是一些可帮助新手了解 QEMU 设备实际原理的笔记：\n\n在使用 QEMU 时，需要记住的一件事就是：以操作系统的视角来说，当其运行于我们试图模拟的裸机硬件之上时，操作系统在裸机硬件上会看到什么。大多数裸机的模拟实现仅仅是简单的内存映射，在特定地址上的软件戳（software poking) 会产生特定的边际效应（side effect）（最常见的边际效应当然是访问内存；但是内存中的其他常见区域还包括用于控制寄存器组特定的硬件，如硬盘或网卡，甚至 CPU 本身）。模拟的最终目标是允许只使用普通 ring3 内存访问（译者注：这里的普通内存访问与操作系统的 ring0 特权访问相对应）的用户空间程序来管理 guest 操作系统所期望的所有边际效应。\n\n从实现细节上来说，一些硬件（如 x86）实际上有两个内存空间，其中 I / O 空间使用与普通内存访问（译者注：例如 mov a， b) 不同的汇编代码（译者注：这里指 in a，out a 等等 x86 架构特有汇编指令）； QEMU 必须模拟这些特殊访问。同样，许多现代 CPU 在内存地址映射范围中，也为提供了一组 CPU 本地寄存器，例如中断控制寄存器。\n\n对于在某些特定硬件，我们通过虚拟化挂钩技术（virtualization hooks)，使得 CPU 本身可以很容易地捕获非正常存储器访问的汇编指令（那些访问 I / O 空间或 CPU 内部寄存器的指令，因此需要不同于正常存储器访问的边际效应），所以 guest 机只是执行与裸机相同的汇编指令序列，但是执行之后会导致陷入到 trap 中，让运行于用户空间的 QEMU 在对控制权返回 guest 代码之前使用普通的用户空间内存访问对指令作出反应。QEMU 通过“加速器”实现了这个功能。\n\n虚拟化加速器（如 KVM）可以使 guest 代码运行在 QEMU 虚拟机中的速度几乎与裸机一样快。其中速度减慢的部分是由来自 guest 代码的每个 trap 都会返回至 QEMU（vmexit）执行，以处理非正常的汇编指令或内存地址引起的。除此之外，QEMU 还支持其他虚拟化加速器（例如 HAXM 或 macOS 的 Hypervisor.framework）。\n\n<!--more-->\n\nQEMU 还拥有一个 TCG 加速器，该加速器在运行期（译者注：可视为一种 Just in time 技术）将 guest 汇编指令编译为相应的主机指令或调用主机帮助例程。TCG 技术虽然速度不及硬件加速，但它允许跨硬件模拟，例如在 x86 上运行 ARM 代码。\n\n接下来要弄清楚的是当操作系统访问各种硬件资源时都发生了些什么。例如，大多数操作系统都附带了管理 IDE 磁盘的驱动程序 - 驱动程序仅仅是一种软件，它被编程为对特定的内存映射子集（译者注：简单来说就是某一片内存区域）（IDE 总线所在的任何位置）发出特定的 I / O 请求，与不同的硬件相绑定）。当 IDE 控制器硬件接收到这些 I / O 请求时，它会执行相应的操作（通过 DMA 传输或其他硬件操作）将数据从内存复制到永久存储器（写入磁盘）或从永久存储器复制到内存（从磁盘读取）。\n\n当我们购买一个包含未初始化磁盘的裸机硬件时，我们安装使用操作系统中相应驱动程序，对 IDE 硬件映射到内存的部分进行访问，然后将磁盘格式化为一系列分区和文件系统。\n\n那么，QEMU 如何模拟这个功能呢？在 QEMU 提供给 guest 代码的内存映射中，它在与裸机相同的地址处（译者注：具体地址得查阅相应的硬件手册）模拟 IDE 磁盘。当 guest 操作系统驱动程序向 IDE 控制寄存器发出特定的内存写入操作以便将数据从内存复制到永久存储器时，QEMU 加速器会陷入该内存区域（译者注：通过 Hook 技术实现），并将请求传递到 QEMU IDE 控制器设备模型。设备模型会解析 I / O 请求，并通过发出主机系统调用来模拟它们。这一系列行为的结果是 guest 内存被复制到 host 机器的存储中。\n\n在 host 端，模拟永久存储的最简单方法是将主机文件系统中的文件视为不包含任何结构信息的原始数据（raw data）（也就是说，host 文件中的偏移量与 guest 驱动程序访问的磁盘偏移量，以 1：1 比例映射）. 但 QEMU 实际上能够将许多不同主机格式（raw， qcow2，qed， vhdx，...）和协议（文件系统，块设备， NBD， Ceph，gluster 等）的任意组合粘合在一起作为后端，然后在 QEMU 对硬件的模拟中绑定到提供服务的 guest 设备。\n\n因此，当您告诉 QEMU 使用主机 qcow2 文件时，guest 虚拟机不必对 qcow2 文件格式有任何了解，仅仅只需要 guest 的驱动程序执行与裸机相同的寄存器读写操作，从而触发 vmexits 进入 QEMU 代码，然后 QEMU 将这些访问映射到 qcow2 文件的相应偏移量中来进行读写。在首次安装 guest 虚拟机时，所有 guest 虚拟机都会看到一个空白未初始化的线性磁盘（无论该磁盘在主机中是线性的——如原始数据（raw format）；还是针对随机访问进行了优化，如 qcow2 格式）；guest 操作系统决定如何划分其硬盘并在其上安装文件系统，而 QEMU 不关心 guest 代码正在使用什么文件系统，只关心原始磁盘（raw disk）I / O 寄存器控制序列的模式。\n\n接下来要意识到的是，模拟 IDE 并不总是最高效的。每次 guest 试图写入控制寄存器时，都必须经过特殊处理，并且 vmexits 会减慢模拟速度。当然，不同的硬件模型在虚拟化时具有不同的性能特征。然而，一般来说，对真实硬件最有效实现方法并不一定适用于其在虚拟化之中的实现，直到最近，硬件并没有被设计成当通过 QEMU 等软件进行模拟时运行得更快。因此，QEMU 包含专为此目的而设计的半虚拟化设备（paravirtualized device）。\n\n在 QEMU 这里的“半虚拟化”的含义，与半虚拟化的原始含义：“通过 guest 和主机之间的合作实现虚拟化”略有不同。QEMU 开发人员已经制定了一套硬件寄存器规范，并规定了这些寄存器的行为，这些寄存器旨在尽可能减少 vmexits 的数量，同时仍然完成硬盘必须做的事情，即实现 guest 内存和持久存储设备之间的传输。这个规范被称为 virtio；使用它需要在 guest 虚拟机中安装 virtio 驱动程序。尽管不存在与 virtio 具有相同的寄存器布局的物理设备，但其理念是相通的：virtio 磁盘的行为类似于内存映射寄存器组，guest 操作系统驱动程序知道将哪些操作硬件的寄存器值的写入该存储体，以使数据被复制进出其他 guest 内存。virtio 中的大部分加速功能都是通过它的如下设计实现的：guest 虚拟机为其大部分硬件命令序列设置了一部分常规内存，只需启动一个寄存器即可告知 QEMU 读取命令序列（较少的映射寄存器访问意味着更少的 vmexits），通过握手机制（handshaking）来保证 QEMU 处理这些命令序列时 guest 端驱动程序在不会改变正常内存。\n\n顺带一提，就像最新的硬件在实现虚拟化时效率十分高效一样，virtio 也在演进为通过硬件来实现变得更加高效，当然不会以牺牲模拟或虚拟化的性能来达到此目的。因此，将来你也可能会偶然发现实现了物理 virtio 的高性能设备。\n\n同样，许多操作系统都支持多个网卡，一个常见的例子就是 PCI 总线上的 e1000 板卡。在裸机上，操作系统将检测 PCI 空间，当看到具有 e1000 签名的寄存器组被填充时，就加载驱动程序，然后该驱动程序知道要写入的寄存器命令序列，以便让硬件传输网络流量。因此，QEMU 拥有一台 e1000 设备——作为众多网卡模拟实现之一——映射到同一个内存区域（译者注：这里的 guest 内存区域指的是 host 上面的用户内存区域），而真正的 guest 内存区域将裸露在被模拟的裸机内存上。\n\n其次，e1000 寄存器布局往往需要大量的寄存器写入（并因此需要 vmexits）来满足硬件的工作需求，因此 QEMU 开发人员添加了 virtio-net 卡（PCI 硬件规范，尽管现在还没有实现它的真实物理硬件），因此在 guest 操作系统中安装 virtio-net 驱动程序可以最大限度地减少 vmexits 的数量，同时还能获得与发送网络流量的相同边际效应。如果您告诉 QEMU 使用 virtio-net 卡启动 guest 虚拟机，则 guest 虚拟机操作系统将探测 PCI 空间，并使用 virtio-net 签名查看一系列寄存器，并加载适用于任何其他 PCI 硬件的适当驱动程序。\n\n总结一下，尽管 QEMU 最初是为了虚拟化 guest 操作系统而模拟硬件内存映射，但事实证明，最快的虚拟化还是取决于虚拟硬件：具有特定边际效应的寄存器内存映射的效率没有任何物理硬件能够匹敌。所有的硬件设备虚拟化实际上意味着运行一组特定的汇编指令（guest 操作系统）来处理映射到内存中的地址，以产生一组特定的边际效应，其中 QEMU 仅仅是一个提供内存映射，并模仿在裸机硬件上执行这些 guest 指令时所获得的相同边际效应的用户空间应用程序。\n","source":"_posts/understanding-qemu-devices.md","raw":"---\ntitle: 了解 QEMU 设备模拟原理『译』\ndate: 2018-04-22 11:24:39\ntags: [QEMU, Translation]\n---\n原文地址：https://www.qemu.org/2018/02/09/understanding-qemu-devices/\nAuthor：Eric Blake\nTranslator：Su Hang\n\n以下是一些可帮助新手了解 QEMU 设备实际原理的笔记：\n\n在使用 QEMU 时，需要记住的一件事就是：以操作系统的视角来说，当其运行于我们试图模拟的裸机硬件之上时，操作系统在裸机硬件上会看到什么。大多数裸机的模拟实现仅仅是简单的内存映射，在特定地址上的软件戳（software poking) 会产生特定的边际效应（side effect）（最常见的边际效应当然是访问内存；但是内存中的其他常见区域还包括用于控制寄存器组特定的硬件，如硬盘或网卡，甚至 CPU 本身）。模拟的最终目标是允许只使用普通 ring3 内存访问（译者注：这里的普通内存访问与操作系统的 ring0 特权访问相对应）的用户空间程序来管理 guest 操作系统所期望的所有边际效应。\n\n从实现细节上来说，一些硬件（如 x86）实际上有两个内存空间，其中 I / O 空间使用与普通内存访问（译者注：例如 mov a， b) 不同的汇编代码（译者注：这里指 in a，out a 等等 x86 架构特有汇编指令）； QEMU 必须模拟这些特殊访问。同样，许多现代 CPU 在内存地址映射范围中，也为提供了一组 CPU 本地寄存器，例如中断控制寄存器。\n\n对于在某些特定硬件，我们通过虚拟化挂钩技术（virtualization hooks)，使得 CPU 本身可以很容易地捕获非正常存储器访问的汇编指令（那些访问 I / O 空间或 CPU 内部寄存器的指令，因此需要不同于正常存储器访问的边际效应），所以 guest 机只是执行与裸机相同的汇编指令序列，但是执行之后会导致陷入到 trap 中，让运行于用户空间的 QEMU 在对控制权返回 guest 代码之前使用普通的用户空间内存访问对指令作出反应。QEMU 通过“加速器”实现了这个功能。\n\n虚拟化加速器（如 KVM）可以使 guest 代码运行在 QEMU 虚拟机中的速度几乎与裸机一样快。其中速度减慢的部分是由来自 guest 代码的每个 trap 都会返回至 QEMU（vmexit）执行，以处理非正常的汇编指令或内存地址引起的。除此之外，QEMU 还支持其他虚拟化加速器（例如 HAXM 或 macOS 的 Hypervisor.framework）。\n\n<!--more-->\n\nQEMU 还拥有一个 TCG 加速器，该加速器在运行期（译者注：可视为一种 Just in time 技术）将 guest 汇编指令编译为相应的主机指令或调用主机帮助例程。TCG 技术虽然速度不及硬件加速，但它允许跨硬件模拟，例如在 x86 上运行 ARM 代码。\n\n接下来要弄清楚的是当操作系统访问各种硬件资源时都发生了些什么。例如，大多数操作系统都附带了管理 IDE 磁盘的驱动程序 - 驱动程序仅仅是一种软件，它被编程为对特定的内存映射子集（译者注：简单来说就是某一片内存区域）（IDE 总线所在的任何位置）发出特定的 I / O 请求，与不同的硬件相绑定）。当 IDE 控制器硬件接收到这些 I / O 请求时，它会执行相应的操作（通过 DMA 传输或其他硬件操作）将数据从内存复制到永久存储器（写入磁盘）或从永久存储器复制到内存（从磁盘读取）。\n\n当我们购买一个包含未初始化磁盘的裸机硬件时，我们安装使用操作系统中相应驱动程序，对 IDE 硬件映射到内存的部分进行访问，然后将磁盘格式化为一系列分区和文件系统。\n\n那么，QEMU 如何模拟这个功能呢？在 QEMU 提供给 guest 代码的内存映射中，它在与裸机相同的地址处（译者注：具体地址得查阅相应的硬件手册）模拟 IDE 磁盘。当 guest 操作系统驱动程序向 IDE 控制寄存器发出特定的内存写入操作以便将数据从内存复制到永久存储器时，QEMU 加速器会陷入该内存区域（译者注：通过 Hook 技术实现），并将请求传递到 QEMU IDE 控制器设备模型。设备模型会解析 I / O 请求，并通过发出主机系统调用来模拟它们。这一系列行为的结果是 guest 内存被复制到 host 机器的存储中。\n\n在 host 端，模拟永久存储的最简单方法是将主机文件系统中的文件视为不包含任何结构信息的原始数据（raw data）（也就是说，host 文件中的偏移量与 guest 驱动程序访问的磁盘偏移量，以 1：1 比例映射）. 但 QEMU 实际上能够将许多不同主机格式（raw， qcow2，qed， vhdx，...）和协议（文件系统，块设备， NBD， Ceph，gluster 等）的任意组合粘合在一起作为后端，然后在 QEMU 对硬件的模拟中绑定到提供服务的 guest 设备。\n\n因此，当您告诉 QEMU 使用主机 qcow2 文件时，guest 虚拟机不必对 qcow2 文件格式有任何了解，仅仅只需要 guest 的驱动程序执行与裸机相同的寄存器读写操作，从而触发 vmexits 进入 QEMU 代码，然后 QEMU 将这些访问映射到 qcow2 文件的相应偏移量中来进行读写。在首次安装 guest 虚拟机时，所有 guest 虚拟机都会看到一个空白未初始化的线性磁盘（无论该磁盘在主机中是线性的——如原始数据（raw format）；还是针对随机访问进行了优化，如 qcow2 格式）；guest 操作系统决定如何划分其硬盘并在其上安装文件系统，而 QEMU 不关心 guest 代码正在使用什么文件系统，只关心原始磁盘（raw disk）I / O 寄存器控制序列的模式。\n\n接下来要意识到的是，模拟 IDE 并不总是最高效的。每次 guest 试图写入控制寄存器时，都必须经过特殊处理，并且 vmexits 会减慢模拟速度。当然，不同的硬件模型在虚拟化时具有不同的性能特征。然而，一般来说，对真实硬件最有效实现方法并不一定适用于其在虚拟化之中的实现，直到最近，硬件并没有被设计成当通过 QEMU 等软件进行模拟时运行得更快。因此，QEMU 包含专为此目的而设计的半虚拟化设备（paravirtualized device）。\n\n在 QEMU 这里的“半虚拟化”的含义，与半虚拟化的原始含义：“通过 guest 和主机之间的合作实现虚拟化”略有不同。QEMU 开发人员已经制定了一套硬件寄存器规范，并规定了这些寄存器的行为，这些寄存器旨在尽可能减少 vmexits 的数量，同时仍然完成硬盘必须做的事情，即实现 guest 内存和持久存储设备之间的传输。这个规范被称为 virtio；使用它需要在 guest 虚拟机中安装 virtio 驱动程序。尽管不存在与 virtio 具有相同的寄存器布局的物理设备，但其理念是相通的：virtio 磁盘的行为类似于内存映射寄存器组，guest 操作系统驱动程序知道将哪些操作硬件的寄存器值的写入该存储体，以使数据被复制进出其他 guest 内存。virtio 中的大部分加速功能都是通过它的如下设计实现的：guest 虚拟机为其大部分硬件命令序列设置了一部分常规内存，只需启动一个寄存器即可告知 QEMU 读取命令序列（较少的映射寄存器访问意味着更少的 vmexits），通过握手机制（handshaking）来保证 QEMU 处理这些命令序列时 guest 端驱动程序在不会改变正常内存。\n\n顺带一提，就像最新的硬件在实现虚拟化时效率十分高效一样，virtio 也在演进为通过硬件来实现变得更加高效，当然不会以牺牲模拟或虚拟化的性能来达到此目的。因此，将来你也可能会偶然发现实现了物理 virtio 的高性能设备。\n\n同样，许多操作系统都支持多个网卡，一个常见的例子就是 PCI 总线上的 e1000 板卡。在裸机上，操作系统将检测 PCI 空间，当看到具有 e1000 签名的寄存器组被填充时，就加载驱动程序，然后该驱动程序知道要写入的寄存器命令序列，以便让硬件传输网络流量。因此，QEMU 拥有一台 e1000 设备——作为众多网卡模拟实现之一——映射到同一个内存区域（译者注：这里的 guest 内存区域指的是 host 上面的用户内存区域），而真正的 guest 内存区域将裸露在被模拟的裸机内存上。\n\n其次，e1000 寄存器布局往往需要大量的寄存器写入（并因此需要 vmexits）来满足硬件的工作需求，因此 QEMU 开发人员添加了 virtio-net 卡（PCI 硬件规范，尽管现在还没有实现它的真实物理硬件），因此在 guest 操作系统中安装 virtio-net 驱动程序可以最大限度地减少 vmexits 的数量，同时还能获得与发送网络流量的相同边际效应。如果您告诉 QEMU 使用 virtio-net 卡启动 guest 虚拟机，则 guest 虚拟机操作系统将探测 PCI 空间，并使用 virtio-net 签名查看一系列寄存器，并加载适用于任何其他 PCI 硬件的适当驱动程序。\n\n总结一下，尽管 QEMU 最初是为了虚拟化 guest 操作系统而模拟硬件内存映射，但事实证明，最快的虚拟化还是取决于虚拟硬件：具有特定边际效应的寄存器内存映射的效率没有任何物理硬件能够匹敌。所有的硬件设备虚拟化实际上意味着运行一组特定的汇编指令（guest 操作系统）来处理映射到内存中的地址，以产生一组特定的边际效应，其中 QEMU 仅仅是一个提供内存映射，并模仿在裸机硬件上执行这些 guest 指令时所获得的相同边际效应的用户空间应用程序。\n","slug":"understanding-qemu-devices","published":1,"updated":"2018-04-28T04:36:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjucbl8l90015b9fssqga5v4g","content":"<p>原文地址：<a href=\"https://www.qemu.org/2018/02/09/understanding-qemu-devices/\" target=\"_blank\" rel=\"noopener\">https://www.qemu.org/2018/02/09/understanding-qemu-devices/</a><br>Author：Eric Blake<br>Translator：Su Hang</p>\n<p>以下是一些可帮助新手了解 QEMU 设备实际原理的笔记：</p>\n<p>在使用 QEMU 时，需要记住的一件事就是：以操作系统的视角来说，当其运行于我们试图模拟的裸机硬件之上时，操作系统在裸机硬件上会看到什么。大多数裸机的模拟实现仅仅是简单的内存映射，在特定地址上的软件戳（software poking) 会产生特定的边际效应（side effect）（最常见的边际效应当然是访问内存；但是内存中的其他常见区域还包括用于控制寄存器组特定的硬件，如硬盘或网卡，甚至 CPU 本身）。模拟的最终目标是允许只使用普通 ring3 内存访问（译者注：这里的普通内存访问与操作系统的 ring0 特权访问相对应）的用户空间程序来管理 guest 操作系统所期望的所有边际效应。</p>\n<p>从实现细节上来说，一些硬件（如 x86）实际上有两个内存空间，其中 I / O 空间使用与普通内存访问（译者注：例如 mov a， b) 不同的汇编代码（译者注：这里指 in a，out a 等等 x86 架构特有汇编指令）； QEMU 必须模拟这些特殊访问。同样，许多现代 CPU 在内存地址映射范围中，也为提供了一组 CPU 本地寄存器，例如中断控制寄存器。</p>\n<p>对于在某些特定硬件，我们通过虚拟化挂钩技术（virtualization hooks)，使得 CPU 本身可以很容易地捕获非正常存储器访问的汇编指令（那些访问 I / O 空间或 CPU 内部寄存器的指令，因此需要不同于正常存储器访问的边际效应），所以 guest 机只是执行与裸机相同的汇编指令序列，但是执行之后会导致陷入到 trap 中，让运行于用户空间的 QEMU 在对控制权返回 guest 代码之前使用普通的用户空间内存访问对指令作出反应。QEMU 通过“加速器”实现了这个功能。</p>\n<p>虚拟化加速器（如 KVM）可以使 guest 代码运行在 QEMU 虚拟机中的速度几乎与裸机一样快。其中速度减慢的部分是由来自 guest 代码的每个 trap 都会返回至 QEMU（vmexit）执行，以处理非正常的汇编指令或内存地址引起的。除此之外，QEMU 还支持其他虚拟化加速器（例如 HAXM 或 macOS 的 Hypervisor.framework）。</p>\n<a id=\"more\"></a>\n<p>QEMU 还拥有一个 TCG 加速器，该加速器在运行期（译者注：可视为一种 Just in time 技术）将 guest 汇编指令编译为相应的主机指令或调用主机帮助例程。TCG 技术虽然速度不及硬件加速，但它允许跨硬件模拟，例如在 x86 上运行 ARM 代码。</p>\n<p>接下来要弄清楚的是当操作系统访问各种硬件资源时都发生了些什么。例如，大多数操作系统都附带了管理 IDE 磁盘的驱动程序 - 驱动程序仅仅是一种软件，它被编程为对特定的内存映射子集（译者注：简单来说就是某一片内存区域）（IDE 总线所在的任何位置）发出特定的 I / O 请求，与不同的硬件相绑定）。当 IDE 控制器硬件接收到这些 I / O 请求时，它会执行相应的操作（通过 DMA 传输或其他硬件操作）将数据从内存复制到永久存储器（写入磁盘）或从永久存储器复制到内存（从磁盘读取）。</p>\n<p>当我们购买一个包含未初始化磁盘的裸机硬件时，我们安装使用操作系统中相应驱动程序，对 IDE 硬件映射到内存的部分进行访问，然后将磁盘格式化为一系列分区和文件系统。</p>\n<p>那么，QEMU 如何模拟这个功能呢？在 QEMU 提供给 guest 代码的内存映射中，它在与裸机相同的地址处（译者注：具体地址得查阅相应的硬件手册）模拟 IDE 磁盘。当 guest 操作系统驱动程序向 IDE 控制寄存器发出特定的内存写入操作以便将数据从内存复制到永久存储器时，QEMU 加速器会陷入该内存区域（译者注：通过 Hook 技术实现），并将请求传递到 QEMU IDE 控制器设备模型。设备模型会解析 I / O 请求，并通过发出主机系统调用来模拟它们。这一系列行为的结果是 guest 内存被复制到 host 机器的存储中。</p>\n<p>在 host 端，模拟永久存储的最简单方法是将主机文件系统中的文件视为不包含任何结构信息的原始数据（raw data）（也就是说，host 文件中的偏移量与 guest 驱动程序访问的磁盘偏移量，以 1：1 比例映射）. 但 QEMU 实际上能够将许多不同主机格式（raw， qcow2，qed， vhdx，…）和协议（文件系统，块设备， NBD， Ceph，gluster 等）的任意组合粘合在一起作为后端，然后在 QEMU 对硬件的模拟中绑定到提供服务的 guest 设备。</p>\n<p>因此，当您告诉 QEMU 使用主机 qcow2 文件时，guest 虚拟机不必对 qcow2 文件格式有任何了解，仅仅只需要 guest 的驱动程序执行与裸机相同的寄存器读写操作，从而触发 vmexits 进入 QEMU 代码，然后 QEMU 将这些访问映射到 qcow2 文件的相应偏移量中来进行读写。在首次安装 guest 虚拟机时，所有 guest 虚拟机都会看到一个空白未初始化的线性磁盘（无论该磁盘在主机中是线性的——如原始数据（raw format）；还是针对随机访问进行了优化，如 qcow2 格式）；guest 操作系统决定如何划分其硬盘并在其上安装文件系统，而 QEMU 不关心 guest 代码正在使用什么文件系统，只关心原始磁盘（raw disk）I / O 寄存器控制序列的模式。</p>\n<p>接下来要意识到的是，模拟 IDE 并不总是最高效的。每次 guest 试图写入控制寄存器时，都必须经过特殊处理，并且 vmexits 会减慢模拟速度。当然，不同的硬件模型在虚拟化时具有不同的性能特征。然而，一般来说，对真实硬件最有效实现方法并不一定适用于其在虚拟化之中的实现，直到最近，硬件并没有被设计成当通过 QEMU 等软件进行模拟时运行得更快。因此，QEMU 包含专为此目的而设计的半虚拟化设备（paravirtualized device）。</p>\n<p>在 QEMU 这里的“半虚拟化”的含义，与半虚拟化的原始含义：“通过 guest 和主机之间的合作实现虚拟化”略有不同。QEMU 开发人员已经制定了一套硬件寄存器规范，并规定了这些寄存器的行为，这些寄存器旨在尽可能减少 vmexits 的数量，同时仍然完成硬盘必须做的事情，即实现 guest 内存和持久存储设备之间的传输。这个规范被称为 virtio；使用它需要在 guest 虚拟机中安装 virtio 驱动程序。尽管不存在与 virtio 具有相同的寄存器布局的物理设备，但其理念是相通的：virtio 磁盘的行为类似于内存映射寄存器组，guest 操作系统驱动程序知道将哪些操作硬件的寄存器值的写入该存储体，以使数据被复制进出其他 guest 内存。virtio 中的大部分加速功能都是通过它的如下设计实现的：guest 虚拟机为其大部分硬件命令序列设置了一部分常规内存，只需启动一个寄存器即可告知 QEMU 读取命令序列（较少的映射寄存器访问意味着更少的 vmexits），通过握手机制（handshaking）来保证 QEMU 处理这些命令序列时 guest 端驱动程序在不会改变正常内存。</p>\n<p>顺带一提，就像最新的硬件在实现虚拟化时效率十分高效一样，virtio 也在演进为通过硬件来实现变得更加高效，当然不会以牺牲模拟或虚拟化的性能来达到此目的。因此，将来你也可能会偶然发现实现了物理 virtio 的高性能设备。</p>\n<p>同样，许多操作系统都支持多个网卡，一个常见的例子就是 PCI 总线上的 e1000 板卡。在裸机上，操作系统将检测 PCI 空间，当看到具有 e1000 签名的寄存器组被填充时，就加载驱动程序，然后该驱动程序知道要写入的寄存器命令序列，以便让硬件传输网络流量。因此，QEMU 拥有一台 e1000 设备——作为众多网卡模拟实现之一——映射到同一个内存区域（译者注：这里的 guest 内存区域指的是 host 上面的用户内存区域），而真正的 guest 内存区域将裸露在被模拟的裸机内存上。</p>\n<p>其次，e1000 寄存器布局往往需要大量的寄存器写入（并因此需要 vmexits）来满足硬件的工作需求，因此 QEMU 开发人员添加了 virtio-net 卡（PCI 硬件规范，尽管现在还没有实现它的真实物理硬件），因此在 guest 操作系统中安装 virtio-net 驱动程序可以最大限度地减少 vmexits 的数量，同时还能获得与发送网络流量的相同边际效应。如果您告诉 QEMU 使用 virtio-net 卡启动 guest 虚拟机，则 guest 虚拟机操作系统将探测 PCI 空间，并使用 virtio-net 签名查看一系列寄存器，并加载适用于任何其他 PCI 硬件的适当驱动程序。</p>\n<p>总结一下，尽管 QEMU 最初是为了虚拟化 guest 操作系统而模拟硬件内存映射，但事实证明，最快的虚拟化还是取决于虚拟硬件：具有特定边际效应的寄存器内存映射的效率没有任何物理硬件能够匹敌。所有的硬件设备虚拟化实际上意味着运行一组特定的汇编指令（guest 操作系统）来处理映射到内存中的地址，以产生一组特定的边际效应，其中 QEMU 仅仅是一个提供内存映射，并模仿在裸机硬件上执行这些 guest 指令时所获得的相同边际效应的用户空间应用程序。</p>\n","site":{"data":{}},"excerpt":"<p>原文地址：<a href=\"https://www.qemu.org/2018/02/09/understanding-qemu-devices/\" target=\"_blank\" rel=\"noopener\">https://www.qemu.org/2018/02/09/understanding-qemu-devices/</a><br>Author：Eric Blake<br>Translator：Su Hang</p>\n<p>以下是一些可帮助新手了解 QEMU 设备实际原理的笔记：</p>\n<p>在使用 QEMU 时，需要记住的一件事就是：以操作系统的视角来说，当其运行于我们试图模拟的裸机硬件之上时，操作系统在裸机硬件上会看到什么。大多数裸机的模拟实现仅仅是简单的内存映射，在特定地址上的软件戳（software poking) 会产生特定的边际效应（side effect）（最常见的边际效应当然是访问内存；但是内存中的其他常见区域还包括用于控制寄存器组特定的硬件，如硬盘或网卡，甚至 CPU 本身）。模拟的最终目标是允许只使用普通 ring3 内存访问（译者注：这里的普通内存访问与操作系统的 ring0 特权访问相对应）的用户空间程序来管理 guest 操作系统所期望的所有边际效应。</p>\n<p>从实现细节上来说，一些硬件（如 x86）实际上有两个内存空间，其中 I / O 空间使用与普通内存访问（译者注：例如 mov a， b) 不同的汇编代码（译者注：这里指 in a，out a 等等 x86 架构特有汇编指令）； QEMU 必须模拟这些特殊访问。同样，许多现代 CPU 在内存地址映射范围中，也为提供了一组 CPU 本地寄存器，例如中断控制寄存器。</p>\n<p>对于在某些特定硬件，我们通过虚拟化挂钩技术（virtualization hooks)，使得 CPU 本身可以很容易地捕获非正常存储器访问的汇编指令（那些访问 I / O 空间或 CPU 内部寄存器的指令，因此需要不同于正常存储器访问的边际效应），所以 guest 机只是执行与裸机相同的汇编指令序列，但是执行之后会导致陷入到 trap 中，让运行于用户空间的 QEMU 在对控制权返回 guest 代码之前使用普通的用户空间内存访问对指令作出反应。QEMU 通过“加速器”实现了这个功能。</p>\n<p>虚拟化加速器（如 KVM）可以使 guest 代码运行在 QEMU 虚拟机中的速度几乎与裸机一样快。其中速度减慢的部分是由来自 guest 代码的每个 trap 都会返回至 QEMU（vmexit）执行，以处理非正常的汇编指令或内存地址引起的。除此之外，QEMU 还支持其他虚拟化加速器（例如 HAXM 或 macOS 的 Hypervisor.framework）。</p>","more":"<p>QEMU 还拥有一个 TCG 加速器，该加速器在运行期（译者注：可视为一种 Just in time 技术）将 guest 汇编指令编译为相应的主机指令或调用主机帮助例程。TCG 技术虽然速度不及硬件加速，但它允许跨硬件模拟，例如在 x86 上运行 ARM 代码。</p>\n<p>接下来要弄清楚的是当操作系统访问各种硬件资源时都发生了些什么。例如，大多数操作系统都附带了管理 IDE 磁盘的驱动程序 - 驱动程序仅仅是一种软件，它被编程为对特定的内存映射子集（译者注：简单来说就是某一片内存区域）（IDE 总线所在的任何位置）发出特定的 I / O 请求，与不同的硬件相绑定）。当 IDE 控制器硬件接收到这些 I / O 请求时，它会执行相应的操作（通过 DMA 传输或其他硬件操作）将数据从内存复制到永久存储器（写入磁盘）或从永久存储器复制到内存（从磁盘读取）。</p>\n<p>当我们购买一个包含未初始化磁盘的裸机硬件时，我们安装使用操作系统中相应驱动程序，对 IDE 硬件映射到内存的部分进行访问，然后将磁盘格式化为一系列分区和文件系统。</p>\n<p>那么，QEMU 如何模拟这个功能呢？在 QEMU 提供给 guest 代码的内存映射中，它在与裸机相同的地址处（译者注：具体地址得查阅相应的硬件手册）模拟 IDE 磁盘。当 guest 操作系统驱动程序向 IDE 控制寄存器发出特定的内存写入操作以便将数据从内存复制到永久存储器时，QEMU 加速器会陷入该内存区域（译者注：通过 Hook 技术实现），并将请求传递到 QEMU IDE 控制器设备模型。设备模型会解析 I / O 请求，并通过发出主机系统调用来模拟它们。这一系列行为的结果是 guest 内存被复制到 host 机器的存储中。</p>\n<p>在 host 端，模拟永久存储的最简单方法是将主机文件系统中的文件视为不包含任何结构信息的原始数据（raw data）（也就是说，host 文件中的偏移量与 guest 驱动程序访问的磁盘偏移量，以 1：1 比例映射）. 但 QEMU 实际上能够将许多不同主机格式（raw， qcow2，qed， vhdx，…）和协议（文件系统，块设备， NBD， Ceph，gluster 等）的任意组合粘合在一起作为后端，然后在 QEMU 对硬件的模拟中绑定到提供服务的 guest 设备。</p>\n<p>因此，当您告诉 QEMU 使用主机 qcow2 文件时，guest 虚拟机不必对 qcow2 文件格式有任何了解，仅仅只需要 guest 的驱动程序执行与裸机相同的寄存器读写操作，从而触发 vmexits 进入 QEMU 代码，然后 QEMU 将这些访问映射到 qcow2 文件的相应偏移量中来进行读写。在首次安装 guest 虚拟机时，所有 guest 虚拟机都会看到一个空白未初始化的线性磁盘（无论该磁盘在主机中是线性的——如原始数据（raw format）；还是针对随机访问进行了优化，如 qcow2 格式）；guest 操作系统决定如何划分其硬盘并在其上安装文件系统，而 QEMU 不关心 guest 代码正在使用什么文件系统，只关心原始磁盘（raw disk）I / O 寄存器控制序列的模式。</p>\n<p>接下来要意识到的是，模拟 IDE 并不总是最高效的。每次 guest 试图写入控制寄存器时，都必须经过特殊处理，并且 vmexits 会减慢模拟速度。当然，不同的硬件模型在虚拟化时具有不同的性能特征。然而，一般来说，对真实硬件最有效实现方法并不一定适用于其在虚拟化之中的实现，直到最近，硬件并没有被设计成当通过 QEMU 等软件进行模拟时运行得更快。因此，QEMU 包含专为此目的而设计的半虚拟化设备（paravirtualized device）。</p>\n<p>在 QEMU 这里的“半虚拟化”的含义，与半虚拟化的原始含义：“通过 guest 和主机之间的合作实现虚拟化”略有不同。QEMU 开发人员已经制定了一套硬件寄存器规范，并规定了这些寄存器的行为，这些寄存器旨在尽可能减少 vmexits 的数量，同时仍然完成硬盘必须做的事情，即实现 guest 内存和持久存储设备之间的传输。这个规范被称为 virtio；使用它需要在 guest 虚拟机中安装 virtio 驱动程序。尽管不存在与 virtio 具有相同的寄存器布局的物理设备，但其理念是相通的：virtio 磁盘的行为类似于内存映射寄存器组，guest 操作系统驱动程序知道将哪些操作硬件的寄存器值的写入该存储体，以使数据被复制进出其他 guest 内存。virtio 中的大部分加速功能都是通过它的如下设计实现的：guest 虚拟机为其大部分硬件命令序列设置了一部分常规内存，只需启动一个寄存器即可告知 QEMU 读取命令序列（较少的映射寄存器访问意味着更少的 vmexits），通过握手机制（handshaking）来保证 QEMU 处理这些命令序列时 guest 端驱动程序在不会改变正常内存。</p>\n<p>顺带一提，就像最新的硬件在实现虚拟化时效率十分高效一样，virtio 也在演进为通过硬件来实现变得更加高效，当然不会以牺牲模拟或虚拟化的性能来达到此目的。因此，将来你也可能会偶然发现实现了物理 virtio 的高性能设备。</p>\n<p>同样，许多操作系统都支持多个网卡，一个常见的例子就是 PCI 总线上的 e1000 板卡。在裸机上，操作系统将检测 PCI 空间，当看到具有 e1000 签名的寄存器组被填充时，就加载驱动程序，然后该驱动程序知道要写入的寄存器命令序列，以便让硬件传输网络流量。因此，QEMU 拥有一台 e1000 设备——作为众多网卡模拟实现之一——映射到同一个内存区域（译者注：这里的 guest 内存区域指的是 host 上面的用户内存区域），而真正的 guest 内存区域将裸露在被模拟的裸机内存上。</p>\n<p>其次，e1000 寄存器布局往往需要大量的寄存器写入（并因此需要 vmexits）来满足硬件的工作需求，因此 QEMU 开发人员添加了 virtio-net 卡（PCI 硬件规范，尽管现在还没有实现它的真实物理硬件），因此在 guest 操作系统中安装 virtio-net 驱动程序可以最大限度地减少 vmexits 的数量，同时还能获得与发送网络流量的相同边际效应。如果您告诉 QEMU 使用 virtio-net 卡启动 guest 虚拟机，则 guest 虚拟机操作系统将探测 PCI 空间，并使用 virtio-net 签名查看一系列寄存器，并加载适用于任何其他 PCI 硬件的适当驱动程序。</p>\n<p>总结一下，尽管 QEMU 最初是为了虚拟化 guest 操作系统而模拟硬件内存映射，但事实证明，最快的虚拟化还是取决于虚拟硬件：具有特定边际效应的寄存器内存映射的效率没有任何物理硬件能够匹敌。所有的硬件设备虚拟化实际上意味着运行一组特定的汇编指令（guest 操作系统）来处理映射到内存中的地址，以产生一组特定的边际效应，其中 QEMU 仅仅是一个提供内存映射，并模仿在裸机硬件上执行这些 guest 指令时所获得的相同边际效应的用户空间应用程序。</p>"},{"title":"文采","copyright":true,"date":"2019-04-11T07:26:26.000Z","comments":1,"_content":"\n“目击众神死亡的草原上野花一片，远在远方的风比远方更远，我的琴声呜咽，泪水全无，我把这远方的远归还草原。”\n\n--------------------------------------------------------------------------------\n现在是清晨四点钟\n十二月已然尾声\n此刻我写这封给你\n其实只是想知道你过得好不好\n我听说你将自己的生活深筑在荒漠中\n难道你现在真的一无所求了吗\n多么希望你至少能留住一些值得着恋的东西\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n你出现在我的晨曦、午夜、朝霞和黄昏里，无时不刻，如影随形。我爱你时失去踪影，一想到你便沉入云端、跌落谷底，如火焚烧、涟漪层层。\n\n你在我的指尖、发梢、锁骨和脊梁，呼吸都带着颤栗的不安。清醒时你是微笑的、拘谨的、整齐的文字，癫狂时你是窒息的、失语的、狂热的声音。\n\n我们无话可说又无所不谈。一开始做爱的时候，我甚至不敢看你的眼睛，总是请求你关灯减少尴尬，疼痛、不适也一言不发。后来等我们真正无话不谈的时候我提起此事，你嗔怪我：“你应该告诉我的”，我说“那时候你还是个完全的陌生人！” 你把我扳过来，“我是个陌生人吗？” 我说“本来就是嘛“。我说我那时大概是到了需要一个亲密关系的阶段了，我和你第三次见面就上了床，那时候我对你的了解大概比我公寓的房东还要少。你拨开我的头发，脸压近过来：“那你就是利用我了？“我说不是，只是我很高兴你正好出现在对的时间。你仍不满意，整个身体都压过来，“那你不喜欢我吗？“\n\n我看着你的眼睛。这时候我已经能看着你的眼睛讲话了，有时候不讲话也可以。最开始的时候你也避开我的目光，后来偶尔目光接触就会笑，如今再发现我在看你，只会伸手把我揽在怀里，或是凑过来吻我散发着廉价超市洗发水气味的头发。这一过程进展缓慢却自然，来不及等我思考“两个人都上过床了却连牵手都有些尴尬怎么办”，你已经一跃成为一个称职而温情的恋人，亲吻我的脸颊时湿润得令人心软。\n\n我说我当然喜欢你。你裸着上身，整个重量承在我身上，压得我呼吸都沉重起来。我费力地从你身下抽出手来揽住你的脖颈，我直直地看着你，我说我喜欢你，有时喜欢到失去控制。\n\n你是我所有可怖的、柔情的、诡异的、私密的想象和欲望的具象，在你面前所有羞耻的告白和呓语都可被原谅，不，甚至被你喜爱，被你一再请求，迟疑又欢喜，落地成花。\n\n细密的、无常的、潮汐般的爱要如何量化？Lust or love 是永远的话题，但此时我混为一谈、深陷其中。我无法承认爱你超过任何人，但我真切地爱你，全心、全身、全部时空、全部灵魂。\n\n--------------------------------------------------------------------------------\n金雀出何所，必出自灵岳。剪断白云根，分破苍岑角。\n既为之巨砚，遂登于纶阁。水贮见温润，墨发知瀺濯。\n\n--------------------------------------------------------------------------------\n香雪如海\n\n--------------------------------------------------------------------------------\n“雨声潺潺，像住在溪边。宁愿天天下雨，以为你是因为下雨不来。”\n\n她爱他们。他们不干涉她，只静静的躺在她血液里，在她死的时候再死一次。\n\n他微红的微笑的脸俯向她，是苦海里长著的一朵赤金莲花。\n“怎么今天不痛了？因为是你的生日？”他说。\n他眼睛里闪著兴奋的光，像鱼摆尾一样在她里面荡漾了一下，望着她一笑。他忽然退出，爬到脚头去。\n“嗳，你在做什麼？”她恐惧的笑着问。他的头发拂在她大腿上，毛毵毵的不知道什么野兽的头。\n兽在幽暗的岩洞里的一线黄泉就饮，泊泊的用舌头卷起来。她是洞口倒挂着的蝙蝠，深山中藏匿的遗民，被侵犯了，被发现了，无助，无告的，有只动物在小口小口的啜著她的核心。暴露的恐怖揉合在难忍的愿望里：要他回来，马上回来——回到她的怀抱里，回到她眼底。\n\n--------------------------------------------------------------------------------\n朱利安深沉的思绪迷雾般交织变幻、浮现出复杂的色彩和形状。人的本质，他想道，超越言语可能涵盖的范畴，有着最坚硬和古怪的外形，是逻辑无法解释的存在形式。即便被层层假象包裹，但内里的硬核与生俱来，只在生死关头才显露无遗。这个层次上，每个人都是独一无二的。朱利安不由得想到包裹杰罗姆的重重迷雾。眼看着他不断成熟、现在要承担沉重的责任，朱利安内心却产生了强烈的不安。他深深自问，杰罗姆身上延续了自己的影子吗？还是说，自己对他的了解从未触及实质、不过是种自以为是？\n\n对面的读心难以忍受旅途的枯燥，不时把眼光投向静坐的朱利安，流露出嫉炉和憎恶的表情。朱利安对他的存在毫不介意，沉浸在反覆的思绪中。随着年龄增长，不知从何时开始，他迷上了倾听时间的脚步声，如同体味飞速坠向深渊所带来的恐惧和快感。朱利安以年轻人不能理解的沉稳思考着过去种种，此时另一节车厢里生的事他闭着眼都能猜到。但愿杰罗姆不要被短暂的*冲昏头脑。一想到自己的过去，朱利安的心像注满滚烫的铅水：爱情的要价太高了！\n\n--------------------------------------------------------------------------------\n她们两人真是幸福。像我这种混蛋夹在她们两人之间，总有一天会毁了她们。低调的幸福。一对好母女。啊，倘若上天肯聆听我这种人的祈祷，我祈求您赐给她们幸福，就算一生只有那么一次也好。\n\n天使在空中飞舞，奉了神灵的旨意，翅膀消失，降落伞似的飘落到了世界的每一个角落。我飘落到北国皑皑的白雪之上，你飘落到南国的蜜橘田里，而这几个少年，则飘落到了上野公园里。其区别就仅此而已。哪怕今后还得度过多少的岁月，少年们啊，毋庸关心容颜，不要抽烟，除了节日之外也别喝酒，为那些个性格内向、稍有姿色的姑娘们倾心钟情吧。\n\n天使在天空中飞舞。听从神的意志，天使隐去翅膀，宛如降落伞一般，飘落到世界的各个角落。我飘落在北国的雪原上，你飘落在南国的柑橘地里。而这群少年则飘落在了上野公园。差别仅此而已。少年们啊，从今以后，无论你们如何长大，都不要抽烟，也不要喝酒，除非逢年过节。而且，要持之以恒地去爱一个姑娘，一个腼腆而又有点臭美的姑娘。\n\n--------------------------------------------------------------------------------\n我不记得是谁曾经建议过，为了使灵魂宁静，一个人每天要做两件他不喜欢的事。\n\n--------------------------------------------------------------------------------\n她们十五岁的时候，到德国德累斯顿学习音乐。她们在那里过的是快活的日子。她们无拘无束地生活在学生中间，她们和男子们争论着哲学、社会学和艺术上的种种问题。她们的学识并不下于男子；因为是女子，所以更胜于他们了。强壮的青年男子们，带着六弦琴和她们到林中漫游。她们歌唱着，歌喉动人的青年们，在旷野间，在清晨的林中奔窜，自由地为所欲为，尤其是自由地谈所欲谈。最要紧的还是谈话，热情的谈话，爱情不过是件小小的陪衬品。\n\n希尔达和康士丹斯婉妹俩，都曾在十八岁的时候初试爱情。那些热情地和她们交谈，欢快地和她们歌唱，自由自在地和她们在林中野宿的男子们，不用说都欲望勃勃地想更进一步。她们起初是踌躇着；但是爱情这问题已经过许多的讨论，而且被认为是最重要的东西了，况且男子们又是这样低声下气地央求。为什么一个少女不能以身相就，象一个王后似的赐予思惠呢？\n\n于是她们都赐身与平素最微妙、最亲密在一起讨论的男子了。辩论是重要的事情，恋爱和性交不过是一种原始的本能；一种反应，事后，她们对于对手的爱情冷淡了，而且有点憎很他们的倾向，仿佛他们侵犯了她们的秘密和自由似的。因为一个少女的尊严，和她的生存意义，全在获得绝对的、完全的、纯粹的、高尚的自由。要不是摆脱了从前的污秽的两性关系和可耻的主奴状态，一个少女的生命还有什么意义。\n\n无论人怎样感情用事，性爱总是各种最古老、最宿秽的结合和从属状态之一。歌颂性爱的诗人们大都是男子。女子们一向就知道有更好更高尚的东西。现在她们知之更确了。一个人的美丽纯洁的自由，是比任何性爱都可爱的。不过男子对于这点的看法太落后了，他们象狗似的坚要性的满足。\n\n可是女人不得不退让，男子是像孩子般的嘴馋的，他要什么女人便得给什么，否则他便孩子似的讨厌起来，暴躁起来把好事弄糟。但是个女人可以顺从男子，而不退让她内在的、自由的自我。那些高谈性爱的诗人和其他的人好象不大注意到这点。一个女人是可以有个男子，而不真正委身，让他支配的。反之，她可以利用这性爱去支配他。在性交的时候，她自己忍持着，让男子尽先尽情地发泄完了，然而她便可以把性交延长，而把他当作工具去满足她自己的性欲。\n\n当大战爆发，她们急忙回家的时候，姐妹俩都有了爱情的经验了。她们所以恋爱，全是因为对手是可以亲切地、热烈地谈心的男子。和真正聪明的青年男子，一点钟又一点钟地，一天又一天地，热情地谈话，这种惊人的、深刻的、意想不到的美妙，是她们在经验以前所不知道的，天国的诺言： “您将有可以谈心的男子。”还没有吐露，而这奇妙的诺言却在她们明白其意义之前实现了。\n\n在这些生动的、毫无隐讳的、亲密的谈心过后，性行为成为不可避免的了，那只好忍受。那象是一章的结尾，它本身也是令人情热的；那是肉体深处的一种奇特的、美妙的震颤，最后是一种自我决定的痉挛。宛如最后—个奋激的宇，和一段文字后一行表示题意中断的小点子一样。\n\n这姊妹俩在性的快感中，几乎在男性的奇异的权力下面屈服了。但是很快她们便自拨了，把性的快感看作一种感觉，而保持了她们的自由。至于她们的情人呢，因为感激她们所赐与的性的满足，便把灵魂交给她们。但是不久，他们又有点觉得得不尝失了。康妮的男子开始有点负气的样子，希尔达的对手也渐渐态度轻蔑起来。但是男子们就是这样的；忘恩负义而永不满足！你要他们的时候，他们憎恨你，因为你要他们。你不睬他们的时候，他们还是憎恨你，因为旁的什么理由。或者毫无理由。他们是不知足的孩子，无论得到什么，无论女子怎样，都不满意的。\n\n--------------------------------------------------------------------------------\n我从未写诗\n只是上帝在我的骨节中\n踩踏出音阶\n\n--------------------------------------------------------------------------------\n山中·夜\n\n夜半，群山只剩下轮廓\n深刻了布谷的叫声\n清风化成水，透过身体\n留一注沁凉\n稀释浓重的色泽\n我站在天地中执笔\n调和梦里与梦外\n早晨推开窗\n便碰了一鼻子绿\n\n--------------------------------------------------------------------------------\n绿的肌肉，绿的头发，还有银子般沁凉的眼睛。\n\n绿\n\n天空一色苹果绿，\n天空是阳光下举着的绿色美酒，\n月亮是其中一片金色的花瓣\n\n她睁开她的眼睛，绿莹莹地\n眼波闪耀，象未绽的花蕾一般纯，\n第一次，此刻第一次为人瞥见\n\n裘小龙 译\n\n绿\n\n曙光是苹果绿，\n天空是绿酒在阳光中举起，\n月亮是其间的一瓣金玉。\n\n她张开眼，绿芒\n四射，明亮如花\n初绽，首次展放。\n\n非马  译\n\n--------------------------------------------------------------------------------\n站在下风的方向，可以嗅出树叶，满林子树叶散播的死讯，以及整个中西部成熟后的体香。中西部的深秋，是一场弥月不息的野火，从浅黄到血红到暗赭到沉郁郁的浓栗，从爱荷华一直烧到俄亥俄，夜以继日日以继夜地维持好几十郡的灿烂。\n\n--------------------------------------------------------------------------------\n“我们喝的咖啡都是如夜晚般漆黑，像罪恶一样甜腻。”\n\n永远不要对上厕所、吃东西，或者闭上眼睛打半小时瞌睡的机会说‘不’。\n\n“喂，胡因还是穆因，随便什么名字都好，喂，你！”\n黑鸟转过身，脑袋怀疑地偏在一侧，闪闪发光的眼珠子打量着他。\n“说‘我下次再也不这样做了’，说！”影子说。\n“日你妈。”乌鸦说。一人一鸟一起穿过树林，它再也没说一个字。\n\n“不是那个原因。女人能拯救她们的男人。而男人——像他这样的男人——他们的女人一旦死掉，他们也不会再活很长时间了。你会看到的。用不了多久，他开始变得神情恍惚，熟悉的一切都随着她的离开而离开。他开始对生命感到厌倦，整个人憔悴下去，他放弃对生的追求，然后，他死了。最后夺去他生命的也许是肺炎，也许是癌，或许是心脏停止跳动。等你上了年纪，所有的激情斗志都离你而去之后，你的生命也就结束了。”\n\n没有人是一座孤岛，多恩这样说过。但是他错了。如果我们不是孤岛，我们就会迷失自我，溺死在彼此的悲哀中。我们彼此隔绝孤立，隔绝于他人的悲哀之外。这是自我保护的天性。我们是一座座孤岛，其形状被所有故事一遍遍地反复描绘。孤岛的形状是不会改变的：一个人出生、长大，然后，因为这种或那种原因，死了。好了，其余细节你可以用你自己的经历来填充。你的故事和其他人的故事一样，没有任何独创内容，但也和其他人的人生一样独一无二。生活就像雪花，每个人的人生都是不同形状的雪花；生活就像豆荚中的豆子（你有没有见过豆荚中的豆子？我是说真正仔细地观察它们？近距离观察一分钟之后，你绝对不会把一颗豆子混同于另外一颗豆子），看似相同，但每一个都是独一无二的。\n如果没有个体的存在，我们看见的只能是总体数字：死亡一千人，死亡十万人，“伤亡人数达到一百万”。但有了活生生的个体，统计数据就变成了真实存在的人——但这同样是谎言。数字仍旧是麻木的，没有任何意义，哪怕人们会因为它们而感到痛苦。看这个孩子吧，腹部肿胀，苍蝇叮满他的眼角，他瘦得皮包骨头。但是，有了这些，你就能知道他的名字、他的年龄、他的梦想和他的恐惧吗？你就能了解他的内心吗？如果你可以，那就让我们再对他的姐姐来一番解剖。此刻她就躺在他身后灼热的土地上，身体歪扭、肿胀。好吧，你同样能感受到她的内心。但除了这两姐弟之外，还有上千个孩子成为饥馑受害者，上千个孩子即将成为苍蝇们无数蠕动的蛆虫的食物。难道说只有那两姐弟重要，其他所有那些孩子就无足轻重吗？\n我们画出一道隔离保护线，把他们的痛苦隔离在外，安全地待在属于自己的孤岛上，让他们的痛苦无法伤害我们。他们被我们包裹在一层光滑、安全、充满光泽的隔离膜中，仿佛珍珠一样，他们经历的苦难不会让我们的灵魂深处感受到任何真正的痛苦。\n虚构的小说允许我们进入他们的大脑，通过他们的眼睛观看外面的世界。在故事中，我们会在作为主角的我们死亡之前停止阅读，或者体验毫无痛苦的“代理死亡”，然后跳出这个故事，在真实的世界中轻轻翻过新的一页，或者合上书，继续属于我们自己的生活。\n自己的生活——和其他人生既相同、又不同的生活。\n\n--------------------------------------------------------------------------------\n\n马骁（Selkie）版：\n那些强盛的力量和存在可能尚有留存……远古之时的遗存……早在人性之潮涌起前就已消隐的知觉意识……这些觉识在诗歌和传说中偶有闪现，它们常被冠以神祗、怪兽和各种神秘事物之名……\n\n――阿尔杰农・布莱克伍德\n\n1. 陶塑中的恐怖\n\n我认为，人的思维缺乏将已知事物联系起来的能力，这是世上最仁慈的事了。人类居住在幽暗的海洋中名为无知的小岛上，这海洋浩淼无垠蕴藏无穷秘密，但我们并不应该航行过远，探究太深。迄今为止，各门类的科学都遵循着自己的道路发展，并未给人类带来多少危害；但总有一天这些分立的知识将融合在一起，揭示出世界真实的景象，以及人类可怖的处境――我们或是因这景象而疯狂，或是从光明中逃回那安全静寂的黑暗纪元去。\n\n黄公夏（wwmidia）版：\n“可以想见，如此超凡的力量或存在未必灭绝殆尽……来自太古时代的幸存者……其自我意识，也许表现为某种形态，自人类出现以前很久就失落无踪……只有诗歌和传说以稍纵即逝的记忆加以临摹，并以林林总总的神祗、怪物和神话生物称之……”\n\n——阿尔杰农•布莱克伍德\n\n1. 恐怖泥雕\n\n人类无法将脑内所有信息同时关联到一起，我想，这算是世间最大的仁慈了。我们身处恬然宁静的无知之岛，位于黑狞无边的大海中央，也并非注定要驶向远方一探究竟。各种科学在其所属方向竭力前行，虽然至今尚未对我们造成伤害，但终有一天，各不相关的知识彼此碰撞，会揭开那骇人的真相，点明我们在这片可怕光景中所处的方位。这份光明是如此恐怖而致命，我们若不想失心而疯，就必须远远逃开，躲进一个新的黑暗时代去寻找平和与安宁。\n\n------------------------------------------------------------\n\n与瑞娜相处就像在伤口上撒盐，让他想起自己开始在身上刺青时所放弃的一切。\n\n--------------------------------------------------------------------------------\n竹篱上 停留着 蜻蜓\n玻璃瓶里插满 小小 森林\n青春 嫩绿的很 鲜明\n百叶窗 折射的 光影\n像有着心事的 一张 表情\n而你 低头拆信\n想知道关于我的事情\n青苔入镜 檐下风铃 摇晃曾经\n回忆是 一行行无从\n剪接的风景 爱始终年轻\n而我听见 下雨的声音\n想起你用唇语 说爱情\n幸福也可以 很安静\n我付出一直 很小心\n终于听见 下雨的声音\n于是我的世界 被吵醒\n就怕情绪红 了眼睛\n不舍的泪在 彼此的 脸上透明\n百叶窗 折射的 光影\n像有着心事的 一张 表情\n而你 低头拆信\n想知道关于我的事情\n爱在过境 缘份不停 谁在担心\n窗台上 滴落的雨滴\n轻敲着伤心 凄美而动听\n而我听见下 雨的声音\n想起你用 唇语说爱情\n热恋的时刻 最任性\n不顾一切的 给约定\n终于听见 下雨的声音\n于是我的 世界被吵醒\n发现你始终 很靠近\n默默的陪在\n我身边 态度坚定\n\n--------------------------------------------------------------------------------\n对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。\n\n我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。\n\n我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。\n\n爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。\n这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。\n\n爱之于我，不是肌肤之亲，不是一蔬一饭，它是一种不死的欲望，是颓败生活中的英雄梦想。\n\n两样东西，人们越是经常持久对之凝神思索，它们就越是使内心充满常新而日增的惊奇和敬畏：我头上的星空和我心中的道德律。\n\n所有由这些感受（指恋爱）而得到的美好和甜蜜，都只是在一开始才具有其全部的强烈力量，但是随后就由于共同生活和家务操劳而逐渐变得日益迟钝，这时它就退化成为互相信赖的爱情；而这里面的伟大艺术就在于仍然能保持这些东西的充分的残余，从而无所谓的态度和厌倦都不会勾销欢愉的全部价值……\n\n--------------------------------------------------------------------------------\n\n** 以上均为摘录，抱歉没有精力去一一注明出处。如有侵权，请联系我删掉。 **\n","source":"_posts/文采.md","raw":"---\ntitle: 文采\ncopyright: true\ndate: 2019-04-11 15:26:26\ntags:\ncomments:\n---\n\n“目击众神死亡的草原上野花一片，远在远方的风比远方更远，我的琴声呜咽，泪水全无，我把这远方的远归还草原。”\n\n--------------------------------------------------------------------------------\n现在是清晨四点钟\n十二月已然尾声\n此刻我写这封给你\n其实只是想知道你过得好不好\n我听说你将自己的生活深筑在荒漠中\n难道你现在真的一无所求了吗\n多么希望你至少能留住一些值得着恋的东西\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n你出现在我的晨曦、午夜、朝霞和黄昏里，无时不刻，如影随形。我爱你时失去踪影，一想到你便沉入云端、跌落谷底，如火焚烧、涟漪层层。\n\n你在我的指尖、发梢、锁骨和脊梁，呼吸都带着颤栗的不安。清醒时你是微笑的、拘谨的、整齐的文字，癫狂时你是窒息的、失语的、狂热的声音。\n\n我们无话可说又无所不谈。一开始做爱的时候，我甚至不敢看你的眼睛，总是请求你关灯减少尴尬，疼痛、不适也一言不发。后来等我们真正无话不谈的时候我提起此事，你嗔怪我：“你应该告诉我的”，我说“那时候你还是个完全的陌生人！” 你把我扳过来，“我是个陌生人吗？” 我说“本来就是嘛“。我说我那时大概是到了需要一个亲密关系的阶段了，我和你第三次见面就上了床，那时候我对你的了解大概比我公寓的房东还要少。你拨开我的头发，脸压近过来：“那你就是利用我了？“我说不是，只是我很高兴你正好出现在对的时间。你仍不满意，整个身体都压过来，“那你不喜欢我吗？“\n\n我看着你的眼睛。这时候我已经能看着你的眼睛讲话了，有时候不讲话也可以。最开始的时候你也避开我的目光，后来偶尔目光接触就会笑，如今再发现我在看你，只会伸手把我揽在怀里，或是凑过来吻我散发着廉价超市洗发水气味的头发。这一过程进展缓慢却自然，来不及等我思考“两个人都上过床了却连牵手都有些尴尬怎么办”，你已经一跃成为一个称职而温情的恋人，亲吻我的脸颊时湿润得令人心软。\n\n我说我当然喜欢你。你裸着上身，整个重量承在我身上，压得我呼吸都沉重起来。我费力地从你身下抽出手来揽住你的脖颈，我直直地看着你，我说我喜欢你，有时喜欢到失去控制。\n\n你是我所有可怖的、柔情的、诡异的、私密的想象和欲望的具象，在你面前所有羞耻的告白和呓语都可被原谅，不，甚至被你喜爱，被你一再请求，迟疑又欢喜，落地成花。\n\n细密的、无常的、潮汐般的爱要如何量化？Lust or love 是永远的话题，但此时我混为一谈、深陷其中。我无法承认爱你超过任何人，但我真切地爱你，全心、全身、全部时空、全部灵魂。\n\n--------------------------------------------------------------------------------\n金雀出何所，必出自灵岳。剪断白云根，分破苍岑角。\n既为之巨砚，遂登于纶阁。水贮见温润，墨发知瀺濯。\n\n--------------------------------------------------------------------------------\n香雪如海\n\n--------------------------------------------------------------------------------\n“雨声潺潺，像住在溪边。宁愿天天下雨，以为你是因为下雨不来。”\n\n她爱他们。他们不干涉她，只静静的躺在她血液里，在她死的时候再死一次。\n\n他微红的微笑的脸俯向她，是苦海里长著的一朵赤金莲花。\n“怎么今天不痛了？因为是你的生日？”他说。\n他眼睛里闪著兴奋的光，像鱼摆尾一样在她里面荡漾了一下，望着她一笑。他忽然退出，爬到脚头去。\n“嗳，你在做什麼？”她恐惧的笑着问。他的头发拂在她大腿上，毛毵毵的不知道什么野兽的头。\n兽在幽暗的岩洞里的一线黄泉就饮，泊泊的用舌头卷起来。她是洞口倒挂着的蝙蝠，深山中藏匿的遗民，被侵犯了，被发现了，无助，无告的，有只动物在小口小口的啜著她的核心。暴露的恐怖揉合在难忍的愿望里：要他回来，马上回来——回到她的怀抱里，回到她眼底。\n\n--------------------------------------------------------------------------------\n朱利安深沉的思绪迷雾般交织变幻、浮现出复杂的色彩和形状。人的本质，他想道，超越言语可能涵盖的范畴，有着最坚硬和古怪的外形，是逻辑无法解释的存在形式。即便被层层假象包裹，但内里的硬核与生俱来，只在生死关头才显露无遗。这个层次上，每个人都是独一无二的。朱利安不由得想到包裹杰罗姆的重重迷雾。眼看着他不断成熟、现在要承担沉重的责任，朱利安内心却产生了强烈的不安。他深深自问，杰罗姆身上延续了自己的影子吗？还是说，自己对他的了解从未触及实质、不过是种自以为是？\n\n对面的读心难以忍受旅途的枯燥，不时把眼光投向静坐的朱利安，流露出嫉炉和憎恶的表情。朱利安对他的存在毫不介意，沉浸在反覆的思绪中。随着年龄增长，不知从何时开始，他迷上了倾听时间的脚步声，如同体味飞速坠向深渊所带来的恐惧和快感。朱利安以年轻人不能理解的沉稳思考着过去种种，此时另一节车厢里生的事他闭着眼都能猜到。但愿杰罗姆不要被短暂的*冲昏头脑。一想到自己的过去，朱利安的心像注满滚烫的铅水：爱情的要价太高了！\n\n--------------------------------------------------------------------------------\n她们两人真是幸福。像我这种混蛋夹在她们两人之间，总有一天会毁了她们。低调的幸福。一对好母女。啊，倘若上天肯聆听我这种人的祈祷，我祈求您赐给她们幸福，就算一生只有那么一次也好。\n\n天使在空中飞舞，奉了神灵的旨意，翅膀消失，降落伞似的飘落到了世界的每一个角落。我飘落到北国皑皑的白雪之上，你飘落到南国的蜜橘田里，而这几个少年，则飘落到了上野公园里。其区别就仅此而已。哪怕今后还得度过多少的岁月，少年们啊，毋庸关心容颜，不要抽烟，除了节日之外也别喝酒，为那些个性格内向、稍有姿色的姑娘们倾心钟情吧。\n\n天使在天空中飞舞。听从神的意志，天使隐去翅膀，宛如降落伞一般，飘落到世界的各个角落。我飘落在北国的雪原上，你飘落在南国的柑橘地里。而这群少年则飘落在了上野公园。差别仅此而已。少年们啊，从今以后，无论你们如何长大，都不要抽烟，也不要喝酒，除非逢年过节。而且，要持之以恒地去爱一个姑娘，一个腼腆而又有点臭美的姑娘。\n\n--------------------------------------------------------------------------------\n我不记得是谁曾经建议过，为了使灵魂宁静，一个人每天要做两件他不喜欢的事。\n\n--------------------------------------------------------------------------------\n她们十五岁的时候，到德国德累斯顿学习音乐。她们在那里过的是快活的日子。她们无拘无束地生活在学生中间，她们和男子们争论着哲学、社会学和艺术上的种种问题。她们的学识并不下于男子；因为是女子，所以更胜于他们了。强壮的青年男子们，带着六弦琴和她们到林中漫游。她们歌唱着，歌喉动人的青年们，在旷野间，在清晨的林中奔窜，自由地为所欲为，尤其是自由地谈所欲谈。最要紧的还是谈话，热情的谈话，爱情不过是件小小的陪衬品。\n\n希尔达和康士丹斯婉妹俩，都曾在十八岁的时候初试爱情。那些热情地和她们交谈，欢快地和她们歌唱，自由自在地和她们在林中野宿的男子们，不用说都欲望勃勃地想更进一步。她们起初是踌躇着；但是爱情这问题已经过许多的讨论，而且被认为是最重要的东西了，况且男子们又是这样低声下气地央求。为什么一个少女不能以身相就，象一个王后似的赐予思惠呢？\n\n于是她们都赐身与平素最微妙、最亲密在一起讨论的男子了。辩论是重要的事情，恋爱和性交不过是一种原始的本能；一种反应，事后，她们对于对手的爱情冷淡了，而且有点憎很他们的倾向，仿佛他们侵犯了她们的秘密和自由似的。因为一个少女的尊严，和她的生存意义，全在获得绝对的、完全的、纯粹的、高尚的自由。要不是摆脱了从前的污秽的两性关系和可耻的主奴状态，一个少女的生命还有什么意义。\n\n无论人怎样感情用事，性爱总是各种最古老、最宿秽的结合和从属状态之一。歌颂性爱的诗人们大都是男子。女子们一向就知道有更好更高尚的东西。现在她们知之更确了。一个人的美丽纯洁的自由，是比任何性爱都可爱的。不过男子对于这点的看法太落后了，他们象狗似的坚要性的满足。\n\n可是女人不得不退让，男子是像孩子般的嘴馋的，他要什么女人便得给什么，否则他便孩子似的讨厌起来，暴躁起来把好事弄糟。但是个女人可以顺从男子，而不退让她内在的、自由的自我。那些高谈性爱的诗人和其他的人好象不大注意到这点。一个女人是可以有个男子，而不真正委身，让他支配的。反之，她可以利用这性爱去支配他。在性交的时候，她自己忍持着，让男子尽先尽情地发泄完了，然而她便可以把性交延长，而把他当作工具去满足她自己的性欲。\n\n当大战爆发，她们急忙回家的时候，姐妹俩都有了爱情的经验了。她们所以恋爱，全是因为对手是可以亲切地、热烈地谈心的男子。和真正聪明的青年男子，一点钟又一点钟地，一天又一天地，热情地谈话，这种惊人的、深刻的、意想不到的美妙，是她们在经验以前所不知道的，天国的诺言： “您将有可以谈心的男子。”还没有吐露，而这奇妙的诺言却在她们明白其意义之前实现了。\n\n在这些生动的、毫无隐讳的、亲密的谈心过后，性行为成为不可避免的了，那只好忍受。那象是一章的结尾，它本身也是令人情热的；那是肉体深处的一种奇特的、美妙的震颤，最后是一种自我决定的痉挛。宛如最后—个奋激的宇，和一段文字后一行表示题意中断的小点子一样。\n\n这姊妹俩在性的快感中，几乎在男性的奇异的权力下面屈服了。但是很快她们便自拨了，把性的快感看作一种感觉，而保持了她们的自由。至于她们的情人呢，因为感激她们所赐与的性的满足，便把灵魂交给她们。但是不久，他们又有点觉得得不尝失了。康妮的男子开始有点负气的样子，希尔达的对手也渐渐态度轻蔑起来。但是男子们就是这样的；忘恩负义而永不满足！你要他们的时候，他们憎恨你，因为你要他们。你不睬他们的时候，他们还是憎恨你，因为旁的什么理由。或者毫无理由。他们是不知足的孩子，无论得到什么，无论女子怎样，都不满意的。\n\n--------------------------------------------------------------------------------\n我从未写诗\n只是上帝在我的骨节中\n踩踏出音阶\n\n--------------------------------------------------------------------------------\n山中·夜\n\n夜半，群山只剩下轮廓\n深刻了布谷的叫声\n清风化成水，透过身体\n留一注沁凉\n稀释浓重的色泽\n我站在天地中执笔\n调和梦里与梦外\n早晨推开窗\n便碰了一鼻子绿\n\n--------------------------------------------------------------------------------\n绿的肌肉，绿的头发，还有银子般沁凉的眼睛。\n\n绿\n\n天空一色苹果绿，\n天空是阳光下举着的绿色美酒，\n月亮是其中一片金色的花瓣\n\n她睁开她的眼睛，绿莹莹地\n眼波闪耀，象未绽的花蕾一般纯，\n第一次，此刻第一次为人瞥见\n\n裘小龙 译\n\n绿\n\n曙光是苹果绿，\n天空是绿酒在阳光中举起，\n月亮是其间的一瓣金玉。\n\n她张开眼，绿芒\n四射，明亮如花\n初绽，首次展放。\n\n非马  译\n\n--------------------------------------------------------------------------------\n站在下风的方向，可以嗅出树叶，满林子树叶散播的死讯，以及整个中西部成熟后的体香。中西部的深秋，是一场弥月不息的野火，从浅黄到血红到暗赭到沉郁郁的浓栗，从爱荷华一直烧到俄亥俄，夜以继日日以继夜地维持好几十郡的灿烂。\n\n--------------------------------------------------------------------------------\n“我们喝的咖啡都是如夜晚般漆黑，像罪恶一样甜腻。”\n\n永远不要对上厕所、吃东西，或者闭上眼睛打半小时瞌睡的机会说‘不’。\n\n“喂，胡因还是穆因，随便什么名字都好，喂，你！”\n黑鸟转过身，脑袋怀疑地偏在一侧，闪闪发光的眼珠子打量着他。\n“说‘我下次再也不这样做了’，说！”影子说。\n“日你妈。”乌鸦说。一人一鸟一起穿过树林，它再也没说一个字。\n\n“不是那个原因。女人能拯救她们的男人。而男人——像他这样的男人——他们的女人一旦死掉，他们也不会再活很长时间了。你会看到的。用不了多久，他开始变得神情恍惚，熟悉的一切都随着她的离开而离开。他开始对生命感到厌倦，整个人憔悴下去，他放弃对生的追求，然后，他死了。最后夺去他生命的也许是肺炎，也许是癌，或许是心脏停止跳动。等你上了年纪，所有的激情斗志都离你而去之后，你的生命也就结束了。”\n\n没有人是一座孤岛，多恩这样说过。但是他错了。如果我们不是孤岛，我们就会迷失自我，溺死在彼此的悲哀中。我们彼此隔绝孤立，隔绝于他人的悲哀之外。这是自我保护的天性。我们是一座座孤岛，其形状被所有故事一遍遍地反复描绘。孤岛的形状是不会改变的：一个人出生、长大，然后，因为这种或那种原因，死了。好了，其余细节你可以用你自己的经历来填充。你的故事和其他人的故事一样，没有任何独创内容，但也和其他人的人生一样独一无二。生活就像雪花，每个人的人生都是不同形状的雪花；生活就像豆荚中的豆子（你有没有见过豆荚中的豆子？我是说真正仔细地观察它们？近距离观察一分钟之后，你绝对不会把一颗豆子混同于另外一颗豆子），看似相同，但每一个都是独一无二的。\n如果没有个体的存在，我们看见的只能是总体数字：死亡一千人，死亡十万人，“伤亡人数达到一百万”。但有了活生生的个体，统计数据就变成了真实存在的人——但这同样是谎言。数字仍旧是麻木的，没有任何意义，哪怕人们会因为它们而感到痛苦。看这个孩子吧，腹部肿胀，苍蝇叮满他的眼角，他瘦得皮包骨头。但是，有了这些，你就能知道他的名字、他的年龄、他的梦想和他的恐惧吗？你就能了解他的内心吗？如果你可以，那就让我们再对他的姐姐来一番解剖。此刻她就躺在他身后灼热的土地上，身体歪扭、肿胀。好吧，你同样能感受到她的内心。但除了这两姐弟之外，还有上千个孩子成为饥馑受害者，上千个孩子即将成为苍蝇们无数蠕动的蛆虫的食物。难道说只有那两姐弟重要，其他所有那些孩子就无足轻重吗？\n我们画出一道隔离保护线，把他们的痛苦隔离在外，安全地待在属于自己的孤岛上，让他们的痛苦无法伤害我们。他们被我们包裹在一层光滑、安全、充满光泽的隔离膜中，仿佛珍珠一样，他们经历的苦难不会让我们的灵魂深处感受到任何真正的痛苦。\n虚构的小说允许我们进入他们的大脑，通过他们的眼睛观看外面的世界。在故事中，我们会在作为主角的我们死亡之前停止阅读，或者体验毫无痛苦的“代理死亡”，然后跳出这个故事，在真实的世界中轻轻翻过新的一页，或者合上书，继续属于我们自己的生活。\n自己的生活——和其他人生既相同、又不同的生活。\n\n--------------------------------------------------------------------------------\n\n马骁（Selkie）版：\n那些强盛的力量和存在可能尚有留存……远古之时的遗存……早在人性之潮涌起前就已消隐的知觉意识……这些觉识在诗歌和传说中偶有闪现，它们常被冠以神祗、怪兽和各种神秘事物之名……\n\n――阿尔杰农・布莱克伍德\n\n1. 陶塑中的恐怖\n\n我认为，人的思维缺乏将已知事物联系起来的能力，这是世上最仁慈的事了。人类居住在幽暗的海洋中名为无知的小岛上，这海洋浩淼无垠蕴藏无穷秘密，但我们并不应该航行过远，探究太深。迄今为止，各门类的科学都遵循着自己的道路发展，并未给人类带来多少危害；但总有一天这些分立的知识将融合在一起，揭示出世界真实的景象，以及人类可怖的处境――我们或是因这景象而疯狂，或是从光明中逃回那安全静寂的黑暗纪元去。\n\n黄公夏（wwmidia）版：\n“可以想见，如此超凡的力量或存在未必灭绝殆尽……来自太古时代的幸存者……其自我意识，也许表现为某种形态，自人类出现以前很久就失落无踪……只有诗歌和传说以稍纵即逝的记忆加以临摹，并以林林总总的神祗、怪物和神话生物称之……”\n\n——阿尔杰农•布莱克伍德\n\n1. 恐怖泥雕\n\n人类无法将脑内所有信息同时关联到一起，我想，这算是世间最大的仁慈了。我们身处恬然宁静的无知之岛，位于黑狞无边的大海中央，也并非注定要驶向远方一探究竟。各种科学在其所属方向竭力前行，虽然至今尚未对我们造成伤害，但终有一天，各不相关的知识彼此碰撞，会揭开那骇人的真相，点明我们在这片可怕光景中所处的方位。这份光明是如此恐怖而致命，我们若不想失心而疯，就必须远远逃开，躲进一个新的黑暗时代去寻找平和与安宁。\n\n------------------------------------------------------------\n\n与瑞娜相处就像在伤口上撒盐，让他想起自己开始在身上刺青时所放弃的一切。\n\n--------------------------------------------------------------------------------\n竹篱上 停留着 蜻蜓\n玻璃瓶里插满 小小 森林\n青春 嫩绿的很 鲜明\n百叶窗 折射的 光影\n像有着心事的 一张 表情\n而你 低头拆信\n想知道关于我的事情\n青苔入镜 檐下风铃 摇晃曾经\n回忆是 一行行无从\n剪接的风景 爱始终年轻\n而我听见 下雨的声音\n想起你用唇语 说爱情\n幸福也可以 很安静\n我付出一直 很小心\n终于听见 下雨的声音\n于是我的世界 被吵醒\n就怕情绪红 了眼睛\n不舍的泪在 彼此的 脸上透明\n百叶窗 折射的 光影\n像有着心事的 一张 表情\n而你 低头拆信\n想知道关于我的事情\n爱在过境 缘份不停 谁在担心\n窗台上 滴落的雨滴\n轻敲着伤心 凄美而动听\n而我听见下 雨的声音\n想起你用 唇语说爱情\n热恋的时刻 最任性\n不顾一切的 给约定\n终于听见 下雨的声音\n于是我的 世界被吵醒\n发现你始终 很靠近\n默默的陪在\n我身边 态度坚定\n\n--------------------------------------------------------------------------------\n对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。\n\n我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。\n\n我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。\n\n爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。\n这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。\n\n爱之于我，不是肌肤之亲，不是一蔬一饭，它是一种不死的欲望，是颓败生活中的英雄梦想。\n\n两样东西，人们越是经常持久对之凝神思索，它们就越是使内心充满常新而日增的惊奇和敬畏：我头上的星空和我心中的道德律。\n\n所有由这些感受（指恋爱）而得到的美好和甜蜜，都只是在一开始才具有其全部的强烈力量，但是随后就由于共同生活和家务操劳而逐渐变得日益迟钝，这时它就退化成为互相信赖的爱情；而这里面的伟大艺术就在于仍然能保持这些东西的充分的残余，从而无所谓的态度和厌倦都不会勾销欢愉的全部价值……\n\n--------------------------------------------------------------------------------\n\n** 以上均为摘录，抱歉没有精力去一一注明出处。如有侵权，请联系我删掉。 **\n","slug":"文采","published":1,"updated":"2019-04-11T07:42:00.463Z","_id":"cjucbl8ms001hb9fsxjneu8q3","layout":"post","photos":[],"link":"","content":"<p>“目击众神死亡的草原上野花一片，远在远方的风比远方更远，我的琴声呜咽，泪水全无，我把这远方的远归还草原。”</p>\n<hr>\n<p>现在是清晨四点钟<br>十二月已然尾声<br>此刻我写这封给你<br>其实只是想知道你过得好不好<br>我听说你将自己的生活深筑在荒漠中<br>难道你现在真的一无所求了吗<br>多么希望你至少能留住一些值得着恋的东西</p>\n<a id=\"more\"></a>\n<hr>\n<p>你出现在我的晨曦、午夜、朝霞和黄昏里，无时不刻，如影随形。我爱你时失去踪影，一想到你便沉入云端、跌落谷底，如火焚烧、涟漪层层。</p>\n<p>你在我的指尖、发梢、锁骨和脊梁，呼吸都带着颤栗的不安。清醒时你是微笑的、拘谨的、整齐的文字，癫狂时你是窒息的、失语的、狂热的声音。</p>\n<p>我们无话可说又无所不谈。一开始做爱的时候，我甚至不敢看你的眼睛，总是请求你关灯减少尴尬，疼痛、不适也一言不发。后来等我们真正无话不谈的时候我提起此事，你嗔怪我：“你应该告诉我的”，我说“那时候你还是个完全的陌生人！” 你把我扳过来，“我是个陌生人吗？” 我说“本来就是嘛“。我说我那时大概是到了需要一个亲密关系的阶段了，我和你第三次见面就上了床，那时候我对你的了解大概比我公寓的房东还要少。你拨开我的头发，脸压近过来：“那你就是利用我了？“我说不是，只是我很高兴你正好出现在对的时间。你仍不满意，整个身体都压过来，“那你不喜欢我吗？“</p>\n<p>我看着你的眼睛。这时候我已经能看着你的眼睛讲话了，有时候不讲话也可以。最开始的时候你也避开我的目光，后来偶尔目光接触就会笑，如今再发现我在看你，只会伸手把我揽在怀里，或是凑过来吻我散发着廉价超市洗发水气味的头发。这一过程进展缓慢却自然，来不及等我思考“两个人都上过床了却连牵手都有些尴尬怎么办”，你已经一跃成为一个称职而温情的恋人，亲吻我的脸颊时湿润得令人心软。</p>\n<p>我说我当然喜欢你。你裸着上身，整个重量承在我身上，压得我呼吸都沉重起来。我费力地从你身下抽出手来揽住你的脖颈，我直直地看着你，我说我喜欢你，有时喜欢到失去控制。</p>\n<p>你是我所有可怖的、柔情的、诡异的、私密的想象和欲望的具象，在你面前所有羞耻的告白和呓语都可被原谅，不，甚至被你喜爱，被你一再请求，迟疑又欢喜，落地成花。</p>\n<p>细密的、无常的、潮汐般的爱要如何量化？Lust or love 是永远的话题，但此时我混为一谈、深陷其中。我无法承认爱你超过任何人，但我真切地爱你，全心、全身、全部时空、全部灵魂。</p>\n<hr>\n<p>金雀出何所，必出自灵岳。剪断白云根，分破苍岑角。<br>既为之巨砚，遂登于纶阁。水贮见温润，墨发知瀺濯。</p>\n<hr>\n<p>香雪如海</p>\n<hr>\n<p>“雨声潺潺，像住在溪边。宁愿天天下雨，以为你是因为下雨不来。”</p>\n<p>她爱他们。他们不干涉她，只静静的躺在她血液里，在她死的时候再死一次。</p>\n<p>他微红的微笑的脸俯向她，是苦海里长著的一朵赤金莲花。<br>“怎么今天不痛了？因为是你的生日？”他说。<br>他眼睛里闪著兴奋的光，像鱼摆尾一样在她里面荡漾了一下，望着她一笑。他忽然退出，爬到脚头去。<br>“嗳，你在做什麼？”她恐惧的笑着问。他的头发拂在她大腿上，毛毵毵的不知道什么野兽的头。<br>兽在幽暗的岩洞里的一线黄泉就饮，泊泊的用舌头卷起来。她是洞口倒挂着的蝙蝠，深山中藏匿的遗民，被侵犯了，被发现了，无助，无告的，有只动物在小口小口的啜著她的核心。暴露的恐怖揉合在难忍的愿望里：要他回来，马上回来——回到她的怀抱里，回到她眼底。</p>\n<hr>\n<p>朱利安深沉的思绪迷雾般交织变幻、浮现出复杂的色彩和形状。人的本质，他想道，超越言语可能涵盖的范畴，有着最坚硬和古怪的外形，是逻辑无法解释的存在形式。即便被层层假象包裹，但内里的硬核与生俱来，只在生死关头才显露无遗。这个层次上，每个人都是独一无二的。朱利安不由得想到包裹杰罗姆的重重迷雾。眼看着他不断成熟、现在要承担沉重的责任，朱利安内心却产生了强烈的不安。他深深自问，杰罗姆身上延续了自己的影子吗？还是说，自己对他的了解从未触及实质、不过是种自以为是？</p>\n<p>对面的读心难以忍受旅途的枯燥，不时把眼光投向静坐的朱利安，流露出嫉炉和憎恶的表情。朱利安对他的存在毫不介意，沉浸在反覆的思绪中。随着年龄增长，不知从何时开始，他迷上了倾听时间的脚步声，如同体味飞速坠向深渊所带来的恐惧和快感。朱利安以年轻人不能理解的沉稳思考着过去种种，此时另一节车厢里生的事他闭着眼都能猜到。但愿杰罗姆不要被短暂的*冲昏头脑。一想到自己的过去，朱利安的心像注满滚烫的铅水：爱情的要价太高了！</p>\n<hr>\n<p>她们两人真是幸福。像我这种混蛋夹在她们两人之间，总有一天会毁了她们。低调的幸福。一对好母女。啊，倘若上天肯聆听我这种人的祈祷，我祈求您赐给她们幸福，就算一生只有那么一次也好。</p>\n<p>天使在空中飞舞，奉了神灵的旨意，翅膀消失，降落伞似的飘落到了世界的每一个角落。我飘落到北国皑皑的白雪之上，你飘落到南国的蜜橘田里，而这几个少年，则飘落到了上野公园里。其区别就仅此而已。哪怕今后还得度过多少的岁月，少年们啊，毋庸关心容颜，不要抽烟，除了节日之外也别喝酒，为那些个性格内向、稍有姿色的姑娘们倾心钟情吧。</p>\n<p>天使在天空中飞舞。听从神的意志，天使隐去翅膀，宛如降落伞一般，飘落到世界的各个角落。我飘落在北国的雪原上，你飘落在南国的柑橘地里。而这群少年则飘落在了上野公园。差别仅此而已。少年们啊，从今以后，无论你们如何长大，都不要抽烟，也不要喝酒，除非逢年过节。而且，要持之以恒地去爱一个姑娘，一个腼腆而又有点臭美的姑娘。</p>\n<hr>\n<p>我不记得是谁曾经建议过，为了使灵魂宁静，一个人每天要做两件他不喜欢的事。</p>\n<hr>\n<p>她们十五岁的时候，到德国德累斯顿学习音乐。她们在那里过的是快活的日子。她们无拘无束地生活在学生中间，她们和男子们争论着哲学、社会学和艺术上的种种问题。她们的学识并不下于男子；因为是女子，所以更胜于他们了。强壮的青年男子们，带着六弦琴和她们到林中漫游。她们歌唱着，歌喉动人的青年们，在旷野间，在清晨的林中奔窜，自由地为所欲为，尤其是自由地谈所欲谈。最要紧的还是谈话，热情的谈话，爱情不过是件小小的陪衬品。</p>\n<p>希尔达和康士丹斯婉妹俩，都曾在十八岁的时候初试爱情。那些热情地和她们交谈，欢快地和她们歌唱，自由自在地和她们在林中野宿的男子们，不用说都欲望勃勃地想更进一步。她们起初是踌躇着；但是爱情这问题已经过许多的讨论，而且被认为是最重要的东西了，况且男子们又是这样低声下气地央求。为什么一个少女不能以身相就，象一个王后似的赐予思惠呢？</p>\n<p>于是她们都赐身与平素最微妙、最亲密在一起讨论的男子了。辩论是重要的事情，恋爱和性交不过是一种原始的本能；一种反应，事后，她们对于对手的爱情冷淡了，而且有点憎很他们的倾向，仿佛他们侵犯了她们的秘密和自由似的。因为一个少女的尊严，和她的生存意义，全在获得绝对的、完全的、纯粹的、高尚的自由。要不是摆脱了从前的污秽的两性关系和可耻的主奴状态，一个少女的生命还有什么意义。</p>\n<p>无论人怎样感情用事，性爱总是各种最古老、最宿秽的结合和从属状态之一。歌颂性爱的诗人们大都是男子。女子们一向就知道有更好更高尚的东西。现在她们知之更确了。一个人的美丽纯洁的自由，是比任何性爱都可爱的。不过男子对于这点的看法太落后了，他们象狗似的坚要性的满足。</p>\n<p>可是女人不得不退让，男子是像孩子般的嘴馋的，他要什么女人便得给什么，否则他便孩子似的讨厌起来，暴躁起来把好事弄糟。但是个女人可以顺从男子，而不退让她内在的、自由的自我。那些高谈性爱的诗人和其他的人好象不大注意到这点。一个女人是可以有个男子，而不真正委身，让他支配的。反之，她可以利用这性爱去支配他。在性交的时候，她自己忍持着，让男子尽先尽情地发泄完了，然而她便可以把性交延长，而把他当作工具去满足她自己的性欲。</p>\n<p>当大战爆发，她们急忙回家的时候，姐妹俩都有了爱情的经验了。她们所以恋爱，全是因为对手是可以亲切地、热烈地谈心的男子。和真正聪明的青年男子，一点钟又一点钟地，一天又一天地，热情地谈话，这种惊人的、深刻的、意想不到的美妙，是她们在经验以前所不知道的，天国的诺言： “您将有可以谈心的男子。”还没有吐露，而这奇妙的诺言却在她们明白其意义之前实现了。</p>\n<p>在这些生动的、毫无隐讳的、亲密的谈心过后，性行为成为不可避免的了，那只好忍受。那象是一章的结尾，它本身也是令人情热的；那是肉体深处的一种奇特的、美妙的震颤，最后是一种自我决定的痉挛。宛如最后—个奋激的宇，和一段文字后一行表示题意中断的小点子一样。</p>\n<p>这姊妹俩在性的快感中，几乎在男性的奇异的权力下面屈服了。但是很快她们便自拨了，把性的快感看作一种感觉，而保持了她们的自由。至于她们的情人呢，因为感激她们所赐与的性的满足，便把灵魂交给她们。但是不久，他们又有点觉得得不尝失了。康妮的男子开始有点负气的样子，希尔达的对手也渐渐态度轻蔑起来。但是男子们就是这样的；忘恩负义而永不满足！你要他们的时候，他们憎恨你，因为你要他们。你不睬他们的时候，他们还是憎恨你，因为旁的什么理由。或者毫无理由。他们是不知足的孩子，无论得到什么，无论女子怎样，都不满意的。</p>\n<hr>\n<p>我从未写诗<br>只是上帝在我的骨节中<br>踩踏出音阶</p>\n<hr>\n<p>山中·夜</p>\n<p>夜半，群山只剩下轮廓<br>深刻了布谷的叫声<br>清风化成水，透过身体<br>留一注沁凉<br>稀释浓重的色泽<br>我站在天地中执笔<br>调和梦里与梦外<br>早晨推开窗<br>便碰了一鼻子绿</p>\n<hr>\n<p>绿的肌肉，绿的头发，还有银子般沁凉的眼睛。</p>\n<p>绿</p>\n<p>天空一色苹果绿，<br>天空是阳光下举着的绿色美酒，<br>月亮是其中一片金色的花瓣</p>\n<p>她睁开她的眼睛，绿莹莹地<br>眼波闪耀，象未绽的花蕾一般纯，<br>第一次，此刻第一次为人瞥见</p>\n<p>裘小龙 译</p>\n<p>绿</p>\n<p>曙光是苹果绿，<br>天空是绿酒在阳光中举起，<br>月亮是其间的一瓣金玉。</p>\n<p>她张开眼，绿芒<br>四射，明亮如花<br>初绽，首次展放。</p>\n<p>非马  译</p>\n<hr>\n<p>站在下风的方向，可以嗅出树叶，满林子树叶散播的死讯，以及整个中西部成熟后的体香。中西部的深秋，是一场弥月不息的野火，从浅黄到血红到暗赭到沉郁郁的浓栗，从爱荷华一直烧到俄亥俄，夜以继日日以继夜地维持好几十郡的灿烂。</p>\n<hr>\n<p>“我们喝的咖啡都是如夜晚般漆黑，像罪恶一样甜腻。”</p>\n<p>永远不要对上厕所、吃东西，或者闭上眼睛打半小时瞌睡的机会说‘不’。</p>\n<p>“喂，胡因还是穆因，随便什么名字都好，喂，你！”<br>黑鸟转过身，脑袋怀疑地偏在一侧，闪闪发光的眼珠子打量着他。<br>“说‘我下次再也不这样做了’，说！”影子说。<br>“日你妈。”乌鸦说。一人一鸟一起穿过树林，它再也没说一个字。</p>\n<p>“不是那个原因。女人能拯救她们的男人。而男人——像他这样的男人——他们的女人一旦死掉，他们也不会再活很长时间了。你会看到的。用不了多久，他开始变得神情恍惚，熟悉的一切都随着她的离开而离开。他开始对生命感到厌倦，整个人憔悴下去，他放弃对生的追求，然后，他死了。最后夺去他生命的也许是肺炎，也许是癌，或许是心脏停止跳动。等你上了年纪，所有的激情斗志都离你而去之后，你的生命也就结束了。”</p>\n<p>没有人是一座孤岛，多恩这样说过。但是他错了。如果我们不是孤岛，我们就会迷失自我，溺死在彼此的悲哀中。我们彼此隔绝孤立，隔绝于他人的悲哀之外。这是自我保护的天性。我们是一座座孤岛，其形状被所有故事一遍遍地反复描绘。孤岛的形状是不会改变的：一个人出生、长大，然后，因为这种或那种原因，死了。好了，其余细节你可以用你自己的经历来填充。你的故事和其他人的故事一样，没有任何独创内容，但也和其他人的人生一样独一无二。生活就像雪花，每个人的人生都是不同形状的雪花；生活就像豆荚中的豆子（你有没有见过豆荚中的豆子？我是说真正仔细地观察它们？近距离观察一分钟之后，你绝对不会把一颗豆子混同于另外一颗豆子），看似相同，但每一个都是独一无二的。<br>如果没有个体的存在，我们看见的只能是总体数字：死亡一千人，死亡十万人，“伤亡人数达到一百万”。但有了活生生的个体，统计数据就变成了真实存在的人——但这同样是谎言。数字仍旧是麻木的，没有任何意义，哪怕人们会因为它们而感到痛苦。看这个孩子吧，腹部肿胀，苍蝇叮满他的眼角，他瘦得皮包骨头。但是，有了这些，你就能知道他的名字、他的年龄、他的梦想和他的恐惧吗？你就能了解他的内心吗？如果你可以，那就让我们再对他的姐姐来一番解剖。此刻她就躺在他身后灼热的土地上，身体歪扭、肿胀。好吧，你同样能感受到她的内心。但除了这两姐弟之外，还有上千个孩子成为饥馑受害者，上千个孩子即将成为苍蝇们无数蠕动的蛆虫的食物。难道说只有那两姐弟重要，其他所有那些孩子就无足轻重吗？<br>我们画出一道隔离保护线，把他们的痛苦隔离在外，安全地待在属于自己的孤岛上，让他们的痛苦无法伤害我们。他们被我们包裹在一层光滑、安全、充满光泽的隔离膜中，仿佛珍珠一样，他们经历的苦难不会让我们的灵魂深处感受到任何真正的痛苦。<br>虚构的小说允许我们进入他们的大脑，通过他们的眼睛观看外面的世界。在故事中，我们会在作为主角的我们死亡之前停止阅读，或者体验毫无痛苦的“代理死亡”，然后跳出这个故事，在真实的世界中轻轻翻过新的一页，或者合上书，继续属于我们自己的生活。<br>自己的生活——和其他人生既相同、又不同的生活。</p>\n<hr>\n<p>马骁（Selkie）版：<br>那些强盛的力量和存在可能尚有留存……远古之时的遗存……早在人性之潮涌起前就已消隐的知觉意识……这些觉识在诗歌和传说中偶有闪现，它们常被冠以神祗、怪兽和各种神秘事物之名……</p>\n<p>――阿尔杰农・布莱克伍德</p>\n<ol>\n<li>陶塑中的恐怖</li>\n</ol>\n<p>我认为，人的思维缺乏将已知事物联系起来的能力，这是世上最仁慈的事了。人类居住在幽暗的海洋中名为无知的小岛上，这海洋浩淼无垠蕴藏无穷秘密，但我们并不应该航行过远，探究太深。迄今为止，各门类的科学都遵循着自己的道路发展，并未给人类带来多少危害；但总有一天这些分立的知识将融合在一起，揭示出世界真实的景象，以及人类可怖的处境――我们或是因这景象而疯狂，或是从光明中逃回那安全静寂的黑暗纪元去。</p>\n<p>黄公夏（wwmidia）版：<br>“可以想见，如此超凡的力量或存在未必灭绝殆尽……来自太古时代的幸存者……其自我意识，也许表现为某种形态，自人类出现以前很久就失落无踪……只有诗歌和传说以稍纵即逝的记忆加以临摹，并以林林总总的神祗、怪物和神话生物称之……”</p>\n<p>——阿尔杰农•布莱克伍德</p>\n<ol>\n<li>恐怖泥雕</li>\n</ol>\n<p>人类无法将脑内所有信息同时关联到一起，我想，这算是世间最大的仁慈了。我们身处恬然宁静的无知之岛，位于黑狞无边的大海中央，也并非注定要驶向远方一探究竟。各种科学在其所属方向竭力前行，虽然至今尚未对我们造成伤害，但终有一天，各不相关的知识彼此碰撞，会揭开那骇人的真相，点明我们在这片可怕光景中所处的方位。这份光明是如此恐怖而致命，我们若不想失心而疯，就必须远远逃开，躲进一个新的黑暗时代去寻找平和与安宁。</p>\n<hr>\n<p>与瑞娜相处就像在伤口上撒盐，让他想起自己开始在身上刺青时所放弃的一切。</p>\n<hr>\n<p>竹篱上 停留着 蜻蜓<br>玻璃瓶里插满 小小 森林<br>青春 嫩绿的很 鲜明<br>百叶窗 折射的 光影<br>像有着心事的 一张 表情<br>而你 低头拆信<br>想知道关于我的事情<br>青苔入镜 檐下风铃 摇晃曾经<br>回忆是 一行行无从<br>剪接的风景 爱始终年轻<br>而我听见 下雨的声音<br>想起你用唇语 说爱情<br>幸福也可以 很安静<br>我付出一直 很小心<br>终于听见 下雨的声音<br>于是我的世界 被吵醒<br>就怕情绪红 了眼睛<br>不舍的泪在 彼此的 脸上透明<br>百叶窗 折射的 光影<br>像有着心事的 一张 表情<br>而你 低头拆信<br>想知道关于我的事情<br>爱在过境 缘份不停 谁在担心<br>窗台上 滴落的雨滴<br>轻敲着伤心 凄美而动听<br>而我听见下 雨的声音<br>想起你用 唇语说爱情<br>热恋的时刻 最任性<br>不顾一切的 给约定<br>终于听见 下雨的声音<br>于是我的 世界被吵醒<br>发现你始终 很靠近<br>默默的陪在<br>我身边 态度坚定</p>\n<hr>\n<p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。</p>\n<p>我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。</p>\n<p>我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。</p>\n<p>爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。<br>这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。</p>\n<p>爱之于我，不是肌肤之亲，不是一蔬一饭，它是一种不死的欲望，是颓败生活中的英雄梦想。</p>\n<p>两样东西，人们越是经常持久对之凝神思索，它们就越是使内心充满常新而日增的惊奇和敬畏：我头上的星空和我心中的道德律。</p>\n<p>所有由这些感受（指恋爱）而得到的美好和甜蜜，都只是在一开始才具有其全部的强烈力量，但是随后就由于共同生活和家务操劳而逐渐变得日益迟钝，这时它就退化成为互相信赖的爱情；而这里面的伟大艺术就在于仍然能保持这些东西的充分的残余，从而无所谓的态度和厌倦都不会勾销欢愉的全部价值……</p>\n<hr>\n<p><strong> 以上均为摘录，抱歉没有精力去一一注明出处。如有侵权，请联系我删掉。 </strong></p>\n","site":{"data":{}},"excerpt":"<p>“目击众神死亡的草原上野花一片，远在远方的风比远方更远，我的琴声呜咽，泪水全无，我把这远方的远归还草原。”</p>\n<hr>\n<p>现在是清晨四点钟<br>十二月已然尾声<br>此刻我写这封给你<br>其实只是想知道你过得好不好<br>我听说你将自己的生活深筑在荒漠中<br>难道你现在真的一无所求了吗<br>多么希望你至少能留住一些值得着恋的东西</p>","more":"<hr>\n<p>你出现在我的晨曦、午夜、朝霞和黄昏里，无时不刻，如影随形。我爱你时失去踪影，一想到你便沉入云端、跌落谷底，如火焚烧、涟漪层层。</p>\n<p>你在我的指尖、发梢、锁骨和脊梁，呼吸都带着颤栗的不安。清醒时你是微笑的、拘谨的、整齐的文字，癫狂时你是窒息的、失语的、狂热的声音。</p>\n<p>我们无话可说又无所不谈。一开始做爱的时候，我甚至不敢看你的眼睛，总是请求你关灯减少尴尬，疼痛、不适也一言不发。后来等我们真正无话不谈的时候我提起此事，你嗔怪我：“你应该告诉我的”，我说“那时候你还是个完全的陌生人！” 你把我扳过来，“我是个陌生人吗？” 我说“本来就是嘛“。我说我那时大概是到了需要一个亲密关系的阶段了，我和你第三次见面就上了床，那时候我对你的了解大概比我公寓的房东还要少。你拨开我的头发，脸压近过来：“那你就是利用我了？“我说不是，只是我很高兴你正好出现在对的时间。你仍不满意，整个身体都压过来，“那你不喜欢我吗？“</p>\n<p>我看着你的眼睛。这时候我已经能看着你的眼睛讲话了，有时候不讲话也可以。最开始的时候你也避开我的目光，后来偶尔目光接触就会笑，如今再发现我在看你，只会伸手把我揽在怀里，或是凑过来吻我散发着廉价超市洗发水气味的头发。这一过程进展缓慢却自然，来不及等我思考“两个人都上过床了却连牵手都有些尴尬怎么办”，你已经一跃成为一个称职而温情的恋人，亲吻我的脸颊时湿润得令人心软。</p>\n<p>我说我当然喜欢你。你裸着上身，整个重量承在我身上，压得我呼吸都沉重起来。我费力地从你身下抽出手来揽住你的脖颈，我直直地看着你，我说我喜欢你，有时喜欢到失去控制。</p>\n<p>你是我所有可怖的、柔情的、诡异的、私密的想象和欲望的具象，在你面前所有羞耻的告白和呓语都可被原谅，不，甚至被你喜爱，被你一再请求，迟疑又欢喜，落地成花。</p>\n<p>细密的、无常的、潮汐般的爱要如何量化？Lust or love 是永远的话题，但此时我混为一谈、深陷其中。我无法承认爱你超过任何人，但我真切地爱你，全心、全身、全部时空、全部灵魂。</p>\n<hr>\n<p>金雀出何所，必出自灵岳。剪断白云根，分破苍岑角。<br>既为之巨砚，遂登于纶阁。水贮见温润，墨发知瀺濯。</p>\n<hr>\n<p>香雪如海</p>\n<hr>\n<p>“雨声潺潺，像住在溪边。宁愿天天下雨，以为你是因为下雨不来。”</p>\n<p>她爱他们。他们不干涉她，只静静的躺在她血液里，在她死的时候再死一次。</p>\n<p>他微红的微笑的脸俯向她，是苦海里长著的一朵赤金莲花。<br>“怎么今天不痛了？因为是你的生日？”他说。<br>他眼睛里闪著兴奋的光，像鱼摆尾一样在她里面荡漾了一下，望着她一笑。他忽然退出，爬到脚头去。<br>“嗳，你在做什麼？”她恐惧的笑着问。他的头发拂在她大腿上，毛毵毵的不知道什么野兽的头。<br>兽在幽暗的岩洞里的一线黄泉就饮，泊泊的用舌头卷起来。她是洞口倒挂着的蝙蝠，深山中藏匿的遗民，被侵犯了，被发现了，无助，无告的，有只动物在小口小口的啜著她的核心。暴露的恐怖揉合在难忍的愿望里：要他回来，马上回来——回到她的怀抱里，回到她眼底。</p>\n<hr>\n<p>朱利安深沉的思绪迷雾般交织变幻、浮现出复杂的色彩和形状。人的本质，他想道，超越言语可能涵盖的范畴，有着最坚硬和古怪的外形，是逻辑无法解释的存在形式。即便被层层假象包裹，但内里的硬核与生俱来，只在生死关头才显露无遗。这个层次上，每个人都是独一无二的。朱利安不由得想到包裹杰罗姆的重重迷雾。眼看着他不断成熟、现在要承担沉重的责任，朱利安内心却产生了强烈的不安。他深深自问，杰罗姆身上延续了自己的影子吗？还是说，自己对他的了解从未触及实质、不过是种自以为是？</p>\n<p>对面的读心难以忍受旅途的枯燥，不时把眼光投向静坐的朱利安，流露出嫉炉和憎恶的表情。朱利安对他的存在毫不介意，沉浸在反覆的思绪中。随着年龄增长，不知从何时开始，他迷上了倾听时间的脚步声，如同体味飞速坠向深渊所带来的恐惧和快感。朱利安以年轻人不能理解的沉稳思考着过去种种，此时另一节车厢里生的事他闭着眼都能猜到。但愿杰罗姆不要被短暂的*冲昏头脑。一想到自己的过去，朱利安的心像注满滚烫的铅水：爱情的要价太高了！</p>\n<hr>\n<p>她们两人真是幸福。像我这种混蛋夹在她们两人之间，总有一天会毁了她们。低调的幸福。一对好母女。啊，倘若上天肯聆听我这种人的祈祷，我祈求您赐给她们幸福，就算一生只有那么一次也好。</p>\n<p>天使在空中飞舞，奉了神灵的旨意，翅膀消失，降落伞似的飘落到了世界的每一个角落。我飘落到北国皑皑的白雪之上，你飘落到南国的蜜橘田里，而这几个少年，则飘落到了上野公园里。其区别就仅此而已。哪怕今后还得度过多少的岁月，少年们啊，毋庸关心容颜，不要抽烟，除了节日之外也别喝酒，为那些个性格内向、稍有姿色的姑娘们倾心钟情吧。</p>\n<p>天使在天空中飞舞。听从神的意志，天使隐去翅膀，宛如降落伞一般，飘落到世界的各个角落。我飘落在北国的雪原上，你飘落在南国的柑橘地里。而这群少年则飘落在了上野公园。差别仅此而已。少年们啊，从今以后，无论你们如何长大，都不要抽烟，也不要喝酒，除非逢年过节。而且，要持之以恒地去爱一个姑娘，一个腼腆而又有点臭美的姑娘。</p>\n<hr>\n<p>我不记得是谁曾经建议过，为了使灵魂宁静，一个人每天要做两件他不喜欢的事。</p>\n<hr>\n<p>她们十五岁的时候，到德国德累斯顿学习音乐。她们在那里过的是快活的日子。她们无拘无束地生活在学生中间，她们和男子们争论着哲学、社会学和艺术上的种种问题。她们的学识并不下于男子；因为是女子，所以更胜于他们了。强壮的青年男子们，带着六弦琴和她们到林中漫游。她们歌唱着，歌喉动人的青年们，在旷野间，在清晨的林中奔窜，自由地为所欲为，尤其是自由地谈所欲谈。最要紧的还是谈话，热情的谈话，爱情不过是件小小的陪衬品。</p>\n<p>希尔达和康士丹斯婉妹俩，都曾在十八岁的时候初试爱情。那些热情地和她们交谈，欢快地和她们歌唱，自由自在地和她们在林中野宿的男子们，不用说都欲望勃勃地想更进一步。她们起初是踌躇着；但是爱情这问题已经过许多的讨论，而且被认为是最重要的东西了，况且男子们又是这样低声下气地央求。为什么一个少女不能以身相就，象一个王后似的赐予思惠呢？</p>\n<p>于是她们都赐身与平素最微妙、最亲密在一起讨论的男子了。辩论是重要的事情，恋爱和性交不过是一种原始的本能；一种反应，事后，她们对于对手的爱情冷淡了，而且有点憎很他们的倾向，仿佛他们侵犯了她们的秘密和自由似的。因为一个少女的尊严，和她的生存意义，全在获得绝对的、完全的、纯粹的、高尚的自由。要不是摆脱了从前的污秽的两性关系和可耻的主奴状态，一个少女的生命还有什么意义。</p>\n<p>无论人怎样感情用事，性爱总是各种最古老、最宿秽的结合和从属状态之一。歌颂性爱的诗人们大都是男子。女子们一向就知道有更好更高尚的东西。现在她们知之更确了。一个人的美丽纯洁的自由，是比任何性爱都可爱的。不过男子对于这点的看法太落后了，他们象狗似的坚要性的满足。</p>\n<p>可是女人不得不退让，男子是像孩子般的嘴馋的，他要什么女人便得给什么，否则他便孩子似的讨厌起来，暴躁起来把好事弄糟。但是个女人可以顺从男子，而不退让她内在的、自由的自我。那些高谈性爱的诗人和其他的人好象不大注意到这点。一个女人是可以有个男子，而不真正委身，让他支配的。反之，她可以利用这性爱去支配他。在性交的时候，她自己忍持着，让男子尽先尽情地发泄完了，然而她便可以把性交延长，而把他当作工具去满足她自己的性欲。</p>\n<p>当大战爆发，她们急忙回家的时候，姐妹俩都有了爱情的经验了。她们所以恋爱，全是因为对手是可以亲切地、热烈地谈心的男子。和真正聪明的青年男子，一点钟又一点钟地，一天又一天地，热情地谈话，这种惊人的、深刻的、意想不到的美妙，是她们在经验以前所不知道的，天国的诺言： “您将有可以谈心的男子。”还没有吐露，而这奇妙的诺言却在她们明白其意义之前实现了。</p>\n<p>在这些生动的、毫无隐讳的、亲密的谈心过后，性行为成为不可避免的了，那只好忍受。那象是一章的结尾，它本身也是令人情热的；那是肉体深处的一种奇特的、美妙的震颤，最后是一种自我决定的痉挛。宛如最后—个奋激的宇，和一段文字后一行表示题意中断的小点子一样。</p>\n<p>这姊妹俩在性的快感中，几乎在男性的奇异的权力下面屈服了。但是很快她们便自拨了，把性的快感看作一种感觉，而保持了她们的自由。至于她们的情人呢，因为感激她们所赐与的性的满足，便把灵魂交给她们。但是不久，他们又有点觉得得不尝失了。康妮的男子开始有点负气的样子，希尔达的对手也渐渐态度轻蔑起来。但是男子们就是这样的；忘恩负义而永不满足！你要他们的时候，他们憎恨你，因为你要他们。你不睬他们的时候，他们还是憎恨你，因为旁的什么理由。或者毫无理由。他们是不知足的孩子，无论得到什么，无论女子怎样，都不满意的。</p>\n<hr>\n<p>我从未写诗<br>只是上帝在我的骨节中<br>踩踏出音阶</p>\n<hr>\n<p>山中·夜</p>\n<p>夜半，群山只剩下轮廓<br>深刻了布谷的叫声<br>清风化成水，透过身体<br>留一注沁凉<br>稀释浓重的色泽<br>我站在天地中执笔<br>调和梦里与梦外<br>早晨推开窗<br>便碰了一鼻子绿</p>\n<hr>\n<p>绿的肌肉，绿的头发，还有银子般沁凉的眼睛。</p>\n<p>绿</p>\n<p>天空一色苹果绿，<br>天空是阳光下举着的绿色美酒，<br>月亮是其中一片金色的花瓣</p>\n<p>她睁开她的眼睛，绿莹莹地<br>眼波闪耀，象未绽的花蕾一般纯，<br>第一次，此刻第一次为人瞥见</p>\n<p>裘小龙 译</p>\n<p>绿</p>\n<p>曙光是苹果绿，<br>天空是绿酒在阳光中举起，<br>月亮是其间的一瓣金玉。</p>\n<p>她张开眼，绿芒<br>四射，明亮如花<br>初绽，首次展放。</p>\n<p>非马  译</p>\n<hr>\n<p>站在下风的方向，可以嗅出树叶，满林子树叶散播的死讯，以及整个中西部成熟后的体香。中西部的深秋，是一场弥月不息的野火，从浅黄到血红到暗赭到沉郁郁的浓栗，从爱荷华一直烧到俄亥俄，夜以继日日以继夜地维持好几十郡的灿烂。</p>\n<hr>\n<p>“我们喝的咖啡都是如夜晚般漆黑，像罪恶一样甜腻。”</p>\n<p>永远不要对上厕所、吃东西，或者闭上眼睛打半小时瞌睡的机会说‘不’。</p>\n<p>“喂，胡因还是穆因，随便什么名字都好，喂，你！”<br>黑鸟转过身，脑袋怀疑地偏在一侧，闪闪发光的眼珠子打量着他。<br>“说‘我下次再也不这样做了’，说！”影子说。<br>“日你妈。”乌鸦说。一人一鸟一起穿过树林，它再也没说一个字。</p>\n<p>“不是那个原因。女人能拯救她们的男人。而男人——像他这样的男人——他们的女人一旦死掉，他们也不会再活很长时间了。你会看到的。用不了多久，他开始变得神情恍惚，熟悉的一切都随着她的离开而离开。他开始对生命感到厌倦，整个人憔悴下去，他放弃对生的追求，然后，他死了。最后夺去他生命的也许是肺炎，也许是癌，或许是心脏停止跳动。等你上了年纪，所有的激情斗志都离你而去之后，你的生命也就结束了。”</p>\n<p>没有人是一座孤岛，多恩这样说过。但是他错了。如果我们不是孤岛，我们就会迷失自我，溺死在彼此的悲哀中。我们彼此隔绝孤立，隔绝于他人的悲哀之外。这是自我保护的天性。我们是一座座孤岛，其形状被所有故事一遍遍地反复描绘。孤岛的形状是不会改变的：一个人出生、长大，然后，因为这种或那种原因，死了。好了，其余细节你可以用你自己的经历来填充。你的故事和其他人的故事一样，没有任何独创内容，但也和其他人的人生一样独一无二。生活就像雪花，每个人的人生都是不同形状的雪花；生活就像豆荚中的豆子（你有没有见过豆荚中的豆子？我是说真正仔细地观察它们？近距离观察一分钟之后，你绝对不会把一颗豆子混同于另外一颗豆子），看似相同，但每一个都是独一无二的。<br>如果没有个体的存在，我们看见的只能是总体数字：死亡一千人，死亡十万人，“伤亡人数达到一百万”。但有了活生生的个体，统计数据就变成了真实存在的人——但这同样是谎言。数字仍旧是麻木的，没有任何意义，哪怕人们会因为它们而感到痛苦。看这个孩子吧，腹部肿胀，苍蝇叮满他的眼角，他瘦得皮包骨头。但是，有了这些，你就能知道他的名字、他的年龄、他的梦想和他的恐惧吗？你就能了解他的内心吗？如果你可以，那就让我们再对他的姐姐来一番解剖。此刻她就躺在他身后灼热的土地上，身体歪扭、肿胀。好吧，你同样能感受到她的内心。但除了这两姐弟之外，还有上千个孩子成为饥馑受害者，上千个孩子即将成为苍蝇们无数蠕动的蛆虫的食物。难道说只有那两姐弟重要，其他所有那些孩子就无足轻重吗？<br>我们画出一道隔离保护线，把他们的痛苦隔离在外，安全地待在属于自己的孤岛上，让他们的痛苦无法伤害我们。他们被我们包裹在一层光滑、安全、充满光泽的隔离膜中，仿佛珍珠一样，他们经历的苦难不会让我们的灵魂深处感受到任何真正的痛苦。<br>虚构的小说允许我们进入他们的大脑，通过他们的眼睛观看外面的世界。在故事中，我们会在作为主角的我们死亡之前停止阅读，或者体验毫无痛苦的“代理死亡”，然后跳出这个故事，在真实的世界中轻轻翻过新的一页，或者合上书，继续属于我们自己的生活。<br>自己的生活——和其他人生既相同、又不同的生活。</p>\n<hr>\n<p>马骁（Selkie）版：<br>那些强盛的力量和存在可能尚有留存……远古之时的遗存……早在人性之潮涌起前就已消隐的知觉意识……这些觉识在诗歌和传说中偶有闪现，它们常被冠以神祗、怪兽和各种神秘事物之名……</p>\n<p>――阿尔杰农・布莱克伍德</p>\n<ol>\n<li>陶塑中的恐怖</li>\n</ol>\n<p>我认为，人的思维缺乏将已知事物联系起来的能力，这是世上最仁慈的事了。人类居住在幽暗的海洋中名为无知的小岛上，这海洋浩淼无垠蕴藏无穷秘密，但我们并不应该航行过远，探究太深。迄今为止，各门类的科学都遵循着自己的道路发展，并未给人类带来多少危害；但总有一天这些分立的知识将融合在一起，揭示出世界真实的景象，以及人类可怖的处境――我们或是因这景象而疯狂，或是从光明中逃回那安全静寂的黑暗纪元去。</p>\n<p>黄公夏（wwmidia）版：<br>“可以想见，如此超凡的力量或存在未必灭绝殆尽……来自太古时代的幸存者……其自我意识，也许表现为某种形态，自人类出现以前很久就失落无踪……只有诗歌和传说以稍纵即逝的记忆加以临摹，并以林林总总的神祗、怪物和神话生物称之……”</p>\n<p>——阿尔杰农•布莱克伍德</p>\n<ol>\n<li>恐怖泥雕</li>\n</ol>\n<p>人类无法将脑内所有信息同时关联到一起，我想，这算是世间最大的仁慈了。我们身处恬然宁静的无知之岛，位于黑狞无边的大海中央，也并非注定要驶向远方一探究竟。各种科学在其所属方向竭力前行，虽然至今尚未对我们造成伤害，但终有一天，各不相关的知识彼此碰撞，会揭开那骇人的真相，点明我们在这片可怕光景中所处的方位。这份光明是如此恐怖而致命，我们若不想失心而疯，就必须远远逃开，躲进一个新的黑暗时代去寻找平和与安宁。</p>\n<hr>\n<p>与瑞娜相处就像在伤口上撒盐，让他想起自己开始在身上刺青时所放弃的一切。</p>\n<hr>\n<p>竹篱上 停留着 蜻蜓<br>玻璃瓶里插满 小小 森林<br>青春 嫩绿的很 鲜明<br>百叶窗 折射的 光影<br>像有着心事的 一张 表情<br>而你 低头拆信<br>想知道关于我的事情<br>青苔入镜 檐下风铃 摇晃曾经<br>回忆是 一行行无从<br>剪接的风景 爱始终年轻<br>而我听见 下雨的声音<br>想起你用唇语 说爱情<br>幸福也可以 很安静<br>我付出一直 很小心<br>终于听见 下雨的声音<br>于是我的世界 被吵醒<br>就怕情绪红 了眼睛<br>不舍的泪在 彼此的 脸上透明<br>百叶窗 折射的 光影<br>像有着心事的 一张 表情<br>而你 低头拆信<br>想知道关于我的事情<br>爱在过境 缘份不停 谁在担心<br>窗台上 滴落的雨滴<br>轻敲着伤心 凄美而动听<br>而我听见下 雨的声音<br>想起你用 唇语说爱情<br>热恋的时刻 最任性<br>不顾一切的 给约定<br>终于听见 下雨的声音<br>于是我的 世界被吵醒<br>发现你始终 很靠近<br>默默的陪在<br>我身边 态度坚定</p>\n<hr>\n<p>对爱情的渴望，对知识的追求，对人类苦难不可遏制的同情心，这三种纯洁而无比强烈的激情支配着我的一生。这三种激情，就像飓风一样，在深深的苦海上，肆意地把我吹来吹去，吹到濒临绝望的边缘。</p>\n<p>我寻求爱情，首先因为爱情给我带来狂喜，它如此强烈以致我经常愿意为了几小时的欢愉而牺牲生命中的其他一切。我寻求爱情，其次是因为爱情可以解除孤寂一—那是一颗震颤的心，在世界的边缘，俯瞰那冰冷死寂、深不可测的深渊。我寻求爱情，最后是因为在爱情的结合中，我看到圣徒和诗人们所想像的天堂景象的神秘缩影。这就是我所寻求的，虽然它对人生似乎过于美好，然而最终我还是得到了它。</p>\n<p>我以同样的热情寻求知识，我渴望了解人的心灵。我渴望知道星星为什么闪闪发光，我试图理解毕达哥拉斯的思想威力，即数字支配着万物流转。这方面我获得一些成就，然而并不多。</p>\n<p>爱情和知识，尽其可能地把我引上天堂，但是同情心总把我带回尘世。痛苦的呼唤经常在我心中回荡，饥饿的儿童，被压迫被折磨者，被儿女视为负担的无助的老人以及充满孤寂、贫穷和痛苦的整个世界，都是对人类应有生活的嘲讽。我渴望减轻这些不幸，但是我无能为力，而且我自己也深受其害。<br>这就是我的一生，我觉得值得为它活着。如果有机会的话，我还乐意再活一次。</p>\n<p>爱之于我，不是肌肤之亲，不是一蔬一饭，它是一种不死的欲望，是颓败生活中的英雄梦想。</p>\n<p>两样东西，人们越是经常持久对之凝神思索，它们就越是使内心充满常新而日增的惊奇和敬畏：我头上的星空和我心中的道德律。</p>\n<p>所有由这些感受（指恋爱）而得到的美好和甜蜜，都只是在一开始才具有其全部的强烈力量，但是随后就由于共同生活和家务操劳而逐渐变得日益迟钝，这时它就退化成为互相信赖的爱情；而这里面的伟大艺术就在于仍然能保持这些东西的充分的残余，从而无所谓的态度和厌倦都不会勾销欢愉的全部价值……</p>\n<hr>\n<p><strong> 以上均为摘录，抱歉没有精力去一一注明出处。如有侵权，请联系我删掉。 </strong></p>"},{"title":"从印象主义到蒸汽朋克","copyright":true,"date":"2018-05-24T06:23:56.000Z","comments":1,"_content":"\n### 摘要\n出现于工业革命期间的印象主义与出现于 20 世纪下半叶的蒸汽朋克文化，在审美旨趣的角度有着非常多的相似之处，这些相似之处包括：表现对象的相同，对工业和科技的赞美，对社会传统的反叛，对现实社会的乐观精神。除此之外，这两种截然不同的艺术形式在受众人群上存在着极大的重合，大都是受过高等教育，有一定的艺术修养，对未来充满美好憧憬的群体，他们所持有的往往是一种根植于新维多利亚主义的大众审美。抛开这些纷繁复杂的特征表象，我们会惊讶地发现，无论是印象派还是蒸汽朋克都存在着一个相同的精神内核 —— 一种机械唯物主义的积极乐观的进取精神，对科学的崇拜，相信技术的进步终将解决一切问题。\n\n**关键词：印象派、蒸汽朋克、科学崇拜、工业革命、机械唯物主义、机械美学**\n\n### 序言\n\n蒸汽朋克（Steampunk）是一种流行于 20 世纪 80 年代至 90 年代初的科幻题材，显著特征为故事都设定于一个蒸气科技树攀升到巅峰的架空世界。这类故事对距今已较遥远的工业革命时代的科技进行了极大的夸张，创建出一个与当今科技文明不同的、依赖于蒸汽动力装置的机械科技世界。从广义上讲，只要是将某种科技置于图腾地位，并将其力量无限扩大的文化，都可算作蒸汽朋克。[[1]](#1)\n\n蒸汽朋克通常以英国的维多利亚时代为背景，威廉·吉布森（William Gibson）的小说《差分机》，就是这个领域的第一本小说。虽然“蒸汽朋克”一词出现于 20 世纪下半叶，但从今天的观点来看，工业革命时代所产生的许多科幻小说其实都可以归入该类别。只不过当年人们的创作多是推崇科技的力量。而今天人们创作这类故事则多以对早期科技文化的怀旧与复古为目的。蒸汽朋克的怀旧风格与现今社会崇尚未来感设计的风尚形成鲜明对比。[[1]](#1)\n\n<!--more-->\n\n在后维多利亚时代，以蒸汽机、差分机为代表的工业革命产物以摧枯拉朽之势完成了对传统农业社会的改造；与此同时以透纳、康斯坦勃尔、莫奈等为代表的印象派先驱、创始人，借助当时最新的科技发展，以及伴随工业革命来到的海外殖民地而产生的相关经济结构，开始了在艺术领域对传统的表现手法的革新，在思想上开始追求与“学院派”观点不同的新价值观。（以及这里可以补充的是，价值观的内容）\n\n蒸汽朋克的主要表现对象为工业革命背景下的种种产物，这一点自不必多提。但值得注意的是，受到第二次工业革命的时代背景的影响，印象派画家往往也热衷于在绘画中描绘能反应当时时代精神的相关社会现象：新兴中产阶级的“闲暇”生活、喷涂着蒸汽快速前行的火车、轮船等等，都是他们所喜爱的题材。除此之外，蒸汽朋克与通常的科幻流派最大的一点不同是，通常的科幻流派在作品中往往警惕科技进步可能会带给我们的危害，这样的担忧在末世、赛博朋克等题材中尤为典型；但在蒸汽朋克中占据主导地位的是一种机械唯物主义的世界观，在那个牛顿和洛克的时代，科学仍然是古典的，世界图景是明晰的，时空还是平直的，上帝是不扔色子的。人们第一次可以不借助自然力量，而单凭借自己创造的机械来改造世界，人们的物质世界、认知的深度和广度都得到极大拓展，充满了对未来的美好遐想。生活在这样的世界中，人们崇拜科学和由科学带来的力量也就不足为奇了。\n\n在精神层面，蒸汽朋克的“朋克”一词本身就意味着拒绝对传统和权威的妥协，象征着一种标新立异、创造自由乌托邦的精神内核。[[4]](#4) 而印象派画家同样也是击碎了学院派传统的种种束缚，才得以产生出能够孕育现代艺术的土壤。从蒸汽朋克作品和印象派绘画的受众群体的角度来看，我们仍能看到一种令人惊异的相似性，他们以受过良好高等教育、并享有一定闲暇时间、对艺术存在一定的鉴赏力的群体为主。\n\n那么究竟什么是科学崇拜，所谓科学崇拜，是唯科学主义的外在表现形式。唯科学主义思想源自启蒙主义，成于实证主义，其思想内核是由牛顿爵士构建的“机械唯物主义世界观”。其拥护者往往以“知识就是力量”为口号，这里的“知识”通常被他们理解为科学。拥护科学的想法似乎没什么不好，但凡事都有一个度，一旦超过了这个度，想要用科学去解释世间的一切，就不免陷入了自视为真理的泥淖。在科学对世界的解构的过程中，由于其精确性、实用性、强大性，科学逐渐在人们心中接管了宗教曾经具有的那种神性，唯科学主义也因而变成了一种与科学精神推崇的理性怀疑精神相悖的“类宗教”。[[2]](#2)\n\n唯科学主义在普遍科学素养不太高的时代，有着其积极的意义。在这个目的论和决定论的机械唯物主义的世界里，世界乃至宇宙的图景都无比清晰，人与人之间的关系也被视作一种“力”的互动，在社会科学上，也有孔德试图用牛顿力学体系来构建“社会动力学”和“社会静力学”体系的尝试。这个世界并非暗淡无光，事实上由于世界图景的清晰，科学向人们承诺了一个科学终将解决一切问题的光明美好的未来。而且由于目的论的影响，各个阶层的人们都安于在庞大的“社会机械”中充当一个运转的齿轮。\n\n在我们下面的行文中，我们将分别从以上这些角度来论证，印象派和蒸汽朋克在科学崇拜这一精神内核上的共通性。\n\n### 对工业和科技的赞美\n\n蒸汽朋克有着专属于自己的美学形式，这个形式通常被称为新维多利亚美学，其主要的表现对象是多种饱含维多利亚风格的产物，包括交通工具、武器、建筑和服装等等。这些产物通常是第二次工业革命阶段的技术有机组合构造的更复杂更超脱的审美意象，往往造型古朴、体积庞大、结构复杂且暴露在外。以蒸汽锅炉为动力，螺旋桨、齿轮、活塞、轴承、旋钮、管道共同组成眼花缭乱又极具美感的连锁装置，其令人惊异的想象力总让人联想到“阿鲁贝戈德堡机”。因为蒸汽朋克时代所有的动力都是靠纯机械装置将蒸汽产生的动力输送到动力机关来做功的，因为机械自重过大和摩擦力还有热传递等原因，蒸汽产生的动力在机械装置传导的过程中大量损耗，能量转化效率极低，但是也造就了蒸汽朋克世界观当中各种独有暴力美感的巨大机械造型。[[3]](#3) 一经启动，锅炉中升起腾腾热气，活塞错落有致地起伏，精准咬合的大小齿轮互相带动旋转，那是一幅大工业时代盛世图景的完美再现。\n\n这些工艺上具有时代特征的表现对象，在各类文艺作品中都常常见到：从电子游戏《教团 1886》特斯拉电弧枪、宫崎骏的动漫电影《风之谷》中的王虫也可视作一种异化的机械、《天空之城》中的类人机械人和漂浮之城、《哈尔的移动城堡》那座典型的蒸汽朋克风格的移动城堡等，无不洋溢着对机械质感的强烈赞美。\n![特斯拉电弧枪](TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg)\n\n> 关于《教团 1886》中各种蒸汽朋克风格武器介绍，可参见网友 tekkenman 整理的资料。\n> [『《教团 1886》中的一些特殊武器装备预热以及与当时现实中科技对比』](http://bbs.a9vg.com/thread-4446281-1-1.html)\n\n在一个特殊的科幻迷群体 —— “多炮塔神教”中，还存在着“多铆蒸刚”的说法。所谓“多铆蒸刚”，指的是“多炮塔，铆钉连接，蒸汽动力，刚性悬挂”，在他们眼中“多就是美，大就是好，多属于蒸汽时代浪漫情怀的一种体现。”。[[4]](#4)\n总的来说，蒸汽朋克的机器美学集中体现了后现代艺术的精髓，百无禁忌，任想象驰骋，但又有一定规律可循，呈现一望即知的视觉风格。[[5]](#5)\n\n印象派画家同样热衷于表现近代工业文明。有三幅画，非常典型地表明了印象派画家的审美取向：透纳的《被拖去解体的战舰无畏号》、《雨，蒸汽和速度》，莫奈的《圣·拉扎尔火车站》。\n\n![被拖去解体的战舰无畏号](The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg)\n《被拖去解体的战舰无畏号》意在表现一艘巨大的老式木质风帆战舰被对比起来显得渺小的蒸汽动力船拖去船坞解体，这艘战舰正是在奠定英国海上霸权地位的特拉法海战（the Battle of Trafalgar）中，营救了纳尔逊指挥的胜利号旗舰，并俘获了两艘敌舰，立下了赫赫战功的“战舰无畏号”（The Fighting Temeraire）。\n画家选取的这戏剧性的一幕充分地显示了一个辉煌时代的落幕。远方的太阳看不出是日出还是日落，更像是画家的有意为之，它既是象征着传统社会的木质战船的落日，又是冉冉升起的工业化时代的新日。油画中可以看到，巨大的无畏号在汽轮喷吐出的蒸汽中仿佛在雾霭里一般朦胧，桅杆上的帆紧紧收着，渐渐远离平静的海面，一个时代结束了，古老的荣耀与激情如今被新的一页覆盖。小小汽船拖动巨大的木质战舰去解体，也显示了工业革命和科技的力量。画面整体所使用的暖色调，也又一次强调了画家所想表达的积极乐观的主旨。\n\n![雨、蒸汽和速度](Rain_Steam_and_Speed_the_Great_Western_Railway.jpg)\n在《雨、蒸汽和速度》中表现出大自然和两大技术发明（铁路和高架桥）之间的强烈对比。铁路和高架桥这两个人造的力量使自然景色大大改观，透纳看到并描绘了它们所有震撼人心的效果。雨水滴落的方向仿佛被机械强大的力量所扭转，这似乎象征着人类通过机械的力量对自然的征服。火车头前方有一只小野兔在奔跑，既象征着速度，又对极尽烘托出了了雨中飞驰的火车那磅礴的气势。\n\n![圣·拉扎尔火车站](La_Gare_Saint-Lazare_-_Claude_Monet.jpg)\n随着城市化进程的加快，工程师对伦敦、巴黎等大城市进行了大刀阔斧的改造，因而出现了大量全新的城市新景观。莫奈的《圣·拉扎尔火车站》，即成功地表现了现代生活最典型的景象。那巨大的停车场，有玻璃的屋顶，沉重的火车头发出暗沉沉的水蒸汽，进进出出的列车、人群，背景中澄澈的天空和蒸汽腾腾的机器之间的对照———所有这一切供给他以不平常的动人题材，谱写了一首工业文明的赞美诗。可见，当时的印象派画家不仅仅是利用刚出现不久的道路和交通手段外出作画，更是将它们看作是值得去画的创作题材，甚至比传统的作画题材更为重要，将其搬上画面，描绘出由于工业化而“变得更美的风景”，用通俗的画面让人们了解了工业化。\n\n### 对现代事物及宗教的反叛\n\n如果说印象派画家是通过对传统的反叛而通向未来的话，那么蒸汽朋克则是对后现代美学的反叛而回到过去。他们有着不同的起点，不同的手段，但最终却达至了相同的终点。\n\n朋克精神本质在于超越社会准则，反对除朋克外的一切，有反社会无政府主义的倾向，通常被人视作叛逆的代名词。但蒸汽朋克的反叛情绪显然要温和得多，并没有通常的科幻作品中那种科技发达、物质文明泛滥、世界被机器主宰、人际关系冷漠疏离、精神迷惘空虚的反乌托邦情绪。蒸汽朋克非但罕见阴郁低落的基调，而且往往充满了催人振奋、积极向上的情绪，这与维多利亚时代的科技乐观主义是一脉相承的。[[5]](#5)\n\n有人提出了一个蒸汽朋克理念 —— “异质世界”。蒸汽朋克作品中叛逆因素的存在，更多的是为了切合架空世界的后现代表现形式。它常拼凑出一个虚幻，独立、区别于古往今来的任何一个时代的面貌，构成独一无二的异质世界。朋克世界中强调反抗和独立，总有种打破旧世界的味道。再生艺术是思维构成的自我演绎与不断完善，是艺术思维的超越性体现，也是艺术生命力的延续和变革发展。蒸汽朋克同样如此，过去与未来、想象与现实、魔幻与科学的元素互相并存，反抗并独立的延续着。它有极大的想象力，构造的是一个超现实的幻想世界，将蒸汽的力量无限扩大化。蒸汽朋克作品的主要内容就是把第一次工业革命的技术形象有机组合起来，用 19 世纪的科技实现 21 世纪当代科学产物，去构造更复杂更超脱的意象，以及这一事实造成的反差和对比给人带来的震撼力。[[6]](#6)\n\n作为后现代艺术的一种，蒸汽朋克同样也质疑传统的元叙事作品的合法性，这种质疑随着元叙事的基础 --- 堂皇话语环境 --- 的终结而达到顶峰。传统的元叙事作品遵循的总是以英雄为主视角的堂而皇之的叙述模式，而后现代作品倾向于将堂皇叙事的社会的语境（如圣贤英雄、解放拯救、光辉的胜利、壮丽的远景等）散入叙事语言的迷雾中，使观众对堂而皇之的历史言论，或历史上的伟大“推动者”和伟大的“主题”产生怀疑，并以平凡的小人物、平凡的主题、平凡而琐碎的故事取而代之或利用堂皇叙事与平凡话语间的杂揉、拼贴和交替衍生来反衬、嘲弄元叙事的理性偏激。[[7]](#7)\n\n文艺复兴时期是一个重要的转折点，达芬奇以及丢勒等艺术家对飞机、潜水艇等人造机械装置的热爱已经远远超过了工具研制的层面，而上升到了审美层面上，他们似乎要穷尽自己的脑力和心力来与上帝抗衡。通过否定上帝，肯定自身，人类对自身的肯定也随之带来了对自身造物的肯定。[[8]](#8)\n\n如果说蒸汽朋克是对反直觉的现代事物的反叛（详见下文的古典机械美学），那么印象派的反叛则是多角度、更深刻的。\n\n科学技术的发展为印象派的诞生产生了巨大的影响：照相技术的出现对传统写实绘画纪实功能的消解；光学研究的新成果促使艺术家重新审视光线对物体色彩的影响；色彩研究的新成果让艺术家在画面色彩表现技巧上有了新突破；交通工具的发展为作画者的出行带来方便；颜料管的发明节约了工时，也使得户外作画成为可能；伴随对日本的经济殖民，日本浮世绘的传入引发了画家技法和思想上的思考。[[9]](#9)\n\n传统的写实主义绘画，承担着为贵族记录形象和对宗教、社会事件说教的任务，画面写实技术精湛性的攀比和社会服务功能对一幅作品的好坏起到了决定性的作用。但随着摄影技术的发展和普及，当时的艺术家发现他们在耗尽全部心血完成一幅写实作品的时候，照相机在瞬间就能够记录或超越写实绘画的真实效果，写实绘画失去了记录功能的优势，这种危机感促使艺术家放弃了照片式的古典画法，转而寻找绘画艺术表现形式的新途径。[[9]](#9)\n\n过去古典写实主义画家认为任何物体的固有色都是一成不变的，艺术家们完全按照物体的固有色和棕褐色的调子去观察和习惯性表现对象。牛顿、托马斯·杨等科学家建立了新的光学理论，艺术家们吸收并在自己的作品中实践了这些观念———世界万物并没有什么固有色，色彩的根源在于光，于是选取唯一真实的元素———光来诠释自然。[[10]](#10)\n\n如今看来毫不起眼的颜料管的发明，事实上从三个方面极大地影响了艺术创作，曾经油画颜料无论是制作还是保存都繁琐异常。耗费在颜色调配的时间，往往数倍于作品的真正绘制的时间。而且这一点往往局限了画家作画的场地只能是在室内。最后一点，颜料管的发明，也为画师尝试使用不加调和的色彩进行作画提供了便利。如我们所知，印象派有两大主张正是“到户外去作画”、“用不加调和的色彩去表现光”。\n\n色彩的研究也有了一些新的突破，人们发现不同色彩混织一起时，从一定距离的远处看就在人的视觉中形成了这两种颜色的混合色。以及日本浮世绘的传入，使得画家们开始尝试像东方艺术一样使用单一色彩来进行单线平涂，不再追求使用精心调和的色彩来进行绘画。浮世绘带来的另一个影响是，画家用东方绘画中“步步移，面面观”的透视代替了原先的单点透视。\n\n在此之前的古典画法的主要题材要么是将相王侯、要么是宗教神话，不追求对自然风光的描绘，不需要也不能在室外作画。印象派画家的一个重大主张就是到户外去作画，而铁路交通网的覆盖，为画家们能够便利地到郊区作画提供了便利。新兴的百货商店、林荫大道、公园、咖啡馆等建筑不仅为人们提供了全新的娱乐场所，也激发了艺术家对现实生活的关注，现代景观的出现吸引了印象派画家走出画室，探索户外创作之路。不仅是对“室内作画传统”的反叛，也是对作画主题的反叛。\n\n### 乐观精神 - 人文主义，机械唯物主义\n\n蒸汽朋克的作品中弥漫着浪漫主义乐观精神，工业的发展一定程度解放了劳动力，自然科学的发展破除了迷信与宗教集权政治，文化逐渐开明，人们充满了对世界的好奇心。人们对科技的发展持乐观态度。它的这种魅力是人们对乌托邦的向往。人类刚刚拥有接近神的力量，踏出解开自然奥秘的第一步。这种科技带来的神力让人们从数千年以来在繁重的体力劳动和贫乏的物质限制中获得解脱，让人们从束缚思想的封建禁锢中解放出。落后的势力和人类自诞生以来的人性缺陷又同时存在，先进与落后并存，先进与落后抗争，人们开动着巨大而笨拙的机器飞奔在文明发展的道路上，无情的碾压着旧事物，不断的探索，不断的创新，用自己的智慧谱写着工业文明辉煌的篇章，徜徉在探索新世界的浪漫主义思想中。\n\n如前文所说，蒸汽朋克的哲学本质是一种机械唯物主义。机械唯物主义的世界观之下，自然、社会乃至于组成社会的一个个基本单位 —— 人，都是机械。拉美特利就宣称：“人是机器”。[[11]](#11) 通过将世间的一切都视作平等的机械，将曾经高于人类的自然，拉到了与人类平等的地位上，从理论上为征服自然提供了法理依据。在哲学上，牛顿爵士、伏尔泰等人所创立的自然神论，认为上帝创造自然但不干涉自然，只是在自然之外默默观察，通过将上帝置于自然之外的“太上皇”地位，从而架空了上帝的权利，人的意志得以彰显。\n\n在这个机械的世界当中，所有的一切都如同钟表一般精准。无论身处社会的哪一个阶级，只要你遵从机械说明书一样的程式，那么你的未来也会如同机械一般精准而清晰。而科学承诺将会解决这世界上的一切问题，所以你的未来也会迈向一个光明的未来。\n\n蒸汽朋克代表的是一种机械之美，代表的是人类在征服自然过程中的一种重大胜利，代表了现代文明的开端，永不放弃的奋斗意志，即使在黑暗中也要等待光明的到来的念头让它的主旨充满了乐观精神。\n\n印象派作品中的乐观精神并不直接，事实上印象派画家也会描绘当时社会中的不幸事件，例如《运输船遇难》，但这些作品不占印象派作品的主流。印象派画家最喜欢的题材大多与当时中产阶级的生活方式和情趣相关。马奈的《草地上的午餐》、莫奈的阿尔让特伊沿岸（中产阶住宅区）风光、雷诺阿《游艇上的午餐》、德加的芭蕾舞演员、修拉的《大碗岛的星期日下午》等等，无不以中产阶级 “闲暇”，对世俗生活的享乐为主题。\n\n19 世纪后期的印象主义者们是典型的享乐主义者。19 世纪法国政治的变动、普法战争时期的颠沛流离，这些苦难的经历并没有在印象主义者的笔下留下痕迹，他们画中的场景一如他们眼中的阳光一般灿烂。在他们的手中，绘画不再承载道德说教的任务，只是快乐单纯地享受来自周遭视觉景象的快乐。在《视觉艺术中的现代主义和大众文化》一文中用“闲暇”来形容印象派绘画中所表现的中产阶级的生活，印象派画家通过画面中郊游、赛马、歌舞表演、咖啡厅等题材来表现出中产阶级的闲情逸致。这种有一定程度的文化和固定职业的白领阶层的闲暇生活不同于古典主义的理想式贵族生活，也不同于荷兰小画派的乡村情调的市井生活；印象派笔下的中产阶级闲暇生活与大众消费文化有关，他们的生活、消遣方式是他们在紧张的工作之余处理对通俗文化的消费。[[12]](#12)\n\n如果说文艺复兴是人的主体意识（人性）的觉醒的话（在科学上表现为科学作为一支独立的力量而出现和存在，不再是神学的婢女；在艺术上表现为从“以神为中心”转向“以人为中心” ), 那么，印象派和相对论的诞生，则再一次深刻地反思了“神中心”的残存。这在科学上表现为对“独立于人而存在的绝对时间——空间”——这是神的认识能力的范围——的批判；在艺术上表现为对“完全地表现客观物体的样子”——神的认识能力——的批判。因此印象派和相对论进一步大大深化了“人中心”这一主题。[[10]](#10) 正是因为由“以神为中心”转向“以人为中心”而招致的人文主义精神，人们重新从基督教那自我指责的赎罪意识中挣脱了出来。人间不再是急于摆脱的不名一文的“尘世”，转而成为了有待于建设的天堂。而且路德和加尔文的新教改革运动，从另一个侧面又加深了这一观点：“天职”描述人们不是要以苦修、超越世俗道德的禁欲主义方式来追求上帝的应许，反而应该在俗世中，完成个人在其所处职业位置上的工作责任和义务。[[13]](#13)\n\n### 受众人群的相似审美观\n\n蒸汽朋克完美契合了工业社会普通人审美情趣的风格。 这类风格之所以有独特魅力，是因为在技术发展的高速和大众审美观念的惯性之间找到了平衡：新型机械工程师们喜爱的，那种由管道电线煤炉仪表板堆砌出来的，粗糙但准确的美感；上流社会贵族们钟爱的，那种下午茶和舞会组织起来的细密精致的美感；商人市民阶层追求的，普通实用日常生活的朴素美感。\n\n机器美学，正是这个机器主宰一切的时代的产物。机器之所以美，并不仅仅因为其实用功能，也不只因为其形式结构，更重要的是因为其在心理层面上的人造物意义。古典美学研究的是美的终极意义，那个美是虚幻的，而机器美学所研究的美是实在的，是具象的，它是被人所创造也为人所感知的，这显然是一种更加真实朴素、毫无修饰的美。正如本雅明所言，机械复制时代的艺术和文化是大众文化，而从某种意义上讲，机械美学也是一种大众美学，它几乎无处不在，尤其是在 19 世纪以后纷纷出现的那些蒸汽机、汽车、火车头和巨型轮船乃至于翱翔的飞机，它们一方面以前所未见的奇特外形刺激着人们，另一方面却频频出现在人们身旁并迅速改变着我们的生活方式。[[8]](#8)\n\n古典机器美学是符合直觉的。这种直觉是一种机能化的视角，古典式机械的设计，我们想要增加动力就加一个锅炉，想要一个侧向的驱动力，齿轮组，扭杆组可以很直觉的形成模块，我们可以依靠直觉粗暴地构成一个可以运作的有机体。而这种机能主义，就如同这个技术变革刚解体原秩序，新秩序刚形成的社会生态一样，我们在解决一个社会问题，只需要建构一个符合直觉和普遍认识的机制来解决就行了，社会生态还在初期的建设阶段，而这一切是符合直觉的，也是从经验主义学理传承下来对于历史语境的推崇。故而，在这种指导下，社会的前景，科学技术的发展是有序的，可认知的，在我们经验里面也是可以明确的，这里没有人类本身之外的不确定因素，也没有社会结构的离散化，我们可以将一系列自然问题可以归元到我们的经验中和逻辑之中，来做一个判断，最后还原到技术上来解决。整个社会生态就如同一个精密设计的，符合直觉和经验的有机体，各模块（阶级，共同体）之间被分割放置，各司其职，就如同古典式机器一样。[[15]](#15) 这就是蒸汽朋克世界观给我们的美感。\n\n与蒸汽朋克类似，印象派画家同样追求符合人的直觉的视觉感官体验，对于他们来说，美得毫无瑕疵的古典画作并不是真实，那是只存在与柏拉图“理念世界”的产物。真实是你用肉眼看到的亲身体验，是笼罩在牛奶般薄雾中的“日出·印象”，是市民阶级中熟悉的日常生活中点点滴滴。有几位印象派画家比较典型：\n\n莫奈笔下的巴黎街景记录性强，在风格上类似现在的城市景观派；他所有的描绘巴黎街景的作品都是对巴黎各大街道的一种真实写照。而雷诺阿与他们不同，虽然雷诺阿大部分作品是描绘女人的，描绘巴黎街头的作品很少，但是他描绘的巴黎街头总是带有欢愉的社交氛围。\n\n印象派画家中比较特殊的一位——卡耶博特，擅于表现和巴黎现代生活息息相关的作品，尤其是表现巴黎街头的景象。虽然受印象派影响，但是他不是完全模仿印象派的创作方法而是进行实验性的探索，形成与众不同的风格。他希望最大限度的表现出这条街道在某一瞬间的真实，所以他对此时街道上的每一个事物包括细节都细致的描绘。卡耶博特的创作风格尤其是在构图上受到摄影的巨大影响，他所表现的这一场景就像摄影师在下雨天的某条巴黎街道偶然拍下的一个场景。[[12]](#12)\n\n### 总结\n\n而蒸汽朋克的核心魅力，或者说是比较核心的那部分科幻迷看重的东西，应该是过去时代的科学精神和社会精神。19 世纪是一个机械唯物主义泛滥的时代，不仅自然界是机械性的，人类历史也是线性的，新东西一定比老东西强，明天一定比昨天好，崇拜科学，科学只要无限发展下去就一定会掌握整个宇宙的真理。蒸汽朋克通过把故事背景调整到 19 世纪，来复苏 19 世纪的“纯洁的科学精神”，缓解一下现代科幻迷遇到的信仰危机。而印象派虽然不以科学为表现主体，它对科学的崇拜是隐性的，但受时代背景影响，一脉相承于文艺复兴中的人文主义乐观精神，以及对工业革命将现实社会改造得更加美好的颂扬都得到了充分的体现。\n\n### 引用\n<span id = \"1\"> [1] 维基百科 : https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B </span>\n<span id = \"2\"> [2] 科学崇拜和合理性怀疑_高知识人群邪教受害者思想根源初探_亓馈言 </span>\n<span id = \"3\"> [3] 知乎 首先说一下蒸汽朋克的时代背景 </span>\n<span id = \"4\"> [4] https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99 </span>\n<span id = \"5\"> [5] 果壳 什么是真正的蒸汽朋克？方聿南 </span>\n<span id = \"6\"> [6] 从蒸汽朋克看城市再生创意的必要性_魏安琪 </span>\n<span id = \"7\"> [7] 维基百科 https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89 </span>\n<span id = \"8\"> [8] 蒸汽朋克电影与机器美学 </span>\n<span id = \"9\"> [9] 自然科学新成果对印象派绘画的影响_曹跻圣 </span>\n<span id = \"10\"> [10] 印象派绘画与狭义相对论物理学比较研究_杨正瓴 </span>\n<span id = \"11\"> [11] 拉美特利 《人是机器》 </span>\n<span id = \"12\"> [12] 印象画派的历史发展及审美特征_李怀鹏 </span>\n<span id = \"13\"> [13] 马克思·韦伯 新教伦理与资本主义精神 </span>\n<span id = \"14\"> [14] 知乎 作者：acel rovsion 链接：https://www.zhihu.com/question/21722005/answer/34906841 </span>\n","source":"_posts/From-Impressionism-to-Steampunk.md","raw":"---\ntitle: 从印象主义到蒸汽朋克\ncopyright: true\ndate: 2018-05-24 14:23:56\ntags: [art]\ncomments:\n---\n\n### 摘要\n出现于工业革命期间的印象主义与出现于 20 世纪下半叶的蒸汽朋克文化，在审美旨趣的角度有着非常多的相似之处，这些相似之处包括：表现对象的相同，对工业和科技的赞美，对社会传统的反叛，对现实社会的乐观精神。除此之外，这两种截然不同的艺术形式在受众人群上存在着极大的重合，大都是受过高等教育，有一定的艺术修养，对未来充满美好憧憬的群体，他们所持有的往往是一种根植于新维多利亚主义的大众审美。抛开这些纷繁复杂的特征表象，我们会惊讶地发现，无论是印象派还是蒸汽朋克都存在着一个相同的精神内核 —— 一种机械唯物主义的积极乐观的进取精神，对科学的崇拜，相信技术的进步终将解决一切问题。\n\n**关键词：印象派、蒸汽朋克、科学崇拜、工业革命、机械唯物主义、机械美学**\n\n### 序言\n\n蒸汽朋克（Steampunk）是一种流行于 20 世纪 80 年代至 90 年代初的科幻题材，显著特征为故事都设定于一个蒸气科技树攀升到巅峰的架空世界。这类故事对距今已较遥远的工业革命时代的科技进行了极大的夸张，创建出一个与当今科技文明不同的、依赖于蒸汽动力装置的机械科技世界。从广义上讲，只要是将某种科技置于图腾地位，并将其力量无限扩大的文化，都可算作蒸汽朋克。[[1]](#1)\n\n蒸汽朋克通常以英国的维多利亚时代为背景，威廉·吉布森（William Gibson）的小说《差分机》，就是这个领域的第一本小说。虽然“蒸汽朋克”一词出现于 20 世纪下半叶，但从今天的观点来看，工业革命时代所产生的许多科幻小说其实都可以归入该类别。只不过当年人们的创作多是推崇科技的力量。而今天人们创作这类故事则多以对早期科技文化的怀旧与复古为目的。蒸汽朋克的怀旧风格与现今社会崇尚未来感设计的风尚形成鲜明对比。[[1]](#1)\n\n<!--more-->\n\n在后维多利亚时代，以蒸汽机、差分机为代表的工业革命产物以摧枯拉朽之势完成了对传统农业社会的改造；与此同时以透纳、康斯坦勃尔、莫奈等为代表的印象派先驱、创始人，借助当时最新的科技发展，以及伴随工业革命来到的海外殖民地而产生的相关经济结构，开始了在艺术领域对传统的表现手法的革新，在思想上开始追求与“学院派”观点不同的新价值观。（以及这里可以补充的是，价值观的内容）\n\n蒸汽朋克的主要表现对象为工业革命背景下的种种产物，这一点自不必多提。但值得注意的是，受到第二次工业革命的时代背景的影响，印象派画家往往也热衷于在绘画中描绘能反应当时时代精神的相关社会现象：新兴中产阶级的“闲暇”生活、喷涂着蒸汽快速前行的火车、轮船等等，都是他们所喜爱的题材。除此之外，蒸汽朋克与通常的科幻流派最大的一点不同是，通常的科幻流派在作品中往往警惕科技进步可能会带给我们的危害，这样的担忧在末世、赛博朋克等题材中尤为典型；但在蒸汽朋克中占据主导地位的是一种机械唯物主义的世界观，在那个牛顿和洛克的时代，科学仍然是古典的，世界图景是明晰的，时空还是平直的，上帝是不扔色子的。人们第一次可以不借助自然力量，而单凭借自己创造的机械来改造世界，人们的物质世界、认知的深度和广度都得到极大拓展，充满了对未来的美好遐想。生活在这样的世界中，人们崇拜科学和由科学带来的力量也就不足为奇了。\n\n在精神层面，蒸汽朋克的“朋克”一词本身就意味着拒绝对传统和权威的妥协，象征着一种标新立异、创造自由乌托邦的精神内核。[[4]](#4) 而印象派画家同样也是击碎了学院派传统的种种束缚，才得以产生出能够孕育现代艺术的土壤。从蒸汽朋克作品和印象派绘画的受众群体的角度来看，我们仍能看到一种令人惊异的相似性，他们以受过良好高等教育、并享有一定闲暇时间、对艺术存在一定的鉴赏力的群体为主。\n\n那么究竟什么是科学崇拜，所谓科学崇拜，是唯科学主义的外在表现形式。唯科学主义思想源自启蒙主义，成于实证主义，其思想内核是由牛顿爵士构建的“机械唯物主义世界观”。其拥护者往往以“知识就是力量”为口号，这里的“知识”通常被他们理解为科学。拥护科学的想法似乎没什么不好，但凡事都有一个度，一旦超过了这个度，想要用科学去解释世间的一切，就不免陷入了自视为真理的泥淖。在科学对世界的解构的过程中，由于其精确性、实用性、强大性，科学逐渐在人们心中接管了宗教曾经具有的那种神性，唯科学主义也因而变成了一种与科学精神推崇的理性怀疑精神相悖的“类宗教”。[[2]](#2)\n\n唯科学主义在普遍科学素养不太高的时代，有着其积极的意义。在这个目的论和决定论的机械唯物主义的世界里，世界乃至宇宙的图景都无比清晰，人与人之间的关系也被视作一种“力”的互动，在社会科学上，也有孔德试图用牛顿力学体系来构建“社会动力学”和“社会静力学”体系的尝试。这个世界并非暗淡无光，事实上由于世界图景的清晰，科学向人们承诺了一个科学终将解决一切问题的光明美好的未来。而且由于目的论的影响，各个阶层的人们都安于在庞大的“社会机械”中充当一个运转的齿轮。\n\n在我们下面的行文中，我们将分别从以上这些角度来论证，印象派和蒸汽朋克在科学崇拜这一精神内核上的共通性。\n\n### 对工业和科技的赞美\n\n蒸汽朋克有着专属于自己的美学形式，这个形式通常被称为新维多利亚美学，其主要的表现对象是多种饱含维多利亚风格的产物，包括交通工具、武器、建筑和服装等等。这些产物通常是第二次工业革命阶段的技术有机组合构造的更复杂更超脱的审美意象，往往造型古朴、体积庞大、结构复杂且暴露在外。以蒸汽锅炉为动力，螺旋桨、齿轮、活塞、轴承、旋钮、管道共同组成眼花缭乱又极具美感的连锁装置，其令人惊异的想象力总让人联想到“阿鲁贝戈德堡机”。因为蒸汽朋克时代所有的动力都是靠纯机械装置将蒸汽产生的动力输送到动力机关来做功的，因为机械自重过大和摩擦力还有热传递等原因，蒸汽产生的动力在机械装置传导的过程中大量损耗，能量转化效率极低，但是也造就了蒸汽朋克世界观当中各种独有暴力美感的巨大机械造型。[[3]](#3) 一经启动，锅炉中升起腾腾热气，活塞错落有致地起伏，精准咬合的大小齿轮互相带动旋转，那是一幅大工业时代盛世图景的完美再现。\n\n这些工艺上具有时代特征的表现对象，在各类文艺作品中都常常见到：从电子游戏《教团 1886》特斯拉电弧枪、宫崎骏的动漫电影《风之谷》中的王虫也可视作一种异化的机械、《天空之城》中的类人机械人和漂浮之城、《哈尔的移动城堡》那座典型的蒸汽朋克风格的移动城堡等，无不洋溢着对机械质感的强烈赞美。\n![特斯拉电弧枪](TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg)\n\n> 关于《教团 1886》中各种蒸汽朋克风格武器介绍，可参见网友 tekkenman 整理的资料。\n> [『《教团 1886》中的一些特殊武器装备预热以及与当时现实中科技对比』](http://bbs.a9vg.com/thread-4446281-1-1.html)\n\n在一个特殊的科幻迷群体 —— “多炮塔神教”中，还存在着“多铆蒸刚”的说法。所谓“多铆蒸刚”，指的是“多炮塔，铆钉连接，蒸汽动力，刚性悬挂”，在他们眼中“多就是美，大就是好，多属于蒸汽时代浪漫情怀的一种体现。”。[[4]](#4)\n总的来说，蒸汽朋克的机器美学集中体现了后现代艺术的精髓，百无禁忌，任想象驰骋，但又有一定规律可循，呈现一望即知的视觉风格。[[5]](#5)\n\n印象派画家同样热衷于表现近代工业文明。有三幅画，非常典型地表明了印象派画家的审美取向：透纳的《被拖去解体的战舰无畏号》、《雨，蒸汽和速度》，莫奈的《圣·拉扎尔火车站》。\n\n![被拖去解体的战舰无畏号](The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg)\n《被拖去解体的战舰无畏号》意在表现一艘巨大的老式木质风帆战舰被对比起来显得渺小的蒸汽动力船拖去船坞解体，这艘战舰正是在奠定英国海上霸权地位的特拉法海战（the Battle of Trafalgar）中，营救了纳尔逊指挥的胜利号旗舰，并俘获了两艘敌舰，立下了赫赫战功的“战舰无畏号”（The Fighting Temeraire）。\n画家选取的这戏剧性的一幕充分地显示了一个辉煌时代的落幕。远方的太阳看不出是日出还是日落，更像是画家的有意为之，它既是象征着传统社会的木质战船的落日，又是冉冉升起的工业化时代的新日。油画中可以看到，巨大的无畏号在汽轮喷吐出的蒸汽中仿佛在雾霭里一般朦胧，桅杆上的帆紧紧收着，渐渐远离平静的海面，一个时代结束了，古老的荣耀与激情如今被新的一页覆盖。小小汽船拖动巨大的木质战舰去解体，也显示了工业革命和科技的力量。画面整体所使用的暖色调，也又一次强调了画家所想表达的积极乐观的主旨。\n\n![雨、蒸汽和速度](Rain_Steam_and_Speed_the_Great_Western_Railway.jpg)\n在《雨、蒸汽和速度》中表现出大自然和两大技术发明（铁路和高架桥）之间的强烈对比。铁路和高架桥这两个人造的力量使自然景色大大改观，透纳看到并描绘了它们所有震撼人心的效果。雨水滴落的方向仿佛被机械强大的力量所扭转，这似乎象征着人类通过机械的力量对自然的征服。火车头前方有一只小野兔在奔跑，既象征着速度，又对极尽烘托出了了雨中飞驰的火车那磅礴的气势。\n\n![圣·拉扎尔火车站](La_Gare_Saint-Lazare_-_Claude_Monet.jpg)\n随着城市化进程的加快，工程师对伦敦、巴黎等大城市进行了大刀阔斧的改造，因而出现了大量全新的城市新景观。莫奈的《圣·拉扎尔火车站》，即成功地表现了现代生活最典型的景象。那巨大的停车场，有玻璃的屋顶，沉重的火车头发出暗沉沉的水蒸汽，进进出出的列车、人群，背景中澄澈的天空和蒸汽腾腾的机器之间的对照———所有这一切供给他以不平常的动人题材，谱写了一首工业文明的赞美诗。可见，当时的印象派画家不仅仅是利用刚出现不久的道路和交通手段外出作画，更是将它们看作是值得去画的创作题材，甚至比传统的作画题材更为重要，将其搬上画面，描绘出由于工业化而“变得更美的风景”，用通俗的画面让人们了解了工业化。\n\n### 对现代事物及宗教的反叛\n\n如果说印象派画家是通过对传统的反叛而通向未来的话，那么蒸汽朋克则是对后现代美学的反叛而回到过去。他们有着不同的起点，不同的手段，但最终却达至了相同的终点。\n\n朋克精神本质在于超越社会准则，反对除朋克外的一切，有反社会无政府主义的倾向，通常被人视作叛逆的代名词。但蒸汽朋克的反叛情绪显然要温和得多，并没有通常的科幻作品中那种科技发达、物质文明泛滥、世界被机器主宰、人际关系冷漠疏离、精神迷惘空虚的反乌托邦情绪。蒸汽朋克非但罕见阴郁低落的基调，而且往往充满了催人振奋、积极向上的情绪，这与维多利亚时代的科技乐观主义是一脉相承的。[[5]](#5)\n\n有人提出了一个蒸汽朋克理念 —— “异质世界”。蒸汽朋克作品中叛逆因素的存在，更多的是为了切合架空世界的后现代表现形式。它常拼凑出一个虚幻，独立、区别于古往今来的任何一个时代的面貌，构成独一无二的异质世界。朋克世界中强调反抗和独立，总有种打破旧世界的味道。再生艺术是思维构成的自我演绎与不断完善，是艺术思维的超越性体现，也是艺术生命力的延续和变革发展。蒸汽朋克同样如此，过去与未来、想象与现实、魔幻与科学的元素互相并存，反抗并独立的延续着。它有极大的想象力，构造的是一个超现实的幻想世界，将蒸汽的力量无限扩大化。蒸汽朋克作品的主要内容就是把第一次工业革命的技术形象有机组合起来，用 19 世纪的科技实现 21 世纪当代科学产物，去构造更复杂更超脱的意象，以及这一事实造成的反差和对比给人带来的震撼力。[[6]](#6)\n\n作为后现代艺术的一种，蒸汽朋克同样也质疑传统的元叙事作品的合法性，这种质疑随着元叙事的基础 --- 堂皇话语环境 --- 的终结而达到顶峰。传统的元叙事作品遵循的总是以英雄为主视角的堂而皇之的叙述模式，而后现代作品倾向于将堂皇叙事的社会的语境（如圣贤英雄、解放拯救、光辉的胜利、壮丽的远景等）散入叙事语言的迷雾中，使观众对堂而皇之的历史言论，或历史上的伟大“推动者”和伟大的“主题”产生怀疑，并以平凡的小人物、平凡的主题、平凡而琐碎的故事取而代之或利用堂皇叙事与平凡话语间的杂揉、拼贴和交替衍生来反衬、嘲弄元叙事的理性偏激。[[7]](#7)\n\n文艺复兴时期是一个重要的转折点，达芬奇以及丢勒等艺术家对飞机、潜水艇等人造机械装置的热爱已经远远超过了工具研制的层面，而上升到了审美层面上，他们似乎要穷尽自己的脑力和心力来与上帝抗衡。通过否定上帝，肯定自身，人类对自身的肯定也随之带来了对自身造物的肯定。[[8]](#8)\n\n如果说蒸汽朋克是对反直觉的现代事物的反叛（详见下文的古典机械美学），那么印象派的反叛则是多角度、更深刻的。\n\n科学技术的发展为印象派的诞生产生了巨大的影响：照相技术的出现对传统写实绘画纪实功能的消解；光学研究的新成果促使艺术家重新审视光线对物体色彩的影响；色彩研究的新成果让艺术家在画面色彩表现技巧上有了新突破；交通工具的发展为作画者的出行带来方便；颜料管的发明节约了工时，也使得户外作画成为可能；伴随对日本的经济殖民，日本浮世绘的传入引发了画家技法和思想上的思考。[[9]](#9)\n\n传统的写实主义绘画，承担着为贵族记录形象和对宗教、社会事件说教的任务，画面写实技术精湛性的攀比和社会服务功能对一幅作品的好坏起到了决定性的作用。但随着摄影技术的发展和普及，当时的艺术家发现他们在耗尽全部心血完成一幅写实作品的时候，照相机在瞬间就能够记录或超越写实绘画的真实效果，写实绘画失去了记录功能的优势，这种危机感促使艺术家放弃了照片式的古典画法，转而寻找绘画艺术表现形式的新途径。[[9]](#9)\n\n过去古典写实主义画家认为任何物体的固有色都是一成不变的，艺术家们完全按照物体的固有色和棕褐色的调子去观察和习惯性表现对象。牛顿、托马斯·杨等科学家建立了新的光学理论，艺术家们吸收并在自己的作品中实践了这些观念———世界万物并没有什么固有色，色彩的根源在于光，于是选取唯一真实的元素———光来诠释自然。[[10]](#10)\n\n如今看来毫不起眼的颜料管的发明，事实上从三个方面极大地影响了艺术创作，曾经油画颜料无论是制作还是保存都繁琐异常。耗费在颜色调配的时间，往往数倍于作品的真正绘制的时间。而且这一点往往局限了画家作画的场地只能是在室内。最后一点，颜料管的发明，也为画师尝试使用不加调和的色彩进行作画提供了便利。如我们所知，印象派有两大主张正是“到户外去作画”、“用不加调和的色彩去表现光”。\n\n色彩的研究也有了一些新的突破，人们发现不同色彩混织一起时，从一定距离的远处看就在人的视觉中形成了这两种颜色的混合色。以及日本浮世绘的传入，使得画家们开始尝试像东方艺术一样使用单一色彩来进行单线平涂，不再追求使用精心调和的色彩来进行绘画。浮世绘带来的另一个影响是，画家用东方绘画中“步步移，面面观”的透视代替了原先的单点透视。\n\n在此之前的古典画法的主要题材要么是将相王侯、要么是宗教神话，不追求对自然风光的描绘，不需要也不能在室外作画。印象派画家的一个重大主张就是到户外去作画，而铁路交通网的覆盖，为画家们能够便利地到郊区作画提供了便利。新兴的百货商店、林荫大道、公园、咖啡馆等建筑不仅为人们提供了全新的娱乐场所，也激发了艺术家对现实生活的关注，现代景观的出现吸引了印象派画家走出画室，探索户外创作之路。不仅是对“室内作画传统”的反叛，也是对作画主题的反叛。\n\n### 乐观精神 - 人文主义，机械唯物主义\n\n蒸汽朋克的作品中弥漫着浪漫主义乐观精神，工业的发展一定程度解放了劳动力，自然科学的发展破除了迷信与宗教集权政治，文化逐渐开明，人们充满了对世界的好奇心。人们对科技的发展持乐观态度。它的这种魅力是人们对乌托邦的向往。人类刚刚拥有接近神的力量，踏出解开自然奥秘的第一步。这种科技带来的神力让人们从数千年以来在繁重的体力劳动和贫乏的物质限制中获得解脱，让人们从束缚思想的封建禁锢中解放出。落后的势力和人类自诞生以来的人性缺陷又同时存在，先进与落后并存，先进与落后抗争，人们开动着巨大而笨拙的机器飞奔在文明发展的道路上，无情的碾压着旧事物，不断的探索，不断的创新，用自己的智慧谱写着工业文明辉煌的篇章，徜徉在探索新世界的浪漫主义思想中。\n\n如前文所说，蒸汽朋克的哲学本质是一种机械唯物主义。机械唯物主义的世界观之下，自然、社会乃至于组成社会的一个个基本单位 —— 人，都是机械。拉美特利就宣称：“人是机器”。[[11]](#11) 通过将世间的一切都视作平等的机械，将曾经高于人类的自然，拉到了与人类平等的地位上，从理论上为征服自然提供了法理依据。在哲学上，牛顿爵士、伏尔泰等人所创立的自然神论，认为上帝创造自然但不干涉自然，只是在自然之外默默观察，通过将上帝置于自然之外的“太上皇”地位，从而架空了上帝的权利，人的意志得以彰显。\n\n在这个机械的世界当中，所有的一切都如同钟表一般精准。无论身处社会的哪一个阶级，只要你遵从机械说明书一样的程式，那么你的未来也会如同机械一般精准而清晰。而科学承诺将会解决这世界上的一切问题，所以你的未来也会迈向一个光明的未来。\n\n蒸汽朋克代表的是一种机械之美，代表的是人类在征服自然过程中的一种重大胜利，代表了现代文明的开端，永不放弃的奋斗意志，即使在黑暗中也要等待光明的到来的念头让它的主旨充满了乐观精神。\n\n印象派作品中的乐观精神并不直接，事实上印象派画家也会描绘当时社会中的不幸事件，例如《运输船遇难》，但这些作品不占印象派作品的主流。印象派画家最喜欢的题材大多与当时中产阶级的生活方式和情趣相关。马奈的《草地上的午餐》、莫奈的阿尔让特伊沿岸（中产阶住宅区）风光、雷诺阿《游艇上的午餐》、德加的芭蕾舞演员、修拉的《大碗岛的星期日下午》等等，无不以中产阶级 “闲暇”，对世俗生活的享乐为主题。\n\n19 世纪后期的印象主义者们是典型的享乐主义者。19 世纪法国政治的变动、普法战争时期的颠沛流离，这些苦难的经历并没有在印象主义者的笔下留下痕迹，他们画中的场景一如他们眼中的阳光一般灿烂。在他们的手中，绘画不再承载道德说教的任务，只是快乐单纯地享受来自周遭视觉景象的快乐。在《视觉艺术中的现代主义和大众文化》一文中用“闲暇”来形容印象派绘画中所表现的中产阶级的生活，印象派画家通过画面中郊游、赛马、歌舞表演、咖啡厅等题材来表现出中产阶级的闲情逸致。这种有一定程度的文化和固定职业的白领阶层的闲暇生活不同于古典主义的理想式贵族生活，也不同于荷兰小画派的乡村情调的市井生活；印象派笔下的中产阶级闲暇生活与大众消费文化有关，他们的生活、消遣方式是他们在紧张的工作之余处理对通俗文化的消费。[[12]](#12)\n\n如果说文艺复兴是人的主体意识（人性）的觉醒的话（在科学上表现为科学作为一支独立的力量而出现和存在，不再是神学的婢女；在艺术上表现为从“以神为中心”转向“以人为中心” ), 那么，印象派和相对论的诞生，则再一次深刻地反思了“神中心”的残存。这在科学上表现为对“独立于人而存在的绝对时间——空间”——这是神的认识能力的范围——的批判；在艺术上表现为对“完全地表现客观物体的样子”——神的认识能力——的批判。因此印象派和相对论进一步大大深化了“人中心”这一主题。[[10]](#10) 正是因为由“以神为中心”转向“以人为中心”而招致的人文主义精神，人们重新从基督教那自我指责的赎罪意识中挣脱了出来。人间不再是急于摆脱的不名一文的“尘世”，转而成为了有待于建设的天堂。而且路德和加尔文的新教改革运动，从另一个侧面又加深了这一观点：“天职”描述人们不是要以苦修、超越世俗道德的禁欲主义方式来追求上帝的应许，反而应该在俗世中，完成个人在其所处职业位置上的工作责任和义务。[[13]](#13)\n\n### 受众人群的相似审美观\n\n蒸汽朋克完美契合了工业社会普通人审美情趣的风格。 这类风格之所以有独特魅力，是因为在技术发展的高速和大众审美观念的惯性之间找到了平衡：新型机械工程师们喜爱的，那种由管道电线煤炉仪表板堆砌出来的，粗糙但准确的美感；上流社会贵族们钟爱的，那种下午茶和舞会组织起来的细密精致的美感；商人市民阶层追求的，普通实用日常生活的朴素美感。\n\n机器美学，正是这个机器主宰一切的时代的产物。机器之所以美，并不仅仅因为其实用功能，也不只因为其形式结构，更重要的是因为其在心理层面上的人造物意义。古典美学研究的是美的终极意义，那个美是虚幻的，而机器美学所研究的美是实在的，是具象的，它是被人所创造也为人所感知的，这显然是一种更加真实朴素、毫无修饰的美。正如本雅明所言，机械复制时代的艺术和文化是大众文化，而从某种意义上讲，机械美学也是一种大众美学，它几乎无处不在，尤其是在 19 世纪以后纷纷出现的那些蒸汽机、汽车、火车头和巨型轮船乃至于翱翔的飞机，它们一方面以前所未见的奇特外形刺激着人们，另一方面却频频出现在人们身旁并迅速改变着我们的生活方式。[[8]](#8)\n\n古典机器美学是符合直觉的。这种直觉是一种机能化的视角，古典式机械的设计，我们想要增加动力就加一个锅炉，想要一个侧向的驱动力，齿轮组，扭杆组可以很直觉的形成模块，我们可以依靠直觉粗暴地构成一个可以运作的有机体。而这种机能主义，就如同这个技术变革刚解体原秩序，新秩序刚形成的社会生态一样，我们在解决一个社会问题，只需要建构一个符合直觉和普遍认识的机制来解决就行了，社会生态还在初期的建设阶段，而这一切是符合直觉的，也是从经验主义学理传承下来对于历史语境的推崇。故而，在这种指导下，社会的前景，科学技术的发展是有序的，可认知的，在我们经验里面也是可以明确的，这里没有人类本身之外的不确定因素，也没有社会结构的离散化，我们可以将一系列自然问题可以归元到我们的经验中和逻辑之中，来做一个判断，最后还原到技术上来解决。整个社会生态就如同一个精密设计的，符合直觉和经验的有机体，各模块（阶级，共同体）之间被分割放置，各司其职，就如同古典式机器一样。[[15]](#15) 这就是蒸汽朋克世界观给我们的美感。\n\n与蒸汽朋克类似，印象派画家同样追求符合人的直觉的视觉感官体验，对于他们来说，美得毫无瑕疵的古典画作并不是真实，那是只存在与柏拉图“理念世界”的产物。真实是你用肉眼看到的亲身体验，是笼罩在牛奶般薄雾中的“日出·印象”，是市民阶级中熟悉的日常生活中点点滴滴。有几位印象派画家比较典型：\n\n莫奈笔下的巴黎街景记录性强，在风格上类似现在的城市景观派；他所有的描绘巴黎街景的作品都是对巴黎各大街道的一种真实写照。而雷诺阿与他们不同，虽然雷诺阿大部分作品是描绘女人的，描绘巴黎街头的作品很少，但是他描绘的巴黎街头总是带有欢愉的社交氛围。\n\n印象派画家中比较特殊的一位——卡耶博特，擅于表现和巴黎现代生活息息相关的作品，尤其是表现巴黎街头的景象。虽然受印象派影响，但是他不是完全模仿印象派的创作方法而是进行实验性的探索，形成与众不同的风格。他希望最大限度的表现出这条街道在某一瞬间的真实，所以他对此时街道上的每一个事物包括细节都细致的描绘。卡耶博特的创作风格尤其是在构图上受到摄影的巨大影响，他所表现的这一场景就像摄影师在下雨天的某条巴黎街道偶然拍下的一个场景。[[12]](#12)\n\n### 总结\n\n而蒸汽朋克的核心魅力，或者说是比较核心的那部分科幻迷看重的东西，应该是过去时代的科学精神和社会精神。19 世纪是一个机械唯物主义泛滥的时代，不仅自然界是机械性的，人类历史也是线性的，新东西一定比老东西强，明天一定比昨天好，崇拜科学，科学只要无限发展下去就一定会掌握整个宇宙的真理。蒸汽朋克通过把故事背景调整到 19 世纪，来复苏 19 世纪的“纯洁的科学精神”，缓解一下现代科幻迷遇到的信仰危机。而印象派虽然不以科学为表现主体，它对科学的崇拜是隐性的，但受时代背景影响，一脉相承于文艺复兴中的人文主义乐观精神，以及对工业革命将现实社会改造得更加美好的颂扬都得到了充分的体现。\n\n### 引用\n<span id = \"1\"> [1] 维基百科 : https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B </span>\n<span id = \"2\"> [2] 科学崇拜和合理性怀疑_高知识人群邪教受害者思想根源初探_亓馈言 </span>\n<span id = \"3\"> [3] 知乎 首先说一下蒸汽朋克的时代背景 </span>\n<span id = \"4\"> [4] https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99 </span>\n<span id = \"5\"> [5] 果壳 什么是真正的蒸汽朋克？方聿南 </span>\n<span id = \"6\"> [6] 从蒸汽朋克看城市再生创意的必要性_魏安琪 </span>\n<span id = \"7\"> [7] 维基百科 https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89 </span>\n<span id = \"8\"> [8] 蒸汽朋克电影与机器美学 </span>\n<span id = \"9\"> [9] 自然科学新成果对印象派绘画的影响_曹跻圣 </span>\n<span id = \"10\"> [10] 印象派绘画与狭义相对论物理学比较研究_杨正瓴 </span>\n<span id = \"11\"> [11] 拉美特利 《人是机器》 </span>\n<span id = \"12\"> [12] 印象画派的历史发展及审美特征_李怀鹏 </span>\n<span id = \"13\"> [13] 马克思·韦伯 新教伦理与资本主义精神 </span>\n<span id = \"14\"> [14] 知乎 作者：acel rovsion 链接：https://www.zhihu.com/question/21722005/answer/34906841 </span>\n","slug":"From-Impressionism-to-Steampunk","published":1,"updated":"2019-03-18T08:47:35.205Z","layout":"post","photos":[],"link":"","_id":"cjucbl8ni001ib9fse5ebigmk","content":"<h3 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h3><p>出现于工业革命期间的印象主义与出现于 20 世纪下半叶的蒸汽朋克文化，在审美旨趣的角度有着非常多的相似之处，这些相似之处包括：表现对象的相同，对工业和科技的赞美，对社会传统的反叛，对现实社会的乐观精神。除此之外，这两种截然不同的艺术形式在受众人群上存在着极大的重合，大都是受过高等教育，有一定的艺术修养，对未来充满美好憧憬的群体，他们所持有的往往是一种根植于新维多利亚主义的大众审美。抛开这些纷繁复杂的特征表象，我们会惊讶地发现，无论是印象派还是蒸汽朋克都存在着一个相同的精神内核 —— 一种机械唯物主义的积极乐观的进取精神，对科学的崇拜，相信技术的进步终将解决一切问题。</p>\n<p><strong>关键词：印象派、蒸汽朋克、科学崇拜、工业革命、机械唯物主义、机械美学</strong></p>\n<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><p>蒸汽朋克（Steampunk）是一种流行于 20 世纪 80 年代至 90 年代初的科幻题材，显著特征为故事都设定于一个蒸气科技树攀升到巅峰的架空世界。这类故事对距今已较遥远的工业革命时代的科技进行了极大的夸张，创建出一个与当今科技文明不同的、依赖于蒸汽动力装置的机械科技世界。从广义上讲，只要是将某种科技置于图腾地位，并将其力量无限扩大的文化，都可算作蒸汽朋克。<a href=\"#1\">[1]</a></p>\n<p>蒸汽朋克通常以英国的维多利亚时代为背景，威廉·吉布森（William Gibson）的小说《差分机》，就是这个领域的第一本小说。虽然“蒸汽朋克”一词出现于 20 世纪下半叶，但从今天的观点来看，工业革命时代所产生的许多科幻小说其实都可以归入该类别。只不过当年人们的创作多是推崇科技的力量。而今天人们创作这类故事则多以对早期科技文化的怀旧与复古为目的。蒸汽朋克的怀旧风格与现今社会崇尚未来感设计的风尚形成鲜明对比。<a href=\"#1\">[1]</a></p>\n<a id=\"more\"></a>\n<p>在后维多利亚时代，以蒸汽机、差分机为代表的工业革命产物以摧枯拉朽之势完成了对传统农业社会的改造；与此同时以透纳、康斯坦勃尔、莫奈等为代表的印象派先驱、创始人，借助当时最新的科技发展，以及伴随工业革命来到的海外殖民地而产生的相关经济结构，开始了在艺术领域对传统的表现手法的革新，在思想上开始追求与“学院派”观点不同的新价值观。（以及这里可以补充的是，价值观的内容）</p>\n<p>蒸汽朋克的主要表现对象为工业革命背景下的种种产物，这一点自不必多提。但值得注意的是，受到第二次工业革命的时代背景的影响，印象派画家往往也热衷于在绘画中描绘能反应当时时代精神的相关社会现象：新兴中产阶级的“闲暇”生活、喷涂着蒸汽快速前行的火车、轮船等等，都是他们所喜爱的题材。除此之外，蒸汽朋克与通常的科幻流派最大的一点不同是，通常的科幻流派在作品中往往警惕科技进步可能会带给我们的危害，这样的担忧在末世、赛博朋克等题材中尤为典型；但在蒸汽朋克中占据主导地位的是一种机械唯物主义的世界观，在那个牛顿和洛克的时代，科学仍然是古典的，世界图景是明晰的，时空还是平直的，上帝是不扔色子的。人们第一次可以不借助自然力量，而单凭借自己创造的机械来改造世界，人们的物质世界、认知的深度和广度都得到极大拓展，充满了对未来的美好遐想。生活在这样的世界中，人们崇拜科学和由科学带来的力量也就不足为奇了。</p>\n<p>在精神层面，蒸汽朋克的“朋克”一词本身就意味着拒绝对传统和权威的妥协，象征着一种标新立异、创造自由乌托邦的精神内核。<a href=\"#4\">[4]</a> 而印象派画家同样也是击碎了学院派传统的种种束缚，才得以产生出能够孕育现代艺术的土壤。从蒸汽朋克作品和印象派绘画的受众群体的角度来看，我们仍能看到一种令人惊异的相似性，他们以受过良好高等教育、并享有一定闲暇时间、对艺术存在一定的鉴赏力的群体为主。</p>\n<p>那么究竟什么是科学崇拜，所谓科学崇拜，是唯科学主义的外在表现形式。唯科学主义思想源自启蒙主义，成于实证主义，其思想内核是由牛顿爵士构建的“机械唯物主义世界观”。其拥护者往往以“知识就是力量”为口号，这里的“知识”通常被他们理解为科学。拥护科学的想法似乎没什么不好，但凡事都有一个度，一旦超过了这个度，想要用科学去解释世间的一切，就不免陷入了自视为真理的泥淖。在科学对世界的解构的过程中，由于其精确性、实用性、强大性，科学逐渐在人们心中接管了宗教曾经具有的那种神性，唯科学主义也因而变成了一种与科学精神推崇的理性怀疑精神相悖的“类宗教”。<a href=\"#2\">[2]</a></p>\n<p>唯科学主义在普遍科学素养不太高的时代，有着其积极的意义。在这个目的论和决定论的机械唯物主义的世界里，世界乃至宇宙的图景都无比清晰，人与人之间的关系也被视作一种“力”的互动，在社会科学上，也有孔德试图用牛顿力学体系来构建“社会动力学”和“社会静力学”体系的尝试。这个世界并非暗淡无光，事实上由于世界图景的清晰，科学向人们承诺了一个科学终将解决一切问题的光明美好的未来。而且由于目的论的影响，各个阶层的人们都安于在庞大的“社会机械”中充当一个运转的齿轮。</p>\n<p>在我们下面的行文中，我们将分别从以上这些角度来论证，印象派和蒸汽朋克在科学崇拜这一精神内核上的共通性。</p>\n<h3 id=\"对工业和科技的赞美\"><a href=\"#对工业和科技的赞美\" class=\"headerlink\" title=\"对工业和科技的赞美\"></a>对工业和科技的赞美</h3><p>蒸汽朋克有着专属于自己的美学形式，这个形式通常被称为新维多利亚美学，其主要的表现对象是多种饱含维多利亚风格的产物，包括交通工具、武器、建筑和服装等等。这些产物通常是第二次工业革命阶段的技术有机组合构造的更复杂更超脱的审美意象，往往造型古朴、体积庞大、结构复杂且暴露在外。以蒸汽锅炉为动力，螺旋桨、齿轮、活塞、轴承、旋钮、管道共同组成眼花缭乱又极具美感的连锁装置，其令人惊异的想象力总让人联想到“阿鲁贝戈德堡机”。因为蒸汽朋克时代所有的动力都是靠纯机械装置将蒸汽产生的动力输送到动力机关来做功的，因为机械自重过大和摩擦力还有热传递等原因，蒸汽产生的动力在机械装置传导的过程中大量损耗，能量转化效率极低，但是也造就了蒸汽朋克世界观当中各种独有暴力美感的巨大机械造型。<a href=\"#3\">[3]</a> 一经启动，锅炉中升起腾腾热气，活塞错落有致地起伏，精准咬合的大小齿轮互相带动旋转，那是一幅大工业时代盛世图景的完美再现。</p>\n<p>这些工艺上具有时代特征的表现对象，在各类文艺作品中都常常见到：从电子游戏《教团 1886》特斯拉电弧枪、宫崎骏的动漫电影《风之谷》中的王虫也可视作一种异化的机械、《天空之城》中的类人机械人和漂浮之城、《哈尔的移动城堡》那座典型的蒸汽朋克风格的移动城堡等，无不洋溢着对机械质感的强烈赞美。<br><img src=\"TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg\" alt=\"特斯拉电弧枪\"></p>\n<blockquote>\n<p>关于《教团 1886》中各种蒸汽朋克风格武器介绍，可参见网友 tekkenman 整理的资料。<br><a href=\"http://bbs.a9vg.com/thread-4446281-1-1.html\" target=\"_blank\" rel=\"noopener\">『《教团 1886》中的一些特殊武器装备预热以及与当时现实中科技对比』</a></p>\n</blockquote>\n<p>在一个特殊的科幻迷群体 —— “多炮塔神教”中，还存在着“多铆蒸刚”的说法。所谓“多铆蒸刚”，指的是“多炮塔，铆钉连接，蒸汽动力，刚性悬挂”，在他们眼中“多就是美，大就是好，多属于蒸汽时代浪漫情怀的一种体现。”。<a href=\"#4\">[4]</a><br>总的来说，蒸汽朋克的机器美学集中体现了后现代艺术的精髓，百无禁忌，任想象驰骋，但又有一定规律可循，呈现一望即知的视觉风格。<a href=\"#5\">[5]</a></p>\n<p>印象派画家同样热衷于表现近代工业文明。有三幅画，非常典型地表明了印象派画家的审美取向：透纳的《被拖去解体的战舰无畏号》、《雨，蒸汽和速度》，莫奈的《圣·拉扎尔火车站》。</p>\n<p><img src=\"The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg\" alt=\"被拖去解体的战舰无畏号\"><br>《被拖去解体的战舰无畏号》意在表现一艘巨大的老式木质风帆战舰被对比起来显得渺小的蒸汽动力船拖去船坞解体，这艘战舰正是在奠定英国海上霸权地位的特拉法海战（the Battle of Trafalgar）中，营救了纳尔逊指挥的胜利号旗舰，并俘获了两艘敌舰，立下了赫赫战功的“战舰无畏号”（The Fighting Temeraire）。<br>画家选取的这戏剧性的一幕充分地显示了一个辉煌时代的落幕。远方的太阳看不出是日出还是日落，更像是画家的有意为之，它既是象征着传统社会的木质战船的落日，又是冉冉升起的工业化时代的新日。油画中可以看到，巨大的无畏号在汽轮喷吐出的蒸汽中仿佛在雾霭里一般朦胧，桅杆上的帆紧紧收着，渐渐远离平静的海面，一个时代结束了，古老的荣耀与激情如今被新的一页覆盖。小小汽船拖动巨大的木质战舰去解体，也显示了工业革命和科技的力量。画面整体所使用的暖色调，也又一次强调了画家所想表达的积极乐观的主旨。</p>\n<p><img src=\"Rain_Steam_and_Speed_the_Great_Western_Railway.jpg\" alt=\"雨、蒸汽和速度\"><br>在《雨、蒸汽和速度》中表现出大自然和两大技术发明（铁路和高架桥）之间的强烈对比。铁路和高架桥这两个人造的力量使自然景色大大改观，透纳看到并描绘了它们所有震撼人心的效果。雨水滴落的方向仿佛被机械强大的力量所扭转，这似乎象征着人类通过机械的力量对自然的征服。火车头前方有一只小野兔在奔跑，既象征着速度，又对极尽烘托出了了雨中飞驰的火车那磅礴的气势。</p>\n<p><img src=\"La_Gare_Saint-Lazare_-_Claude_Monet.jpg\" alt=\"圣·拉扎尔火车站\"><br>随着城市化进程的加快，工程师对伦敦、巴黎等大城市进行了大刀阔斧的改造，因而出现了大量全新的城市新景观。莫奈的《圣·拉扎尔火车站》，即成功地表现了现代生活最典型的景象。那巨大的停车场，有玻璃的屋顶，沉重的火车头发出暗沉沉的水蒸汽，进进出出的列车、人群，背景中澄澈的天空和蒸汽腾腾的机器之间的对照———所有这一切供给他以不平常的动人题材，谱写了一首工业文明的赞美诗。可见，当时的印象派画家不仅仅是利用刚出现不久的道路和交通手段外出作画，更是将它们看作是值得去画的创作题材，甚至比传统的作画题材更为重要，将其搬上画面，描绘出由于工业化而“变得更美的风景”，用通俗的画面让人们了解了工业化。</p>\n<h3 id=\"对现代事物及宗教的反叛\"><a href=\"#对现代事物及宗教的反叛\" class=\"headerlink\" title=\"对现代事物及宗教的反叛\"></a>对现代事物及宗教的反叛</h3><p>如果说印象派画家是通过对传统的反叛而通向未来的话，那么蒸汽朋克则是对后现代美学的反叛而回到过去。他们有着不同的起点，不同的手段，但最终却达至了相同的终点。</p>\n<p>朋克精神本质在于超越社会准则，反对除朋克外的一切，有反社会无政府主义的倾向，通常被人视作叛逆的代名词。但蒸汽朋克的反叛情绪显然要温和得多，并没有通常的科幻作品中那种科技发达、物质文明泛滥、世界被机器主宰、人际关系冷漠疏离、精神迷惘空虚的反乌托邦情绪。蒸汽朋克非但罕见阴郁低落的基调，而且往往充满了催人振奋、积极向上的情绪，这与维多利亚时代的科技乐观主义是一脉相承的。<a href=\"#5\">[5]</a></p>\n<p>有人提出了一个蒸汽朋克理念 —— “异质世界”。蒸汽朋克作品中叛逆因素的存在，更多的是为了切合架空世界的后现代表现形式。它常拼凑出一个虚幻，独立、区别于古往今来的任何一个时代的面貌，构成独一无二的异质世界。朋克世界中强调反抗和独立，总有种打破旧世界的味道。再生艺术是思维构成的自我演绎与不断完善，是艺术思维的超越性体现，也是艺术生命力的延续和变革发展。蒸汽朋克同样如此，过去与未来、想象与现实、魔幻与科学的元素互相并存，反抗并独立的延续着。它有极大的想象力，构造的是一个超现实的幻想世界，将蒸汽的力量无限扩大化。蒸汽朋克作品的主要内容就是把第一次工业革命的技术形象有机组合起来，用 19 世纪的科技实现 21 世纪当代科学产物，去构造更复杂更超脱的意象，以及这一事实造成的反差和对比给人带来的震撼力。<a href=\"#6\">[6]</a></p>\n<p>作为后现代艺术的一种，蒸汽朋克同样也质疑传统的元叙事作品的合法性，这种质疑随着元叙事的基础 — 堂皇话语环境 — 的终结而达到顶峰。传统的元叙事作品遵循的总是以英雄为主视角的堂而皇之的叙述模式，而后现代作品倾向于将堂皇叙事的社会的语境（如圣贤英雄、解放拯救、光辉的胜利、壮丽的远景等）散入叙事语言的迷雾中，使观众对堂而皇之的历史言论，或历史上的伟大“推动者”和伟大的“主题”产生怀疑，并以平凡的小人物、平凡的主题、平凡而琐碎的故事取而代之或利用堂皇叙事与平凡话语间的杂揉、拼贴和交替衍生来反衬、嘲弄元叙事的理性偏激。<a href=\"#7\">[7]</a></p>\n<p>文艺复兴时期是一个重要的转折点，达芬奇以及丢勒等艺术家对飞机、潜水艇等人造机械装置的热爱已经远远超过了工具研制的层面，而上升到了审美层面上，他们似乎要穷尽自己的脑力和心力来与上帝抗衡。通过否定上帝，肯定自身，人类对自身的肯定也随之带来了对自身造物的肯定。<a href=\"#8\">[8]</a></p>\n<p>如果说蒸汽朋克是对反直觉的现代事物的反叛（详见下文的古典机械美学），那么印象派的反叛则是多角度、更深刻的。</p>\n<p>科学技术的发展为印象派的诞生产生了巨大的影响：照相技术的出现对传统写实绘画纪实功能的消解；光学研究的新成果促使艺术家重新审视光线对物体色彩的影响；色彩研究的新成果让艺术家在画面色彩表现技巧上有了新突破；交通工具的发展为作画者的出行带来方便；颜料管的发明节约了工时，也使得户外作画成为可能；伴随对日本的经济殖民，日本浮世绘的传入引发了画家技法和思想上的思考。<a href=\"#9\">[9]</a></p>\n<p>传统的写实主义绘画，承担着为贵族记录形象和对宗教、社会事件说教的任务，画面写实技术精湛性的攀比和社会服务功能对一幅作品的好坏起到了决定性的作用。但随着摄影技术的发展和普及，当时的艺术家发现他们在耗尽全部心血完成一幅写实作品的时候，照相机在瞬间就能够记录或超越写实绘画的真实效果，写实绘画失去了记录功能的优势，这种危机感促使艺术家放弃了照片式的古典画法，转而寻找绘画艺术表现形式的新途径。<a href=\"#9\">[9]</a></p>\n<p>过去古典写实主义画家认为任何物体的固有色都是一成不变的，艺术家们完全按照物体的固有色和棕褐色的调子去观察和习惯性表现对象。牛顿、托马斯·杨等科学家建立了新的光学理论，艺术家们吸收并在自己的作品中实践了这些观念———世界万物并没有什么固有色，色彩的根源在于光，于是选取唯一真实的元素———光来诠释自然。<a href=\"#10\">[10]</a></p>\n<p>如今看来毫不起眼的颜料管的发明，事实上从三个方面极大地影响了艺术创作，曾经油画颜料无论是制作还是保存都繁琐异常。耗费在颜色调配的时间，往往数倍于作品的真正绘制的时间。而且这一点往往局限了画家作画的场地只能是在室内。最后一点，颜料管的发明，也为画师尝试使用不加调和的色彩进行作画提供了便利。如我们所知，印象派有两大主张正是“到户外去作画”、“用不加调和的色彩去表现光”。</p>\n<p>色彩的研究也有了一些新的突破，人们发现不同色彩混织一起时，从一定距离的远处看就在人的视觉中形成了这两种颜色的混合色。以及日本浮世绘的传入，使得画家们开始尝试像东方艺术一样使用单一色彩来进行单线平涂，不再追求使用精心调和的色彩来进行绘画。浮世绘带来的另一个影响是，画家用东方绘画中“步步移，面面观”的透视代替了原先的单点透视。</p>\n<p>在此之前的古典画法的主要题材要么是将相王侯、要么是宗教神话，不追求对自然风光的描绘，不需要也不能在室外作画。印象派画家的一个重大主张就是到户外去作画，而铁路交通网的覆盖，为画家们能够便利地到郊区作画提供了便利。新兴的百货商店、林荫大道、公园、咖啡馆等建筑不仅为人们提供了全新的娱乐场所，也激发了艺术家对现实生活的关注，现代景观的出现吸引了印象派画家走出画室，探索户外创作之路。不仅是对“室内作画传统”的反叛，也是对作画主题的反叛。</p>\n<h3 id=\"乐观精神-人文主义，机械唯物主义\"><a href=\"#乐观精神-人文主义，机械唯物主义\" class=\"headerlink\" title=\"乐观精神 - 人文主义，机械唯物主义\"></a>乐观精神 - 人文主义，机械唯物主义</h3><p>蒸汽朋克的作品中弥漫着浪漫主义乐观精神，工业的发展一定程度解放了劳动力，自然科学的发展破除了迷信与宗教集权政治，文化逐渐开明，人们充满了对世界的好奇心。人们对科技的发展持乐观态度。它的这种魅力是人们对乌托邦的向往。人类刚刚拥有接近神的力量，踏出解开自然奥秘的第一步。这种科技带来的神力让人们从数千年以来在繁重的体力劳动和贫乏的物质限制中获得解脱，让人们从束缚思想的封建禁锢中解放出。落后的势力和人类自诞生以来的人性缺陷又同时存在，先进与落后并存，先进与落后抗争，人们开动着巨大而笨拙的机器飞奔在文明发展的道路上，无情的碾压着旧事物，不断的探索，不断的创新，用自己的智慧谱写着工业文明辉煌的篇章，徜徉在探索新世界的浪漫主义思想中。</p>\n<p>如前文所说，蒸汽朋克的哲学本质是一种机械唯物主义。机械唯物主义的世界观之下，自然、社会乃至于组成社会的一个个基本单位 —— 人，都是机械。拉美特利就宣称：“人是机器”。<a href=\"#11\">[11]</a> 通过将世间的一切都视作平等的机械，将曾经高于人类的自然，拉到了与人类平等的地位上，从理论上为征服自然提供了法理依据。在哲学上，牛顿爵士、伏尔泰等人所创立的自然神论，认为上帝创造自然但不干涉自然，只是在自然之外默默观察，通过将上帝置于自然之外的“太上皇”地位，从而架空了上帝的权利，人的意志得以彰显。</p>\n<p>在这个机械的世界当中，所有的一切都如同钟表一般精准。无论身处社会的哪一个阶级，只要你遵从机械说明书一样的程式，那么你的未来也会如同机械一般精准而清晰。而科学承诺将会解决这世界上的一切问题，所以你的未来也会迈向一个光明的未来。</p>\n<p>蒸汽朋克代表的是一种机械之美，代表的是人类在征服自然过程中的一种重大胜利，代表了现代文明的开端，永不放弃的奋斗意志，即使在黑暗中也要等待光明的到来的念头让它的主旨充满了乐观精神。</p>\n<p>印象派作品中的乐观精神并不直接，事实上印象派画家也会描绘当时社会中的不幸事件，例如《运输船遇难》，但这些作品不占印象派作品的主流。印象派画家最喜欢的题材大多与当时中产阶级的生活方式和情趣相关。马奈的《草地上的午餐》、莫奈的阿尔让特伊沿岸（中产阶住宅区）风光、雷诺阿《游艇上的午餐》、德加的芭蕾舞演员、修拉的《大碗岛的星期日下午》等等，无不以中产阶级 “闲暇”，对世俗生活的享乐为主题。</p>\n<p>19 世纪后期的印象主义者们是典型的享乐主义者。19 世纪法国政治的变动、普法战争时期的颠沛流离，这些苦难的经历并没有在印象主义者的笔下留下痕迹，他们画中的场景一如他们眼中的阳光一般灿烂。在他们的手中，绘画不再承载道德说教的任务，只是快乐单纯地享受来自周遭视觉景象的快乐。在《视觉艺术中的现代主义和大众文化》一文中用“闲暇”来形容印象派绘画中所表现的中产阶级的生活，印象派画家通过画面中郊游、赛马、歌舞表演、咖啡厅等题材来表现出中产阶级的闲情逸致。这种有一定程度的文化和固定职业的白领阶层的闲暇生活不同于古典主义的理想式贵族生活，也不同于荷兰小画派的乡村情调的市井生活；印象派笔下的中产阶级闲暇生活与大众消费文化有关，他们的生活、消遣方式是他们在紧张的工作之余处理对通俗文化的消费。<a href=\"#12\">[12]</a></p>\n<p>如果说文艺复兴是人的主体意识（人性）的觉醒的话（在科学上表现为科学作为一支独立的力量而出现和存在，不再是神学的婢女；在艺术上表现为从“以神为中心”转向“以人为中心” ), 那么，印象派和相对论的诞生，则再一次深刻地反思了“神中心”的残存。这在科学上表现为对“独立于人而存在的绝对时间——空间”——这是神的认识能力的范围——的批判；在艺术上表现为对“完全地表现客观物体的样子”——神的认识能力——的批判。因此印象派和相对论进一步大大深化了“人中心”这一主题。<a href=\"#10\">[10]</a> 正是因为由“以神为中心”转向“以人为中心”而招致的人文主义精神，人们重新从基督教那自我指责的赎罪意识中挣脱了出来。人间不再是急于摆脱的不名一文的“尘世”，转而成为了有待于建设的天堂。而且路德和加尔文的新教改革运动，从另一个侧面又加深了这一观点：“天职”描述人们不是要以苦修、超越世俗道德的禁欲主义方式来追求上帝的应许，反而应该在俗世中，完成个人在其所处职业位置上的工作责任和义务。<a href=\"#13\">[13]</a></p>\n<h3 id=\"受众人群的相似审美观\"><a href=\"#受众人群的相似审美观\" class=\"headerlink\" title=\"受众人群的相似审美观\"></a>受众人群的相似审美观</h3><p>蒸汽朋克完美契合了工业社会普通人审美情趣的风格。 这类风格之所以有独特魅力，是因为在技术发展的高速和大众审美观念的惯性之间找到了平衡：新型机械工程师们喜爱的，那种由管道电线煤炉仪表板堆砌出来的，粗糙但准确的美感；上流社会贵族们钟爱的，那种下午茶和舞会组织起来的细密精致的美感；商人市民阶层追求的，普通实用日常生活的朴素美感。</p>\n<p>机器美学，正是这个机器主宰一切的时代的产物。机器之所以美，并不仅仅因为其实用功能，也不只因为其形式结构，更重要的是因为其在心理层面上的人造物意义。古典美学研究的是美的终极意义，那个美是虚幻的，而机器美学所研究的美是实在的，是具象的，它是被人所创造也为人所感知的，这显然是一种更加真实朴素、毫无修饰的美。正如本雅明所言，机械复制时代的艺术和文化是大众文化，而从某种意义上讲，机械美学也是一种大众美学，它几乎无处不在，尤其是在 19 世纪以后纷纷出现的那些蒸汽机、汽车、火车头和巨型轮船乃至于翱翔的飞机，它们一方面以前所未见的奇特外形刺激着人们，另一方面却频频出现在人们身旁并迅速改变着我们的生活方式。<a href=\"#8\">[8]</a></p>\n<p>古典机器美学是符合直觉的。这种直觉是一种机能化的视角，古典式机械的设计，我们想要增加动力就加一个锅炉，想要一个侧向的驱动力，齿轮组，扭杆组可以很直觉的形成模块，我们可以依靠直觉粗暴地构成一个可以运作的有机体。而这种机能主义，就如同这个技术变革刚解体原秩序，新秩序刚形成的社会生态一样，我们在解决一个社会问题，只需要建构一个符合直觉和普遍认识的机制来解决就行了，社会生态还在初期的建设阶段，而这一切是符合直觉的，也是从经验主义学理传承下来对于历史语境的推崇。故而，在这种指导下，社会的前景，科学技术的发展是有序的，可认知的，在我们经验里面也是可以明确的，这里没有人类本身之外的不确定因素，也没有社会结构的离散化，我们可以将一系列自然问题可以归元到我们的经验中和逻辑之中，来做一个判断，最后还原到技术上来解决。整个社会生态就如同一个精密设计的，符合直觉和经验的有机体，各模块（阶级，共同体）之间被分割放置，各司其职，就如同古典式机器一样。<a href=\"#15\">[15]</a> 这就是蒸汽朋克世界观给我们的美感。</p>\n<p>与蒸汽朋克类似，印象派画家同样追求符合人的直觉的视觉感官体验，对于他们来说，美得毫无瑕疵的古典画作并不是真实，那是只存在与柏拉图“理念世界”的产物。真实是你用肉眼看到的亲身体验，是笼罩在牛奶般薄雾中的“日出·印象”，是市民阶级中熟悉的日常生活中点点滴滴。有几位印象派画家比较典型：</p>\n<p>莫奈笔下的巴黎街景记录性强，在风格上类似现在的城市景观派；他所有的描绘巴黎街景的作品都是对巴黎各大街道的一种真实写照。而雷诺阿与他们不同，虽然雷诺阿大部分作品是描绘女人的，描绘巴黎街头的作品很少，但是他描绘的巴黎街头总是带有欢愉的社交氛围。</p>\n<p>印象派画家中比较特殊的一位——卡耶博特，擅于表现和巴黎现代生活息息相关的作品，尤其是表现巴黎街头的景象。虽然受印象派影响，但是他不是完全模仿印象派的创作方法而是进行实验性的探索，形成与众不同的风格。他希望最大限度的表现出这条街道在某一瞬间的真实，所以他对此时街道上的每一个事物包括细节都细致的描绘。卡耶博特的创作风格尤其是在构图上受到摄影的巨大影响，他所表现的这一场景就像摄影师在下雨天的某条巴黎街道偶然拍下的一个场景。<a href=\"#12\">[12]</a></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>而蒸汽朋克的核心魅力，或者说是比较核心的那部分科幻迷看重的东西，应该是过去时代的科学精神和社会精神。19 世纪是一个机械唯物主义泛滥的时代，不仅自然界是机械性的，人类历史也是线性的，新东西一定比老东西强，明天一定比昨天好，崇拜科学，科学只要无限发展下去就一定会掌握整个宇宙的真理。蒸汽朋克通过把故事背景调整到 19 世纪，来复苏 19 世纪的“纯洁的科学精神”，缓解一下现代科幻迷遇到的信仰危机。而印象派虽然不以科学为表现主体，它对科学的崇拜是隐性的，但受时代背景影响，一脉相承于文艺复兴中的人文主义乐观精神，以及对工业革命将现实社会改造得更加美好的颂扬都得到了充分的体现。</p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p><span id=\"1\"> [1] 维基百科 : <a href=\"https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B</a> </span><br><span id=\"2\"> [2] 科学崇拜和合理性怀疑<em>高知识人群邪教受害者思想根源初探</em>亓馈言 </span><br><span id=\"3\"> [3] 知乎 首先说一下蒸汽朋克的时代背景 </span><br><span id=\"4\"> [4] <a href=\"https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99\" target=\"_blank\" rel=\"noopener\">https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99</a> </span><br><span id=\"5\"> [5] 果壳 什么是真正的蒸汽朋克？方聿南 </span><br><span id=\"6\"> [6] 从蒸汽朋克看城市再生创意的必要性<em>魏安琪 </em></span><br><span id=\"7\"> [7] 维基百科 <a href=\"https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89</a> </span><br><span id=\"8\"> [8] 蒸汽朋克电影与机器美学 </span><br><span id=\"9\"> [9] 自然科学新成果对印象派绘画的影响曹跻圣 </span><br><span id=\"10\"> [10] 印象派绘画与狭义相对论物理学比较研究<em>杨正瓴 </em></span><br><span id=\"11\"> [11] 拉美特利 《人是机器》 </span><br><span id=\"12\"> [12] 印象画派的历史发展及审美特征李怀鹏 </span><br><span id=\"13\"> [13] 马克思·韦伯 新教伦理与资本主义精神 </span><br><span id=\"14\"> [14] 知乎 作者：acel rovsion 链接：<a href=\"https://www.zhihu.com/question/21722005/answer/34906841\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21722005/answer/34906841</a> </span></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h3><p>出现于工业革命期间的印象主义与出现于 20 世纪下半叶的蒸汽朋克文化，在审美旨趣的角度有着非常多的相似之处，这些相似之处包括：表现对象的相同，对工业和科技的赞美，对社会传统的反叛，对现实社会的乐观精神。除此之外，这两种截然不同的艺术形式在受众人群上存在着极大的重合，大都是受过高等教育，有一定的艺术修养，对未来充满美好憧憬的群体，他们所持有的往往是一种根植于新维多利亚主义的大众审美。抛开这些纷繁复杂的特征表象，我们会惊讶地发现，无论是印象派还是蒸汽朋克都存在着一个相同的精神内核 —— 一种机械唯物主义的积极乐观的进取精神，对科学的崇拜，相信技术的进步终将解决一切问题。</p>\n<p><strong>关键词：印象派、蒸汽朋克、科学崇拜、工业革命、机械唯物主义、机械美学</strong></p>\n<h3 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h3><p>蒸汽朋克（Steampunk）是一种流行于 20 世纪 80 年代至 90 年代初的科幻题材，显著特征为故事都设定于一个蒸气科技树攀升到巅峰的架空世界。这类故事对距今已较遥远的工业革命时代的科技进行了极大的夸张，创建出一个与当今科技文明不同的、依赖于蒸汽动力装置的机械科技世界。从广义上讲，只要是将某种科技置于图腾地位，并将其力量无限扩大的文化，都可算作蒸汽朋克。<a href=\"#1\">[1]</a></p>\n<p>蒸汽朋克通常以英国的维多利亚时代为背景，威廉·吉布森（William Gibson）的小说《差分机》，就是这个领域的第一本小说。虽然“蒸汽朋克”一词出现于 20 世纪下半叶，但从今天的观点来看，工业革命时代所产生的许多科幻小说其实都可以归入该类别。只不过当年人们的创作多是推崇科技的力量。而今天人们创作这类故事则多以对早期科技文化的怀旧与复古为目的。蒸汽朋克的怀旧风格与现今社会崇尚未来感设计的风尚形成鲜明对比。<a href=\"#1\">[1]</a></p>","more":"<p>在后维多利亚时代，以蒸汽机、差分机为代表的工业革命产物以摧枯拉朽之势完成了对传统农业社会的改造；与此同时以透纳、康斯坦勃尔、莫奈等为代表的印象派先驱、创始人，借助当时最新的科技发展，以及伴随工业革命来到的海外殖民地而产生的相关经济结构，开始了在艺术领域对传统的表现手法的革新，在思想上开始追求与“学院派”观点不同的新价值观。（以及这里可以补充的是，价值观的内容）</p>\n<p>蒸汽朋克的主要表现对象为工业革命背景下的种种产物，这一点自不必多提。但值得注意的是，受到第二次工业革命的时代背景的影响，印象派画家往往也热衷于在绘画中描绘能反应当时时代精神的相关社会现象：新兴中产阶级的“闲暇”生活、喷涂着蒸汽快速前行的火车、轮船等等，都是他们所喜爱的题材。除此之外，蒸汽朋克与通常的科幻流派最大的一点不同是，通常的科幻流派在作品中往往警惕科技进步可能会带给我们的危害，这样的担忧在末世、赛博朋克等题材中尤为典型；但在蒸汽朋克中占据主导地位的是一种机械唯物主义的世界观，在那个牛顿和洛克的时代，科学仍然是古典的，世界图景是明晰的，时空还是平直的，上帝是不扔色子的。人们第一次可以不借助自然力量，而单凭借自己创造的机械来改造世界，人们的物质世界、认知的深度和广度都得到极大拓展，充满了对未来的美好遐想。生活在这样的世界中，人们崇拜科学和由科学带来的力量也就不足为奇了。</p>\n<p>在精神层面，蒸汽朋克的“朋克”一词本身就意味着拒绝对传统和权威的妥协，象征着一种标新立异、创造自由乌托邦的精神内核。<a href=\"#4\">[4]</a> 而印象派画家同样也是击碎了学院派传统的种种束缚，才得以产生出能够孕育现代艺术的土壤。从蒸汽朋克作品和印象派绘画的受众群体的角度来看，我们仍能看到一种令人惊异的相似性，他们以受过良好高等教育、并享有一定闲暇时间、对艺术存在一定的鉴赏力的群体为主。</p>\n<p>那么究竟什么是科学崇拜，所谓科学崇拜，是唯科学主义的外在表现形式。唯科学主义思想源自启蒙主义，成于实证主义，其思想内核是由牛顿爵士构建的“机械唯物主义世界观”。其拥护者往往以“知识就是力量”为口号，这里的“知识”通常被他们理解为科学。拥护科学的想法似乎没什么不好，但凡事都有一个度，一旦超过了这个度，想要用科学去解释世间的一切，就不免陷入了自视为真理的泥淖。在科学对世界的解构的过程中，由于其精确性、实用性、强大性，科学逐渐在人们心中接管了宗教曾经具有的那种神性，唯科学主义也因而变成了一种与科学精神推崇的理性怀疑精神相悖的“类宗教”。<a href=\"#2\">[2]</a></p>\n<p>唯科学主义在普遍科学素养不太高的时代，有着其积极的意义。在这个目的论和决定论的机械唯物主义的世界里，世界乃至宇宙的图景都无比清晰，人与人之间的关系也被视作一种“力”的互动，在社会科学上，也有孔德试图用牛顿力学体系来构建“社会动力学”和“社会静力学”体系的尝试。这个世界并非暗淡无光，事实上由于世界图景的清晰，科学向人们承诺了一个科学终将解决一切问题的光明美好的未来。而且由于目的论的影响，各个阶层的人们都安于在庞大的“社会机械”中充当一个运转的齿轮。</p>\n<p>在我们下面的行文中，我们将分别从以上这些角度来论证，印象派和蒸汽朋克在科学崇拜这一精神内核上的共通性。</p>\n<h3 id=\"对工业和科技的赞美\"><a href=\"#对工业和科技的赞美\" class=\"headerlink\" title=\"对工业和科技的赞美\"></a>对工业和科技的赞美</h3><p>蒸汽朋克有着专属于自己的美学形式，这个形式通常被称为新维多利亚美学，其主要的表现对象是多种饱含维多利亚风格的产物，包括交通工具、武器、建筑和服装等等。这些产物通常是第二次工业革命阶段的技术有机组合构造的更复杂更超脱的审美意象，往往造型古朴、体积庞大、结构复杂且暴露在外。以蒸汽锅炉为动力，螺旋桨、齿轮、活塞、轴承、旋钮、管道共同组成眼花缭乱又极具美感的连锁装置，其令人惊异的想象力总让人联想到“阿鲁贝戈德堡机”。因为蒸汽朋克时代所有的动力都是靠纯机械装置将蒸汽产生的动力输送到动力机关来做功的，因为机械自重过大和摩擦力还有热传递等原因，蒸汽产生的动力在机械装置传导的过程中大量损耗，能量转化效率极低，但是也造就了蒸汽朋克世界观当中各种独有暴力美感的巨大机械造型。<a href=\"#3\">[3]</a> 一经启动，锅炉中升起腾腾热气，活塞错落有致地起伏，精准咬合的大小齿轮互相带动旋转，那是一幅大工业时代盛世图景的完美再现。</p>\n<p>这些工艺上具有时代特征的表现对象，在各类文艺作品中都常常见到：从电子游戏《教团 1886》特斯拉电弧枪、宫崎骏的动漫电影《风之谷》中的王虫也可视作一种异化的机械、《天空之城》中的类人机械人和漂浮之城、《哈尔的移动城堡》那座典型的蒸汽朋克风格的移动城堡等，无不洋溢着对机械质感的强烈赞美。<br><img src=\"TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg\" alt=\"特斯拉电弧枪\"></p>\n<blockquote>\n<p>关于《教团 1886》中各种蒸汽朋克风格武器介绍，可参见网友 tekkenman 整理的资料。<br><a href=\"http://bbs.a9vg.com/thread-4446281-1-1.html\" target=\"_blank\" rel=\"noopener\">『《教团 1886》中的一些特殊武器装备预热以及与当时现实中科技对比』</a></p>\n</blockquote>\n<p>在一个特殊的科幻迷群体 —— “多炮塔神教”中，还存在着“多铆蒸刚”的说法。所谓“多铆蒸刚”，指的是“多炮塔，铆钉连接，蒸汽动力，刚性悬挂”，在他们眼中“多就是美，大就是好，多属于蒸汽时代浪漫情怀的一种体现。”。<a href=\"#4\">[4]</a><br>总的来说，蒸汽朋克的机器美学集中体现了后现代艺术的精髓，百无禁忌，任想象驰骋，但又有一定规律可循，呈现一望即知的视觉风格。<a href=\"#5\">[5]</a></p>\n<p>印象派画家同样热衷于表现近代工业文明。有三幅画，非常典型地表明了印象派画家的审美取向：透纳的《被拖去解体的战舰无畏号》、《雨，蒸汽和速度》，莫奈的《圣·拉扎尔火车站》。</p>\n<p><img src=\"The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg\" alt=\"被拖去解体的战舰无畏号\"><br>《被拖去解体的战舰无畏号》意在表现一艘巨大的老式木质风帆战舰被对比起来显得渺小的蒸汽动力船拖去船坞解体，这艘战舰正是在奠定英国海上霸权地位的特拉法海战（the Battle of Trafalgar）中，营救了纳尔逊指挥的胜利号旗舰，并俘获了两艘敌舰，立下了赫赫战功的“战舰无畏号”（The Fighting Temeraire）。<br>画家选取的这戏剧性的一幕充分地显示了一个辉煌时代的落幕。远方的太阳看不出是日出还是日落，更像是画家的有意为之，它既是象征着传统社会的木质战船的落日，又是冉冉升起的工业化时代的新日。油画中可以看到，巨大的无畏号在汽轮喷吐出的蒸汽中仿佛在雾霭里一般朦胧，桅杆上的帆紧紧收着，渐渐远离平静的海面，一个时代结束了，古老的荣耀与激情如今被新的一页覆盖。小小汽船拖动巨大的木质战舰去解体，也显示了工业革命和科技的力量。画面整体所使用的暖色调，也又一次强调了画家所想表达的积极乐观的主旨。</p>\n<p><img src=\"Rain_Steam_and_Speed_the_Great_Western_Railway.jpg\" alt=\"雨、蒸汽和速度\"><br>在《雨、蒸汽和速度》中表现出大自然和两大技术发明（铁路和高架桥）之间的强烈对比。铁路和高架桥这两个人造的力量使自然景色大大改观，透纳看到并描绘了它们所有震撼人心的效果。雨水滴落的方向仿佛被机械强大的力量所扭转，这似乎象征着人类通过机械的力量对自然的征服。火车头前方有一只小野兔在奔跑，既象征着速度，又对极尽烘托出了了雨中飞驰的火车那磅礴的气势。</p>\n<p><img src=\"La_Gare_Saint-Lazare_-_Claude_Monet.jpg\" alt=\"圣·拉扎尔火车站\"><br>随着城市化进程的加快，工程师对伦敦、巴黎等大城市进行了大刀阔斧的改造，因而出现了大量全新的城市新景观。莫奈的《圣·拉扎尔火车站》，即成功地表现了现代生活最典型的景象。那巨大的停车场，有玻璃的屋顶，沉重的火车头发出暗沉沉的水蒸汽，进进出出的列车、人群，背景中澄澈的天空和蒸汽腾腾的机器之间的对照———所有这一切供给他以不平常的动人题材，谱写了一首工业文明的赞美诗。可见，当时的印象派画家不仅仅是利用刚出现不久的道路和交通手段外出作画，更是将它们看作是值得去画的创作题材，甚至比传统的作画题材更为重要，将其搬上画面，描绘出由于工业化而“变得更美的风景”，用通俗的画面让人们了解了工业化。</p>\n<h3 id=\"对现代事物及宗教的反叛\"><a href=\"#对现代事物及宗教的反叛\" class=\"headerlink\" title=\"对现代事物及宗教的反叛\"></a>对现代事物及宗教的反叛</h3><p>如果说印象派画家是通过对传统的反叛而通向未来的话，那么蒸汽朋克则是对后现代美学的反叛而回到过去。他们有着不同的起点，不同的手段，但最终却达至了相同的终点。</p>\n<p>朋克精神本质在于超越社会准则，反对除朋克外的一切，有反社会无政府主义的倾向，通常被人视作叛逆的代名词。但蒸汽朋克的反叛情绪显然要温和得多，并没有通常的科幻作品中那种科技发达、物质文明泛滥、世界被机器主宰、人际关系冷漠疏离、精神迷惘空虚的反乌托邦情绪。蒸汽朋克非但罕见阴郁低落的基调，而且往往充满了催人振奋、积极向上的情绪，这与维多利亚时代的科技乐观主义是一脉相承的。<a href=\"#5\">[5]</a></p>\n<p>有人提出了一个蒸汽朋克理念 —— “异质世界”。蒸汽朋克作品中叛逆因素的存在，更多的是为了切合架空世界的后现代表现形式。它常拼凑出一个虚幻，独立、区别于古往今来的任何一个时代的面貌，构成独一无二的异质世界。朋克世界中强调反抗和独立，总有种打破旧世界的味道。再生艺术是思维构成的自我演绎与不断完善，是艺术思维的超越性体现，也是艺术生命力的延续和变革发展。蒸汽朋克同样如此，过去与未来、想象与现实、魔幻与科学的元素互相并存，反抗并独立的延续着。它有极大的想象力，构造的是一个超现实的幻想世界，将蒸汽的力量无限扩大化。蒸汽朋克作品的主要内容就是把第一次工业革命的技术形象有机组合起来，用 19 世纪的科技实现 21 世纪当代科学产物，去构造更复杂更超脱的意象，以及这一事实造成的反差和对比给人带来的震撼力。<a href=\"#6\">[6]</a></p>\n<p>作为后现代艺术的一种，蒸汽朋克同样也质疑传统的元叙事作品的合法性，这种质疑随着元叙事的基础 — 堂皇话语环境 — 的终结而达到顶峰。传统的元叙事作品遵循的总是以英雄为主视角的堂而皇之的叙述模式，而后现代作品倾向于将堂皇叙事的社会的语境（如圣贤英雄、解放拯救、光辉的胜利、壮丽的远景等）散入叙事语言的迷雾中，使观众对堂而皇之的历史言论，或历史上的伟大“推动者”和伟大的“主题”产生怀疑，并以平凡的小人物、平凡的主题、平凡而琐碎的故事取而代之或利用堂皇叙事与平凡话语间的杂揉、拼贴和交替衍生来反衬、嘲弄元叙事的理性偏激。<a href=\"#7\">[7]</a></p>\n<p>文艺复兴时期是一个重要的转折点，达芬奇以及丢勒等艺术家对飞机、潜水艇等人造机械装置的热爱已经远远超过了工具研制的层面，而上升到了审美层面上，他们似乎要穷尽自己的脑力和心力来与上帝抗衡。通过否定上帝，肯定自身，人类对自身的肯定也随之带来了对自身造物的肯定。<a href=\"#8\">[8]</a></p>\n<p>如果说蒸汽朋克是对反直觉的现代事物的反叛（详见下文的古典机械美学），那么印象派的反叛则是多角度、更深刻的。</p>\n<p>科学技术的发展为印象派的诞生产生了巨大的影响：照相技术的出现对传统写实绘画纪实功能的消解；光学研究的新成果促使艺术家重新审视光线对物体色彩的影响；色彩研究的新成果让艺术家在画面色彩表现技巧上有了新突破；交通工具的发展为作画者的出行带来方便；颜料管的发明节约了工时，也使得户外作画成为可能；伴随对日本的经济殖民，日本浮世绘的传入引发了画家技法和思想上的思考。<a href=\"#9\">[9]</a></p>\n<p>传统的写实主义绘画，承担着为贵族记录形象和对宗教、社会事件说教的任务，画面写实技术精湛性的攀比和社会服务功能对一幅作品的好坏起到了决定性的作用。但随着摄影技术的发展和普及，当时的艺术家发现他们在耗尽全部心血完成一幅写实作品的时候，照相机在瞬间就能够记录或超越写实绘画的真实效果，写实绘画失去了记录功能的优势，这种危机感促使艺术家放弃了照片式的古典画法，转而寻找绘画艺术表现形式的新途径。<a href=\"#9\">[9]</a></p>\n<p>过去古典写实主义画家认为任何物体的固有色都是一成不变的，艺术家们完全按照物体的固有色和棕褐色的调子去观察和习惯性表现对象。牛顿、托马斯·杨等科学家建立了新的光学理论，艺术家们吸收并在自己的作品中实践了这些观念———世界万物并没有什么固有色，色彩的根源在于光，于是选取唯一真实的元素———光来诠释自然。<a href=\"#10\">[10]</a></p>\n<p>如今看来毫不起眼的颜料管的发明，事实上从三个方面极大地影响了艺术创作，曾经油画颜料无论是制作还是保存都繁琐异常。耗费在颜色调配的时间，往往数倍于作品的真正绘制的时间。而且这一点往往局限了画家作画的场地只能是在室内。最后一点，颜料管的发明，也为画师尝试使用不加调和的色彩进行作画提供了便利。如我们所知，印象派有两大主张正是“到户外去作画”、“用不加调和的色彩去表现光”。</p>\n<p>色彩的研究也有了一些新的突破，人们发现不同色彩混织一起时，从一定距离的远处看就在人的视觉中形成了这两种颜色的混合色。以及日本浮世绘的传入，使得画家们开始尝试像东方艺术一样使用单一色彩来进行单线平涂，不再追求使用精心调和的色彩来进行绘画。浮世绘带来的另一个影响是，画家用东方绘画中“步步移，面面观”的透视代替了原先的单点透视。</p>\n<p>在此之前的古典画法的主要题材要么是将相王侯、要么是宗教神话，不追求对自然风光的描绘，不需要也不能在室外作画。印象派画家的一个重大主张就是到户外去作画，而铁路交通网的覆盖，为画家们能够便利地到郊区作画提供了便利。新兴的百货商店、林荫大道、公园、咖啡馆等建筑不仅为人们提供了全新的娱乐场所，也激发了艺术家对现实生活的关注，现代景观的出现吸引了印象派画家走出画室，探索户外创作之路。不仅是对“室内作画传统”的反叛，也是对作画主题的反叛。</p>\n<h3 id=\"乐观精神-人文主义，机械唯物主义\"><a href=\"#乐观精神-人文主义，机械唯物主义\" class=\"headerlink\" title=\"乐观精神 - 人文主义，机械唯物主义\"></a>乐观精神 - 人文主义，机械唯物主义</h3><p>蒸汽朋克的作品中弥漫着浪漫主义乐观精神，工业的发展一定程度解放了劳动力，自然科学的发展破除了迷信与宗教集权政治，文化逐渐开明，人们充满了对世界的好奇心。人们对科技的发展持乐观态度。它的这种魅力是人们对乌托邦的向往。人类刚刚拥有接近神的力量，踏出解开自然奥秘的第一步。这种科技带来的神力让人们从数千年以来在繁重的体力劳动和贫乏的物质限制中获得解脱，让人们从束缚思想的封建禁锢中解放出。落后的势力和人类自诞生以来的人性缺陷又同时存在，先进与落后并存，先进与落后抗争，人们开动着巨大而笨拙的机器飞奔在文明发展的道路上，无情的碾压着旧事物，不断的探索，不断的创新，用自己的智慧谱写着工业文明辉煌的篇章，徜徉在探索新世界的浪漫主义思想中。</p>\n<p>如前文所说，蒸汽朋克的哲学本质是一种机械唯物主义。机械唯物主义的世界观之下，自然、社会乃至于组成社会的一个个基本单位 —— 人，都是机械。拉美特利就宣称：“人是机器”。<a href=\"#11\">[11]</a> 通过将世间的一切都视作平等的机械，将曾经高于人类的自然，拉到了与人类平等的地位上，从理论上为征服自然提供了法理依据。在哲学上，牛顿爵士、伏尔泰等人所创立的自然神论，认为上帝创造自然但不干涉自然，只是在自然之外默默观察，通过将上帝置于自然之外的“太上皇”地位，从而架空了上帝的权利，人的意志得以彰显。</p>\n<p>在这个机械的世界当中，所有的一切都如同钟表一般精准。无论身处社会的哪一个阶级，只要你遵从机械说明书一样的程式，那么你的未来也会如同机械一般精准而清晰。而科学承诺将会解决这世界上的一切问题，所以你的未来也会迈向一个光明的未来。</p>\n<p>蒸汽朋克代表的是一种机械之美，代表的是人类在征服自然过程中的一种重大胜利，代表了现代文明的开端，永不放弃的奋斗意志，即使在黑暗中也要等待光明的到来的念头让它的主旨充满了乐观精神。</p>\n<p>印象派作品中的乐观精神并不直接，事实上印象派画家也会描绘当时社会中的不幸事件，例如《运输船遇难》，但这些作品不占印象派作品的主流。印象派画家最喜欢的题材大多与当时中产阶级的生活方式和情趣相关。马奈的《草地上的午餐》、莫奈的阿尔让特伊沿岸（中产阶住宅区）风光、雷诺阿《游艇上的午餐》、德加的芭蕾舞演员、修拉的《大碗岛的星期日下午》等等，无不以中产阶级 “闲暇”，对世俗生活的享乐为主题。</p>\n<p>19 世纪后期的印象主义者们是典型的享乐主义者。19 世纪法国政治的变动、普法战争时期的颠沛流离，这些苦难的经历并没有在印象主义者的笔下留下痕迹，他们画中的场景一如他们眼中的阳光一般灿烂。在他们的手中，绘画不再承载道德说教的任务，只是快乐单纯地享受来自周遭视觉景象的快乐。在《视觉艺术中的现代主义和大众文化》一文中用“闲暇”来形容印象派绘画中所表现的中产阶级的生活，印象派画家通过画面中郊游、赛马、歌舞表演、咖啡厅等题材来表现出中产阶级的闲情逸致。这种有一定程度的文化和固定职业的白领阶层的闲暇生活不同于古典主义的理想式贵族生活，也不同于荷兰小画派的乡村情调的市井生活；印象派笔下的中产阶级闲暇生活与大众消费文化有关，他们的生活、消遣方式是他们在紧张的工作之余处理对通俗文化的消费。<a href=\"#12\">[12]</a></p>\n<p>如果说文艺复兴是人的主体意识（人性）的觉醒的话（在科学上表现为科学作为一支独立的力量而出现和存在，不再是神学的婢女；在艺术上表现为从“以神为中心”转向“以人为中心” ), 那么，印象派和相对论的诞生，则再一次深刻地反思了“神中心”的残存。这在科学上表现为对“独立于人而存在的绝对时间——空间”——这是神的认识能力的范围——的批判；在艺术上表现为对“完全地表现客观物体的样子”——神的认识能力——的批判。因此印象派和相对论进一步大大深化了“人中心”这一主题。<a href=\"#10\">[10]</a> 正是因为由“以神为中心”转向“以人为中心”而招致的人文主义精神，人们重新从基督教那自我指责的赎罪意识中挣脱了出来。人间不再是急于摆脱的不名一文的“尘世”，转而成为了有待于建设的天堂。而且路德和加尔文的新教改革运动，从另一个侧面又加深了这一观点：“天职”描述人们不是要以苦修、超越世俗道德的禁欲主义方式来追求上帝的应许，反而应该在俗世中，完成个人在其所处职业位置上的工作责任和义务。<a href=\"#13\">[13]</a></p>\n<h3 id=\"受众人群的相似审美观\"><a href=\"#受众人群的相似审美观\" class=\"headerlink\" title=\"受众人群的相似审美观\"></a>受众人群的相似审美观</h3><p>蒸汽朋克完美契合了工业社会普通人审美情趣的风格。 这类风格之所以有独特魅力，是因为在技术发展的高速和大众审美观念的惯性之间找到了平衡：新型机械工程师们喜爱的，那种由管道电线煤炉仪表板堆砌出来的，粗糙但准确的美感；上流社会贵族们钟爱的，那种下午茶和舞会组织起来的细密精致的美感；商人市民阶层追求的，普通实用日常生活的朴素美感。</p>\n<p>机器美学，正是这个机器主宰一切的时代的产物。机器之所以美，并不仅仅因为其实用功能，也不只因为其形式结构，更重要的是因为其在心理层面上的人造物意义。古典美学研究的是美的终极意义，那个美是虚幻的，而机器美学所研究的美是实在的，是具象的，它是被人所创造也为人所感知的，这显然是一种更加真实朴素、毫无修饰的美。正如本雅明所言，机械复制时代的艺术和文化是大众文化，而从某种意义上讲，机械美学也是一种大众美学，它几乎无处不在，尤其是在 19 世纪以后纷纷出现的那些蒸汽机、汽车、火车头和巨型轮船乃至于翱翔的飞机，它们一方面以前所未见的奇特外形刺激着人们，另一方面却频频出现在人们身旁并迅速改变着我们的生活方式。<a href=\"#8\">[8]</a></p>\n<p>古典机器美学是符合直觉的。这种直觉是一种机能化的视角，古典式机械的设计，我们想要增加动力就加一个锅炉，想要一个侧向的驱动力，齿轮组，扭杆组可以很直觉的形成模块，我们可以依靠直觉粗暴地构成一个可以运作的有机体。而这种机能主义，就如同这个技术变革刚解体原秩序，新秩序刚形成的社会生态一样，我们在解决一个社会问题，只需要建构一个符合直觉和普遍认识的机制来解决就行了，社会生态还在初期的建设阶段，而这一切是符合直觉的，也是从经验主义学理传承下来对于历史语境的推崇。故而，在这种指导下，社会的前景，科学技术的发展是有序的，可认知的，在我们经验里面也是可以明确的，这里没有人类本身之外的不确定因素，也没有社会结构的离散化，我们可以将一系列自然问题可以归元到我们的经验中和逻辑之中，来做一个判断，最后还原到技术上来解决。整个社会生态就如同一个精密设计的，符合直觉和经验的有机体，各模块（阶级，共同体）之间被分割放置，各司其职，就如同古典式机器一样。<a href=\"#15\">[15]</a> 这就是蒸汽朋克世界观给我们的美感。</p>\n<p>与蒸汽朋克类似，印象派画家同样追求符合人的直觉的视觉感官体验，对于他们来说，美得毫无瑕疵的古典画作并不是真实，那是只存在与柏拉图“理念世界”的产物。真实是你用肉眼看到的亲身体验，是笼罩在牛奶般薄雾中的“日出·印象”，是市民阶级中熟悉的日常生活中点点滴滴。有几位印象派画家比较典型：</p>\n<p>莫奈笔下的巴黎街景记录性强，在风格上类似现在的城市景观派；他所有的描绘巴黎街景的作品都是对巴黎各大街道的一种真实写照。而雷诺阿与他们不同，虽然雷诺阿大部分作品是描绘女人的，描绘巴黎街头的作品很少，但是他描绘的巴黎街头总是带有欢愉的社交氛围。</p>\n<p>印象派画家中比较特殊的一位——卡耶博特，擅于表现和巴黎现代生活息息相关的作品，尤其是表现巴黎街头的景象。虽然受印象派影响，但是他不是完全模仿印象派的创作方法而是进行实验性的探索，形成与众不同的风格。他希望最大限度的表现出这条街道在某一瞬间的真实，所以他对此时街道上的每一个事物包括细节都细致的描绘。卡耶博特的创作风格尤其是在构图上受到摄影的巨大影响，他所表现的这一场景就像摄影师在下雨天的某条巴黎街道偶然拍下的一个场景。<a href=\"#12\">[12]</a></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>而蒸汽朋克的核心魅力，或者说是比较核心的那部分科幻迷看重的东西，应该是过去时代的科学精神和社会精神。19 世纪是一个机械唯物主义泛滥的时代，不仅自然界是机械性的，人类历史也是线性的，新东西一定比老东西强，明天一定比昨天好，崇拜科学，科学只要无限发展下去就一定会掌握整个宇宙的真理。蒸汽朋克通过把故事背景调整到 19 世纪，来复苏 19 世纪的“纯洁的科学精神”，缓解一下现代科幻迷遇到的信仰危机。而印象派虽然不以科学为表现主体，它对科学的崇拜是隐性的，但受时代背景影响，一脉相承于文艺复兴中的人文主义乐观精神，以及对工业革命将现实社会改造得更加美好的颂扬都得到了充分的体现。</p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p><span id=\"1\"> [1] 维基百科 : <a href=\"https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B1%BD%E6%9C%8B%E5%85%8B</a> </span><br><span id=\"2\"> [2] 科学崇拜和合理性怀疑<em>高知识人群邪教受害者思想根源初探</em>亓馈言 </span><br><span id=\"3\"> [3] 知乎 首先说一下蒸汽朋克的时代背景 </span><br><span id=\"4\"> [4] <a href=\"https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99\" target=\"_blank\" rel=\"noopener\">https://zh.moegirl.org/%E5%A4%9A%E7%82%AE%E5%A1%94%E7%A5%9E%E6%95%99</a> </span><br><span id=\"5\"> [5] 果壳 什么是真正的蒸汽朋克？方聿南 </span><br><span id=\"6\"> [6] 从蒸汽朋克看城市再生创意的必要性<em>魏安琪 </em></span><br><span id=\"7\"> [7] 维基百科 <a href=\"https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/%E5%90%8E%E7%8E%B0%E4%BB%A3%E4%B8%BB%E4%B9%89</a> </span><br><span id=\"8\"> [8] 蒸汽朋克电影与机器美学 </span><br><span id=\"9\"> [9] 自然科学新成果对印象派绘画的影响曹跻圣 </span><br><span id=\"10\"> [10] 印象派绘画与狭义相对论物理学比较研究<em>杨正瓴 </em></span><br><span id=\"11\"> [11] 拉美特利 《人是机器》 </span><br><span id=\"12\"> [12] 印象画派的历史发展及审美特征李怀鹏 </span><br><span id=\"13\"> [13] 马克思·韦伯 新教伦理与资本主义精神 </span><br><span id=\"14\"> [14] 知乎 作者：acel rovsion 链接：<a href=\"https://www.zhihu.com/question/21722005/answer/34906841\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/21722005/answer/34906841</a> </span></p>"},{"title":"杂念","copyright":true,"date":"2019-01-29T15:15:55.000Z","comments":1,"_content":"\n藤蔓\n\n------------------------------------------------------------\n\n我在帮助他人时，如何才能让他人感觉到，我对他的帮助是出自于绝对的关心和爱，而非高人一等的怜悯。我并不因为帮助他而在精神上处于比他高的地位，他的需要帮助仅仅是由于不可抗力的不幸，你我随时都有可能遭遇同样的不幸，而帮助者和受助者在精神上都是平等的。\n\n------------------------------------------------------------\n\n星绿\n\n<!--more-->\n\n------------------------------------------------------------\n“对识字的人来说，书籍能发挥什么样的作用，艺术就能对不识字的人发挥怎样的作用“。\n\n在古希腊时期，那些完美符合黄金比例的雕像，是为了追寻那个不存在的”理念世界“，那个世界与充满了瑕疵的现实世界相对应。虽然柏拉图认为理念世界是现实世界的原型，但从逻辑上来说，理念世界是对现实世界的抽象。\n他们可以总结为表达”理念世界“这一观念。\n\n等到了中世纪，现世的一切都为了宗教而服务。之所以相比于古希腊时期，中世纪艺术距离”形似“更远，是因为人们不再追求那个源于现实世界（逻辑上）的理念世界，转而追寻彼岸天国。正是因为不在追寻理念世界，所以在艺术上追求与现实世界的形似变得毫无意义。中世纪的基督像大多表现得痛苦而扭曲，正是想要通过这种痛苦来唤起信徒心中的宗教赎罪意识。\n他们可以总结为表达”宗教意识“这一观念。\n\n文艺复兴时期，借古希腊的壳，表达人本主义。\n\n到了十八 - 十九世纪，我个人认为最能代表这一时期的流派莫过于印象派了，因为他们上承接文艺复兴的人本主义，下启现代艺术。而他们追求的，是通过”光“来精确描绘客观世界。尽管他们的画笔下的”客观世界“对于不了解他们理念的人来说，同样是模糊朦胧，跟中世纪艺术一样与客观世界存在距离的。除此之外，印象派还是艺术是否好懂的分界线，在他们之后，艺术就进入了不好懂的现代艺术，因为现代艺术想表达的观念更加抽象，不再能够仅凭直观印象就可以理解。\n\n以印象派的”不像“为契机而诞生的现代艺术，（印象派的塞尚被视为现代艺术之父）。立体主义想表达世界仅仅由简单的几何形体构成，未来主义想表达时空关系，野兽派追求用奔放的色彩来表达情感...... 逐渐的，现代艺术想要表达的观念越来越具体和琐碎，正如你所说的，不再容易被人理解。但现代艺术之所以选择走这条路，也是迫不得已，因为传统的艺术已经发展到了尽头，人们已经不再相信“理念世界”的存在，宗教也被尼采彻底击碎，从思想上必须选择别的出路。\n\n新的出路不容易理解，正如同现代哲学同样不容易被人直观理解一样。但不容易被直观理解，主要是因为服务大众不再是现代艺术的主要目的了，并不是无法理解。\n\n奥斯卡奖电影这些他们不见得迎合的就是学院派的喜好，只要很好地表达了普世价值，不一定要是现代主义的内容，同样可以获奖啊。\n而不容易理解的文学、电影，各种实验文学、实验电影很多啊，这些很难理解。\n\n------------------------------------------------------------\n\n本学年对我来说，是我个人思想上产生重大转变的一学年。来到雁栖湖校区之后，除了完成日常的学业功课之外，我收获最大的是，学会了反思，这种反思更多是哲学层面上的。咋听上去非常玄虚，但实际上我这学期通过上国科大人文学院詹琰老师的课，自己课下的阅读哲学类、文化类书籍，以及跟焦子瑞同学经常的讨论，我看待这个世界的方式发生了极大的改变。\n在过去，我是一个科学主义者，甚至是一个唯科学主义者；但现在我明白了科学是解释这个世界的一种方式。想要解释这个世界有很多种方式，甚至有很多事情是现阶段的科学不能很好解释的。这一转变并不意味着我失去了对科学的热爱，我依然热爱着知识，依然尊敬在求知道路上做出了极大牺牲的科学人。只是，我明白了这个世界是多元的，日后当我在科研、工作的闲暇之余，会对星空、道德、艺术多上一份敬畏之心。\n\n------------------------------------------------------------\n\n现世很重要，但这并不意味着那个藏在背后的世界不存在。\n\n“清晰”作为一个概念是存在的，但我怀疑其在现实中的存在。\n\n--------------------------------------------------------------------------------\n\n如果我将计算机视作理念世界对抗现实世界的产物，那么启发式算法无疑是理念世界向后退了一大步。所谓的“神经网络”更是现实世界一次耀武扬威的炫耀。\n\n--------------------------------------------------------------------------------\n你表里如一吗？不敢说完全是，但至少在竭力做到这一点。\n你为什么要这么善良？我仅仅只是品尝过痛苦的滋味，并不好受，所以我不希望别人痛苦。如果你将不希望别人痛苦定义为善良，那我就算是吧。\n\n------------------------------------------------------------\n\n桐枝晚上要回家，子瑞不在，毕竟是女孩子嘛，我送送她。\n路上我不知怎么地开始背诵起了《短歌行》，她在身边静静听着一言不发。\n我大声诵读完最后一句，这一个月来积压在心中的种种郁磊像是剑一样刺破我的胸口挣扎出来了。我心里说不出的难过，又杂夹一丝奇异的快意。\n我可能很难忘怀这一瞬间吧。\n\n------------------------------------------------------------\n\n我听说过这样一个说法（还是统计研究来着？我不记得了）:nerds 发生在白人和亚裔（准确点说是，东亚文化圈的亚裔）的概率远高于其他族裔。\n当然了，我不否认这个结论里面的种族偏见意味，你当做一家之言就好。\n看了这篇文章开头，感觉 nerds 生在中国还是挺幸运的。总体环境氛围还是崇智的。\n继续读下去，我感到自己不喜欢这篇文章中表现出来的对自己智商的优越感。任何人都不该有任何形式的优越感。\n\n普通人有抱团的温暖，nerd 有孤独的骄傲，但我却试图剥夺 nerd 在人际交往中这仅有的的骄傲，这实在算不上宽容。\n\n学（西方）哲学的好处是，曾经给你带来痛苦的那些点几乎不再能惊扰你；但与此同时，你被迫开始直面人生的虚无。\n\n要以人本身的特质去判断人，而不是人身上（自己贴的、别人贴的）的标签来判断人。\n\n------------------------------------------------------------\n\n我真的有灵魂吗？还是仅仅我自以为我拥有自我意识？\n\n“我是谁？”在 2017.10.09 的零点二十分，我人生第一次被这个问题所困扰。\n“从哪来？”我压根不关心。\n“到哪去？”曾让我思考过。\n我是谁？我或许会给自己列出一大堆标签，我似乎也拥有一些相关的记忆，但这些记忆也都非常模糊。我难道用这些非常模糊的记忆来定义我自己吗？\n过去的我，有不同的生活环境，不同的人际关系，几乎可以说每三四年就会有一个很大的变化。近几年来，这个变化的速度越来越快，快到我的身体适应了，我的灵魂却迟钝得不知道变化，慢了好几个节拍。\n我真的曾经读过那些书吗？我真的做过那些事吗？说过那些话？为什么那个“我”对我来说会如此陌生。我不知道，我身边的人换了又换，没有一个留在我身边、长到足以发现那些变化的人。也许在他们眼中，我过去就是这样，我就应该是这样，我永远都是这样吧？\n\n有欲望，真是太好了。这为大多数不会去思考意义的人赋予了一些意义。\n\n------------------------------------------------------------\n\n爱上书中的人物，有时候是因为书中的人物特别有魅力，他的经历特别能打动你，或是她碰巧就是你最喜欢的那种类型，而现实中无可替代。\n但有时候，则是怯懦得不敢在现实中恋爱，面对喜欢的人畏首畏尾，只好用书中的人物来当成寄托。\n\n白狼，一次我为我选择特莉斯，一次我为你选择叶妮法，我们俩不相负。\n\n------------------------------------------------------------\n我从小就梦想着有一天能跟好友一起随意坐在桌上，端着酒杯，深深浅浅地啜饮烈酒，深深浅浅地聊着人生。谢谢子瑞让这一天成真。\n\n发自内心的认为，与宣称自己这么认为，在思维上的不同是，前者意识不到自己是这么想的，而后者每次都会试图在内心说服自己。\n\n------------------------------------------------------------\n\n如果将我的性格比喻成动物园的野兽，思念你的痛苦就是驯服我的皮鞭，我被训得服服帖帖，竟然没有任何爱你之外的想法。\n\n------------------------------------------------------------\n\n人不仅各有志，更是每个人的天性禀赋都不一样，不必强求每个人都为了一个虚假的目标而奋斗。寄生现象无论在生物中还是人类社会中的存在都是非常合理甚至是必须的。我非常乐意当一个被寄生者，我很感谢他们，从某种意义上来说是寄生者的寄生行为帮助实现了我的个人价值。\n\n------------------------------------------------------------\n大部分人是如此的普通，他们甚至连爱都是要追求回报的。\n\n我这辈子可能是遇不到如此无私伟大的爱了，但也许，也许我能将这样的爱，给予他人。\n\n我渴望着平等之爱，但这样的爱真是可遇不可求。没关系，我心中早已有了维系一段不平等之爱的准备。\n\n------------------------------------------------------------\n\n你是我构思交织的线，你是我从天际划过的灵感。\n\n这是名为“本能”的陷阱，效果之强已经基本剥夺了我思考的能力，我非常轻松就死心塌地的陷了进去。\n它吞噬我的时间，吞噬我的精力，甚至吞噬我的能力，毫不留情，而我恭敬地双手捧上去。\n\n------------------------------------------------------------\n\n一个人可能在不是足够了解一个人的情况下，爱上一个人吗？你如何确定你的“一见钟情”不是生理冲动？\n基于这个理由，我是鄙弃“一见钟情”的。\n\n------------------------------------------------------------\n\n12.24：\n如果我做不到善良，至少要做到不残忍。\n\n但是年轻人，你太年轻，经历的太少，有时候你自己都意识不到自己的残忍。\n\n------------------------------------------------------------\n\n无知之幕时常让我感到恐惧，有时我想，万一我不具备我现在拥有的这些幸运，我该怎么办？\n当然，无知之幕从未落下（或者其实无知之幕一直都在，我因为无知而不觉得其存在），从这一点来说，我是在杞人忧天也不过分。但有的人却能心安理得地利用他们的幸运，来肆无忌惮的在不如他们幸运的人们身上磨牙吮血。\n我跟他们交流过，他告诉我，他的所为只是小恶，大恶更过分且另有其人。无论是否真有如他所说的大恶，我想对他说，“勿以恶小而为之”。\n我悲悯那些苦难者，不是为了优越感，而是我能感受到那种切肤之痛。我悲悯所有的苦难者，无关乎国籍、种族。\n\n我向小恶宣战；我向大恶宣战；我向自诩精英而行小恶者宣战；我向未知而可能的大恶者宣战。\n\n头破血流，至死方休。\n\n-------------------------------------------------------------------------------\n\n我想成为一个最普通的底层人，一个人生活。喝最劣质的白酒，抽最呛头的烟，穿着布满油污的工作服，里面套着一件全是油迹汗渍的背心。不用思考，像走兽一样活着就好。在富士康那样的工厂上班，工资只要饿不死就行。每个看到我的人，都会嫌恶地皱眉觉得这人真像一条老狗。\n\n------------------------------------------------------------\n\n我的确不怎么在乎物质，但精神又真的有大家声称的那么高的价值吗？相比虚无缥缈的精神，物质至少还能满足肉体上的需求。\n\n------------------------------------------------------------\n\n男人竟然是这么孤独的生物。坚韧失恋了，来找我。他的孤独感传染给我，让我觉得我跟他就像两根被人砍断的蠢木，隔得远远的杵在荒原上。\n最可怕的是，他们面对这种孤独却不自知。他们不知道正常的人际关系该是怎样的，他们觉得这样的孤独是人生的常态。\n\n--------------------------------------------------------------------------------\n\n世界上并不存在哲学这种东西，也并不存在世界观这种东西。人们只是在安慰自己。\n\n--------------------------------------------------------------------------------\n社会为我们描绘了一幅世界图景，并希望你能完成它的期许。这幅图景本身并无力量，但无论是认同它还是批判它的人，都相信这幅图景是真的。它的力量即来自此处。\n\n看到那些艺术家有生之年的穷困潦倒和身后作品的价值连城，不禁觉得这像是这些艺术家对社会的某种“报复”，我露出坏坏的笑容。\n\n印象派一脉相承于巴比松画派和库尔贝的现实主义，你可能会疑惑，印象派写实？事实上，印象派不仅写实，而且算是将写实发挥到了极致。这个问题涉及到什么是“真实”的思考。而印象派认为，唯有那种反学院的，用光和色来塑性的风格，才是对真实世界的客观描绘。\n你可能认为印象派是抽象的、主观的，但实际上印象派是写实主义的巅峰也是最后的绝唱。\n在印象派之前的画风都是学院的，这些学院派对于万事万物的描绘都有一套规定俗成的规范，你只能按照这个风格来画，因为他们认为这是真实。\n\n他们之所以认为这是真实，是因为受到柏拉图的“理念论”的影响，因为“理念论”认为唯有存在于那个理念中的世界才是完美的，这个理念世界的一切都是固定唯一完美的，现实世界是对理念世界的简陋模仿。\n回忆一下那些古典风格的画，里面的人物场景都完美得不像话。在实际生活中根本不可能存在这样的场景。\n\n所以，印象派只是画出了他们用自己的肉眼看到的真实。\n\n这些批评家的语言真是刻薄：“有不少保守派的批评家抱着嘲笑与批评的态度说看到最后不禁恼火，你会懊悔没有把买门票的钱送给一个穷要饭的。”\n\n--------------------------------------------------------------------------------\n\n人类的想象力真是贫乏，只能借用自己熟知事物的组合和扭曲来创造“新事物”。\n\n--------------------------------------------------------------------------------\n\n无趣的理智终于重回我的头脑。激烈的感情比嗑药还爽。生活如此乏味，我只是一个贪恋刺激的俗人，你们高看我了。\n\n--------------------------------------------------------------------------------\n\nI lost myself. 我的面目越来越模糊，我的性格越来越温和，我在水里你找不着我，我从你呼吸进入你的身体，有一天我可以被风吹散。I lost myself.\n\n--------------------------------------------------------------------------------\n\n倘若基督教只保留爱的现世关怀，而放弃死而复生的终极救赎，那我早就入教了。正是因为我不信死而复生，所以本质上我是在怀疑主的全能，这是我无法被称之为基督徒的原因。\n我不入教，反而是因为基督教承诺得太多。\n\n--------------------------------------------------------------------------------\n\n我听闻过那失落的旋律 大卫王曾弹奏它来取悦上帝\n但旅人啊 你其实并不在乎 不是吗\n纵使我信仰坚定  却也仍需经受考验\n我看见你在月色下沐浴 那美感震慑了我\n她击碎我的王座 割下我的头发 但我用沾血双唇高声赞美我的主\n宝贝啊 在认识你之前 我曾孤独生活\n在那大理石的拱顶上 我看见你的旗帜\n但爱不是胜利凯旋 而是一曲冰冷破碎的哈利路亚\n也许真有上帝存在吧 但我从爱中学到的一切 是如何击败那个与你为敌的人\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n我们越来越隐忍沉默，我们长大了。\n我们终于会学会面对生活，它不是敌人也不是朋友，它代表着世界的复杂，它是宇宙本身。\n\n--------------------------------------------------------------------------------\n\n文字、数学、门电路，这些在我眼里，都是追求精确的理念世界对抗模糊的现实世界的重大突破。\n\n--------------------------------------------------------------------------------\n\n看着窗外林立的摩天楼，在我目力所及的范围内就至少生活着几十万人，我一生见过的人恐怕也就只有几十万，我在这小小的范围内来揣度世界，无异是管中窥豹。\n一想到我热爱的这些人们，我却不能与其相识，不能深入地了解他们，就非常失落。\n\n--------------------------------------------------------------------------------\n\n我的欲求总是得寸进尺、贪得无厌，我自己清晰地明白这一点，但却无能为力，并不为我的理性所控制。\n\n--------------------------------------------------------------------------------\n\n“关键是你相信什么”，过去无法认同这句极其唯心主义的话，现在竟然能够理解了。\n这世间的价值，都是社会通过思想灌输给我。顺应你的，你称之为教育；逆反你的，你称之为洗脑。\n选取一个自己认同的道，贯彻下去吧。\n\n--------------------------------------------------------------------------------\n\n我和我的很多搞技术的朋友一样，都有着日耳曼野蛮人般的单纯。这种单纯并不完全源自善意或是本性纯良，而纯粹只是因为未历世事，远不懂得这个世界的复杂。搞搞技术，再学学哲学，很容易误认为自己掌握一部分世界的真理。为了不让自己坐井观天，我该多跟我的朋友们交流。\n\n--------------------------------------------------------------------------------\n\n肚子饿了，跑出去在路边脏摊儿买了份因饥饿而显美味的烤冷面，哪怕在这荒凉的郊区，这熟悉的一切都让我感到心安。我从未远离这充满烟火气息的、令我热爱的生活。\n\n--------------------------------------------------------------------------------\n\n对着星图在暗夜中辨识漫天的星星，寒冷空气和幸福感都让我浑身战栗。仿佛短暂离开了现世，去往了一个幻想中的世界。仿佛回到过去...\n\n--------------------------------------------------------------------------------\n1、如果一个拥有世界上所有知识的人写一本书，这该是一本怎样伟大的书啊。\n所有的作家都是地方性作家，所有作品都是地方性作品，但竟然就已经如此伟大。\n\n2、在学弟学妹的群里看到的话，很喜欢：\n下雨天感觉那个号码要跟泥土一样烂在心里了。在喉咙里打转的音节，也是一样的宿命。\n\n--------------------------------------------------------------------------------\n\n“可爱”从字面意义上来说应该是“可以被爱的”，但现今好像变成了“稚嫩”、“萌”的同义词。\n\n可以被爱的。嗯，非常高的评价了。\n\n--------------------------------------------------------------------------------\n\n我时常忘了“我”是我。\n这种时候，这具肉体会以其习以为常的行事方法以及语言风格将生活进行下去，似乎都不需要我的操控。\n上面不是我的艺术化加工，而是我的真实体验。\n\n--------------------------------------------------------------------------------\n\n我们不仅热衷于给别人贴标签，也热衷于给自己贴标签。贴标签这一行为本质是通过符号来认识并理解这个世界。\n\n通过给别人贴标签，可以节省大量去了解别人的时间成本，而且如果是面对攻击对象，可以竖起很好的靶子；通过给自己贴标签，不仅强化自我认知，而且让人在群体中找到安全感和归属感。\n\n但我希望你记住，世界以及人都是复杂的，人脑无力承担这种复杂，所以借助符号化以抽象来简化复杂，在抽象的过程中不可避免会损失大量信息。\n\n要将每一个人当做值得尊重的人，避免符号化带来的认知偏差。\n\n--------------------------------------------------------------------------------\n\n1、我凭什么如此自私，不肯把自己分享给每一个向我索取的人？\n\n2、能否包容不包容，我的回答是能，但对于不包容，我坚持保留自己内心的底线，超越底线的不包容我无法接受。\n\n--------------------------------------------------------------------------------\n\n与理工科讲究坚硬的逻辑不同，人文领域充满了隐喻和暗示。我过去以为我无法对作品做出很好的解读，要么是因为智商不够，要么是因为知识储备不够。现在看来，除这两点之外，我不适应人文学科的思维方式似乎更为重要的一点。\n\n--------------------------------------------------------------------------------\n\n死亡是我的药\n见到你就吃一颗\n\n而你从未注意过我\n\n--------------------------------------------------------------------------------\n\n在北京干燥贫瘠的空气里，我是快渴死的鱼。\n\n--------------------------------------------------------------------------------\n\n睡醒之后，不知今夕是何年。\n就像短暂失忆了一样，非得借助身边的事物才能回忆起来。\n我竟然有点喜欢这种感觉，加深了现实的虚幻感。\n\n--------------------------------------------------------------------------------\n\n我像天鹅航行\n我像石头下沉\n而时光远去\n不理我的笑柄\n\n我的纸太白\n我的墨太淡\n白昼不肯写下\n夜用铅笔涂鸦\n\n我的动物嚎叫\n我的天使不安\n却不许我\n有丝毫悔怨\n——节选自《渴望之书》（北岛 译）\n\n--------------------------------------------------------------------------------\n\n对于轻慢而肤浅的人，连指出他的肤浅的必要都没有，至少他自己的毫不谦逊的态度，已经阻绝了他认识到自己错误的可能性。\n\n--------------------------------------------------------------------------------\n\n倘若上帝真的存在该多好啊，全知全能的祂永远仁慈地注视着我，因了祂的注视，我得以摆脱永恒的孤独，我不再是宇宙中孤寂的热岛。\n\n也因了祂的存在，人与人之间才得以借助与祂的连接，真正地交融在一起。我们才能消融在祂广博的爱里。\n\n我爱你，我爱你们，我爱祢。\n\n--------------------------------------------------------------------------------\n\n明明只是十几年前，看起来却如此蛮荒古拙。非常迷人。\n\n我掌握知识，但我并不因此而高贵。我只是非常普通的一个中国人。我不能因为乡土气息就鄙薄，因为我至多只是穿了一身唬人的皮。更何况，他们比我更称得上是这个国家的主体。\n可以有知识和见识，但不要有可笑的精英意识。\n我要主动用刀子一层层剖开我的皮和内心，剩下的那才是我自己。\n\n--------------------------------------------------------------------------------\n\n人类的原罪是什么？生而为人，就是原罪。荣耀和耻辱都是我的。不要放大荣耀，也不要放大耻辱。这是一条我们没有选择的道路。\n\n--------------------------------------------------------------------------------\n\n我咀嚼这份痛苦，这让我感到莫名的快意，提醒我还活着，这份痛苦弥久历新，难以割舍。\n\n--------------------------------------------------------------------------------\n\n跟某人上山，带回了一些知识、一身露水还有两个山核桃。\n\n--------------------------------------------------------------------------------\n\n无知时，表达起自己肆无忌惮。\n\n后来懂得一点知识后，明白了自己的无知，惶惶惑惑、唯唯诺诺不敢发声，想着当我全明白之后，再来表达自己。\n\n可这是一个愚蠢的想法，表达自己这一行为是有利于求知的。而且更重要的是，如果不表达出来，没有更好的办法检验自己是否真的理解知识。\n\n（一点在学习人文学科时的感受）\n\n--------------------------------------------------------------------------------\n\n看山不是山，看水不是水。我的头脑混沌，我的世界螺旋。\n\n--------------------------------------------------------------------------------\n\n读书时，我究竟在读什么？过去我追求情绪的共鸣，现在我更多注重概念的理解。\n无论是情感还是理智，我认为并无高下之分。对书籍这一载体而言，我甚至认为情感更为可贵。\n\n--------------------------------------------------------------------------------\n\n虽然我很感激，\n\n我想看到你自然的态度，而不是刻意迎合我的态度。\n我感兴趣的是自然的你，而不是刻意迎合我的你。\n\n--------------------------------------------------------------------------------\n\n阴影暗点和光斑同时在被雾气所遮蔽的玻璃上剧烈无规则颤动。时不时有一道道影子飞速从窗户上划过。像是什么莫可名状的神秘生物。\n\n--------------------------------------------------------------------------------\n\n一种莫可名状的失落在梦中袭来，并成功将我弄醒。而我，甚至都不知道这股失落源于何处。非常讨厌这样的自己。\n\n--------------------------------------------------------------------------------\n\n我非常喜欢穿不属于我的不合身衣服，这让我有一种隐匿在别人身份之下的感觉。戴帽子也有比较类似的感受。\n我还特别喜欢所谓的“屌丝”装扮，越底层越普通不引人注意，我就越自由舒适。\n\n--------------------------------------------------------------------------------\n\n读维基百科“宋朝”词条，几百年历史只言片语间沉重覆压在身上。\n\n--------------------------------------------------------------------------------\n\n通达概念或是思想实在是太难了，诉诸情绪化的表达是多么轻松啊。\n\n--------------------------------------------------------------------------------\n\n种种寻常事物逐渐在我眼中出现异变。\n\n看多了西方油画，女人乳房在我眼中变成了成熟时可以收获的果实；读多了政治，人群在我眼中分明变成了待宰的两脚羊。\n\n我该如此自哂：所谓眼高手低就是这样吧。\n\n--------------------------------------------------------------------------------\n\n世间有这么多的苦难，人类为什么还是要挣着挣着努力活下去？\n我们追逐情爱，追逐梦想，追逐生存，人间就是地狱，可还是要活下去啊。\n\n艺术多美好，哲思多深邃，星空多迷人，竟然让人忘了自己其实生活在地狱。\n\n我想尽我所能地为世间带来温暖快乐，扪心自愧面对伤害，我却无法坦然承受并报以大爱。我为自己的狭隘羞赧不已。\n\n--------------------------------------------------------------------------------\n\n闭上眼，细细用门牙和犬齿切割刮擦咬噬骨头上软糯咸甜的皮肉，肉成胶状，其间丝丝缕缕有经络。\n\n--------------------------------------------------------------------------------\n\n午夜怀着惊惧从梦中醒来，我好渴而且呼吸困难，我想要不要干脆起床去写代码，也不知道现在几点了。\n点亮手机屏幕，看见微信有三条来信，我心中涌动起无限温柔，想着，不知道是哪个宝宝怀着心事这个时候向我倾吐一切，我也会温柔真诚以待。\n\n--------------------------------------------------------------------------------\n\n我，天真得像只小白兔。我问他，是因为我善良？蠢？还是情商低？他说，只是因为你抱有期待。\n\n--------------------------------------------------------------------------------\n\n梦中我忘了你的名字，半梦半醒，身体沉重。我支撑着，努力回忆着。\n\n--------------------------------------------------------------------------------\n\n天空和尘埃都是我的。你也是。\n\n--------------------------------------------------------------------------------\n\n读了十几年的书，却在今晚怀疑起自己的读书方式是不是根本错了。郁热多雨的夜晚，我被这个问题折磨得懊丧不已。我读过很多书，写过不算少的文字，今天突然觉得阅读和写作跟专业性极强的体能训练一样，一旦中断，能力下降之快令人咋舌。这世间有太多事我想做好，可我不是天才。\n\n--------------------------------------------------------------------------------\n\n呵气成雾，在这荒凉城市的十一月。 百寒不侵，我打开书进入另一个世界。\n\n--------------------------------------------------------------------------------\n\n正在读三国演义，袁绍真是酷到爆炸。\n“中军校尉袁绍挺身出曰：“今上即位未几，并无失德。汝欲废嫡立庶，非反而何？”卓怒曰：“天下事在我，我今为之，谁敢不从！汝视我之剑不利否？”袁绍亦拔剑曰：“汝剑利，吾剑未尝不利！”两个在筵上对敌。”\n\n--------------------------------------------------------------------------------\n\n我一点一点清除自己在互联网上留下的痕迹，细节慢慢模糊忘记，就像自己在擦去自己的记忆，说不后悔不心疼那是在自欺，可我真的没想到，我又想起你了，回忆很淡很淡却逐渐鲜活起来。\n\n--------------------------------------------------------------------------------\n\n（上面的文字写于研究生的不同时期，并非按照时间顺序整理。）\n","source":"_posts/杂念.md","raw":"---\ntitle: 杂念\ncopyright: true\ndate: 2019-01-29 23:15:55\ntags: [chaos]\ncomments:\n---\n\n藤蔓\n\n------------------------------------------------------------\n\n我在帮助他人时，如何才能让他人感觉到，我对他的帮助是出自于绝对的关心和爱，而非高人一等的怜悯。我并不因为帮助他而在精神上处于比他高的地位，他的需要帮助仅仅是由于不可抗力的不幸，你我随时都有可能遭遇同样的不幸，而帮助者和受助者在精神上都是平等的。\n\n------------------------------------------------------------\n\n星绿\n\n<!--more-->\n\n------------------------------------------------------------\n“对识字的人来说，书籍能发挥什么样的作用，艺术就能对不识字的人发挥怎样的作用“。\n\n在古希腊时期，那些完美符合黄金比例的雕像，是为了追寻那个不存在的”理念世界“，那个世界与充满了瑕疵的现实世界相对应。虽然柏拉图认为理念世界是现实世界的原型，但从逻辑上来说，理念世界是对现实世界的抽象。\n他们可以总结为表达”理念世界“这一观念。\n\n等到了中世纪，现世的一切都为了宗教而服务。之所以相比于古希腊时期，中世纪艺术距离”形似“更远，是因为人们不再追求那个源于现实世界（逻辑上）的理念世界，转而追寻彼岸天国。正是因为不在追寻理念世界，所以在艺术上追求与现实世界的形似变得毫无意义。中世纪的基督像大多表现得痛苦而扭曲，正是想要通过这种痛苦来唤起信徒心中的宗教赎罪意识。\n他们可以总结为表达”宗教意识“这一观念。\n\n文艺复兴时期，借古希腊的壳，表达人本主义。\n\n到了十八 - 十九世纪，我个人认为最能代表这一时期的流派莫过于印象派了，因为他们上承接文艺复兴的人本主义，下启现代艺术。而他们追求的，是通过”光“来精确描绘客观世界。尽管他们的画笔下的”客观世界“对于不了解他们理念的人来说，同样是模糊朦胧，跟中世纪艺术一样与客观世界存在距离的。除此之外，印象派还是艺术是否好懂的分界线，在他们之后，艺术就进入了不好懂的现代艺术，因为现代艺术想表达的观念更加抽象，不再能够仅凭直观印象就可以理解。\n\n以印象派的”不像“为契机而诞生的现代艺术，（印象派的塞尚被视为现代艺术之父）。立体主义想表达世界仅仅由简单的几何形体构成，未来主义想表达时空关系，野兽派追求用奔放的色彩来表达情感...... 逐渐的，现代艺术想要表达的观念越来越具体和琐碎，正如你所说的，不再容易被人理解。但现代艺术之所以选择走这条路，也是迫不得已，因为传统的艺术已经发展到了尽头，人们已经不再相信“理念世界”的存在，宗教也被尼采彻底击碎，从思想上必须选择别的出路。\n\n新的出路不容易理解，正如同现代哲学同样不容易被人直观理解一样。但不容易被直观理解，主要是因为服务大众不再是现代艺术的主要目的了，并不是无法理解。\n\n奥斯卡奖电影这些他们不见得迎合的就是学院派的喜好，只要很好地表达了普世价值，不一定要是现代主义的内容，同样可以获奖啊。\n而不容易理解的文学、电影，各种实验文学、实验电影很多啊，这些很难理解。\n\n------------------------------------------------------------\n\n本学年对我来说，是我个人思想上产生重大转变的一学年。来到雁栖湖校区之后，除了完成日常的学业功课之外，我收获最大的是，学会了反思，这种反思更多是哲学层面上的。咋听上去非常玄虚，但实际上我这学期通过上国科大人文学院詹琰老师的课，自己课下的阅读哲学类、文化类书籍，以及跟焦子瑞同学经常的讨论，我看待这个世界的方式发生了极大的改变。\n在过去，我是一个科学主义者，甚至是一个唯科学主义者；但现在我明白了科学是解释这个世界的一种方式。想要解释这个世界有很多种方式，甚至有很多事情是现阶段的科学不能很好解释的。这一转变并不意味着我失去了对科学的热爱，我依然热爱着知识，依然尊敬在求知道路上做出了极大牺牲的科学人。只是，我明白了这个世界是多元的，日后当我在科研、工作的闲暇之余，会对星空、道德、艺术多上一份敬畏之心。\n\n------------------------------------------------------------\n\n现世很重要，但这并不意味着那个藏在背后的世界不存在。\n\n“清晰”作为一个概念是存在的，但我怀疑其在现实中的存在。\n\n--------------------------------------------------------------------------------\n\n如果我将计算机视作理念世界对抗现实世界的产物，那么启发式算法无疑是理念世界向后退了一大步。所谓的“神经网络”更是现实世界一次耀武扬威的炫耀。\n\n--------------------------------------------------------------------------------\n你表里如一吗？不敢说完全是，但至少在竭力做到这一点。\n你为什么要这么善良？我仅仅只是品尝过痛苦的滋味，并不好受，所以我不希望别人痛苦。如果你将不希望别人痛苦定义为善良，那我就算是吧。\n\n------------------------------------------------------------\n\n桐枝晚上要回家，子瑞不在，毕竟是女孩子嘛，我送送她。\n路上我不知怎么地开始背诵起了《短歌行》，她在身边静静听着一言不发。\n我大声诵读完最后一句，这一个月来积压在心中的种种郁磊像是剑一样刺破我的胸口挣扎出来了。我心里说不出的难过，又杂夹一丝奇异的快意。\n我可能很难忘怀这一瞬间吧。\n\n------------------------------------------------------------\n\n我听说过这样一个说法（还是统计研究来着？我不记得了）:nerds 发生在白人和亚裔（准确点说是，东亚文化圈的亚裔）的概率远高于其他族裔。\n当然了，我不否认这个结论里面的种族偏见意味，你当做一家之言就好。\n看了这篇文章开头，感觉 nerds 生在中国还是挺幸运的。总体环境氛围还是崇智的。\n继续读下去，我感到自己不喜欢这篇文章中表现出来的对自己智商的优越感。任何人都不该有任何形式的优越感。\n\n普通人有抱团的温暖，nerd 有孤独的骄傲，但我却试图剥夺 nerd 在人际交往中这仅有的的骄傲，这实在算不上宽容。\n\n学（西方）哲学的好处是，曾经给你带来痛苦的那些点几乎不再能惊扰你；但与此同时，你被迫开始直面人生的虚无。\n\n要以人本身的特质去判断人，而不是人身上（自己贴的、别人贴的）的标签来判断人。\n\n------------------------------------------------------------\n\n我真的有灵魂吗？还是仅仅我自以为我拥有自我意识？\n\n“我是谁？”在 2017.10.09 的零点二十分，我人生第一次被这个问题所困扰。\n“从哪来？”我压根不关心。\n“到哪去？”曾让我思考过。\n我是谁？我或许会给自己列出一大堆标签，我似乎也拥有一些相关的记忆，但这些记忆也都非常模糊。我难道用这些非常模糊的记忆来定义我自己吗？\n过去的我，有不同的生活环境，不同的人际关系，几乎可以说每三四年就会有一个很大的变化。近几年来，这个变化的速度越来越快，快到我的身体适应了，我的灵魂却迟钝得不知道变化，慢了好几个节拍。\n我真的曾经读过那些书吗？我真的做过那些事吗？说过那些话？为什么那个“我”对我来说会如此陌生。我不知道，我身边的人换了又换，没有一个留在我身边、长到足以发现那些变化的人。也许在他们眼中，我过去就是这样，我就应该是这样，我永远都是这样吧？\n\n有欲望，真是太好了。这为大多数不会去思考意义的人赋予了一些意义。\n\n------------------------------------------------------------\n\n爱上书中的人物，有时候是因为书中的人物特别有魅力，他的经历特别能打动你，或是她碰巧就是你最喜欢的那种类型，而现实中无可替代。\n但有时候，则是怯懦得不敢在现实中恋爱，面对喜欢的人畏首畏尾，只好用书中的人物来当成寄托。\n\n白狼，一次我为我选择特莉斯，一次我为你选择叶妮法，我们俩不相负。\n\n------------------------------------------------------------\n我从小就梦想着有一天能跟好友一起随意坐在桌上，端着酒杯，深深浅浅地啜饮烈酒，深深浅浅地聊着人生。谢谢子瑞让这一天成真。\n\n发自内心的认为，与宣称自己这么认为，在思维上的不同是，前者意识不到自己是这么想的，而后者每次都会试图在内心说服自己。\n\n------------------------------------------------------------\n\n如果将我的性格比喻成动物园的野兽，思念你的痛苦就是驯服我的皮鞭，我被训得服服帖帖，竟然没有任何爱你之外的想法。\n\n------------------------------------------------------------\n\n人不仅各有志，更是每个人的天性禀赋都不一样，不必强求每个人都为了一个虚假的目标而奋斗。寄生现象无论在生物中还是人类社会中的存在都是非常合理甚至是必须的。我非常乐意当一个被寄生者，我很感谢他们，从某种意义上来说是寄生者的寄生行为帮助实现了我的个人价值。\n\n------------------------------------------------------------\n大部分人是如此的普通，他们甚至连爱都是要追求回报的。\n\n我这辈子可能是遇不到如此无私伟大的爱了，但也许，也许我能将这样的爱，给予他人。\n\n我渴望着平等之爱，但这样的爱真是可遇不可求。没关系，我心中早已有了维系一段不平等之爱的准备。\n\n------------------------------------------------------------\n\n你是我构思交织的线，你是我从天际划过的灵感。\n\n这是名为“本能”的陷阱，效果之强已经基本剥夺了我思考的能力，我非常轻松就死心塌地的陷了进去。\n它吞噬我的时间，吞噬我的精力，甚至吞噬我的能力，毫不留情，而我恭敬地双手捧上去。\n\n------------------------------------------------------------\n\n一个人可能在不是足够了解一个人的情况下，爱上一个人吗？你如何确定你的“一见钟情”不是生理冲动？\n基于这个理由，我是鄙弃“一见钟情”的。\n\n------------------------------------------------------------\n\n12.24：\n如果我做不到善良，至少要做到不残忍。\n\n但是年轻人，你太年轻，经历的太少，有时候你自己都意识不到自己的残忍。\n\n------------------------------------------------------------\n\n无知之幕时常让我感到恐惧，有时我想，万一我不具备我现在拥有的这些幸运，我该怎么办？\n当然，无知之幕从未落下（或者其实无知之幕一直都在，我因为无知而不觉得其存在），从这一点来说，我是在杞人忧天也不过分。但有的人却能心安理得地利用他们的幸运，来肆无忌惮的在不如他们幸运的人们身上磨牙吮血。\n我跟他们交流过，他告诉我，他的所为只是小恶，大恶更过分且另有其人。无论是否真有如他所说的大恶，我想对他说，“勿以恶小而为之”。\n我悲悯那些苦难者，不是为了优越感，而是我能感受到那种切肤之痛。我悲悯所有的苦难者，无关乎国籍、种族。\n\n我向小恶宣战；我向大恶宣战；我向自诩精英而行小恶者宣战；我向未知而可能的大恶者宣战。\n\n头破血流，至死方休。\n\n-------------------------------------------------------------------------------\n\n我想成为一个最普通的底层人，一个人生活。喝最劣质的白酒，抽最呛头的烟，穿着布满油污的工作服，里面套着一件全是油迹汗渍的背心。不用思考，像走兽一样活着就好。在富士康那样的工厂上班，工资只要饿不死就行。每个看到我的人，都会嫌恶地皱眉觉得这人真像一条老狗。\n\n------------------------------------------------------------\n\n我的确不怎么在乎物质，但精神又真的有大家声称的那么高的价值吗？相比虚无缥缈的精神，物质至少还能满足肉体上的需求。\n\n------------------------------------------------------------\n\n男人竟然是这么孤独的生物。坚韧失恋了，来找我。他的孤独感传染给我，让我觉得我跟他就像两根被人砍断的蠢木，隔得远远的杵在荒原上。\n最可怕的是，他们面对这种孤独却不自知。他们不知道正常的人际关系该是怎样的，他们觉得这样的孤独是人生的常态。\n\n--------------------------------------------------------------------------------\n\n世界上并不存在哲学这种东西，也并不存在世界观这种东西。人们只是在安慰自己。\n\n--------------------------------------------------------------------------------\n社会为我们描绘了一幅世界图景，并希望你能完成它的期许。这幅图景本身并无力量，但无论是认同它还是批判它的人，都相信这幅图景是真的。它的力量即来自此处。\n\n看到那些艺术家有生之年的穷困潦倒和身后作品的价值连城，不禁觉得这像是这些艺术家对社会的某种“报复”，我露出坏坏的笑容。\n\n印象派一脉相承于巴比松画派和库尔贝的现实主义，你可能会疑惑，印象派写实？事实上，印象派不仅写实，而且算是将写实发挥到了极致。这个问题涉及到什么是“真实”的思考。而印象派认为，唯有那种反学院的，用光和色来塑性的风格，才是对真实世界的客观描绘。\n你可能认为印象派是抽象的、主观的，但实际上印象派是写实主义的巅峰也是最后的绝唱。\n在印象派之前的画风都是学院的，这些学院派对于万事万物的描绘都有一套规定俗成的规范，你只能按照这个风格来画，因为他们认为这是真实。\n\n他们之所以认为这是真实，是因为受到柏拉图的“理念论”的影响，因为“理念论”认为唯有存在于那个理念中的世界才是完美的，这个理念世界的一切都是固定唯一完美的，现实世界是对理念世界的简陋模仿。\n回忆一下那些古典风格的画，里面的人物场景都完美得不像话。在实际生活中根本不可能存在这样的场景。\n\n所以，印象派只是画出了他们用自己的肉眼看到的真实。\n\n这些批评家的语言真是刻薄：“有不少保守派的批评家抱着嘲笑与批评的态度说看到最后不禁恼火，你会懊悔没有把买门票的钱送给一个穷要饭的。”\n\n--------------------------------------------------------------------------------\n\n人类的想象力真是贫乏，只能借用自己熟知事物的组合和扭曲来创造“新事物”。\n\n--------------------------------------------------------------------------------\n\n无趣的理智终于重回我的头脑。激烈的感情比嗑药还爽。生活如此乏味，我只是一个贪恋刺激的俗人，你们高看我了。\n\n--------------------------------------------------------------------------------\n\nI lost myself. 我的面目越来越模糊，我的性格越来越温和，我在水里你找不着我，我从你呼吸进入你的身体，有一天我可以被风吹散。I lost myself.\n\n--------------------------------------------------------------------------------\n\n倘若基督教只保留爱的现世关怀，而放弃死而复生的终极救赎，那我早就入教了。正是因为我不信死而复生，所以本质上我是在怀疑主的全能，这是我无法被称之为基督徒的原因。\n我不入教，反而是因为基督教承诺得太多。\n\n--------------------------------------------------------------------------------\n\n我听闻过那失落的旋律 大卫王曾弹奏它来取悦上帝\n但旅人啊 你其实并不在乎 不是吗\n纵使我信仰坚定  却也仍需经受考验\n我看见你在月色下沐浴 那美感震慑了我\n她击碎我的王座 割下我的头发 但我用沾血双唇高声赞美我的主\n宝贝啊 在认识你之前 我曾孤独生活\n在那大理石的拱顶上 我看见你的旗帜\n但爱不是胜利凯旋 而是一曲冰冷破碎的哈利路亚\n也许真有上帝存在吧 但我从爱中学到的一切 是如何击败那个与你为敌的人\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n我们越来越隐忍沉默，我们长大了。\n我们终于会学会面对生活，它不是敌人也不是朋友，它代表着世界的复杂，它是宇宙本身。\n\n--------------------------------------------------------------------------------\n\n文字、数学、门电路，这些在我眼里，都是追求精确的理念世界对抗模糊的现实世界的重大突破。\n\n--------------------------------------------------------------------------------\n\n看着窗外林立的摩天楼，在我目力所及的范围内就至少生活着几十万人，我一生见过的人恐怕也就只有几十万，我在这小小的范围内来揣度世界，无异是管中窥豹。\n一想到我热爱的这些人们，我却不能与其相识，不能深入地了解他们，就非常失落。\n\n--------------------------------------------------------------------------------\n\n我的欲求总是得寸进尺、贪得无厌，我自己清晰地明白这一点，但却无能为力，并不为我的理性所控制。\n\n--------------------------------------------------------------------------------\n\n“关键是你相信什么”，过去无法认同这句极其唯心主义的话，现在竟然能够理解了。\n这世间的价值，都是社会通过思想灌输给我。顺应你的，你称之为教育；逆反你的，你称之为洗脑。\n选取一个自己认同的道，贯彻下去吧。\n\n--------------------------------------------------------------------------------\n\n我和我的很多搞技术的朋友一样，都有着日耳曼野蛮人般的单纯。这种单纯并不完全源自善意或是本性纯良，而纯粹只是因为未历世事，远不懂得这个世界的复杂。搞搞技术，再学学哲学，很容易误认为自己掌握一部分世界的真理。为了不让自己坐井观天，我该多跟我的朋友们交流。\n\n--------------------------------------------------------------------------------\n\n肚子饿了，跑出去在路边脏摊儿买了份因饥饿而显美味的烤冷面，哪怕在这荒凉的郊区，这熟悉的一切都让我感到心安。我从未远离这充满烟火气息的、令我热爱的生活。\n\n--------------------------------------------------------------------------------\n\n对着星图在暗夜中辨识漫天的星星，寒冷空气和幸福感都让我浑身战栗。仿佛短暂离开了现世，去往了一个幻想中的世界。仿佛回到过去...\n\n--------------------------------------------------------------------------------\n1、如果一个拥有世界上所有知识的人写一本书，这该是一本怎样伟大的书啊。\n所有的作家都是地方性作家，所有作品都是地方性作品，但竟然就已经如此伟大。\n\n2、在学弟学妹的群里看到的话，很喜欢：\n下雨天感觉那个号码要跟泥土一样烂在心里了。在喉咙里打转的音节，也是一样的宿命。\n\n--------------------------------------------------------------------------------\n\n“可爱”从字面意义上来说应该是“可以被爱的”，但现今好像变成了“稚嫩”、“萌”的同义词。\n\n可以被爱的。嗯，非常高的评价了。\n\n--------------------------------------------------------------------------------\n\n我时常忘了“我”是我。\n这种时候，这具肉体会以其习以为常的行事方法以及语言风格将生活进行下去，似乎都不需要我的操控。\n上面不是我的艺术化加工，而是我的真实体验。\n\n--------------------------------------------------------------------------------\n\n我们不仅热衷于给别人贴标签，也热衷于给自己贴标签。贴标签这一行为本质是通过符号来认识并理解这个世界。\n\n通过给别人贴标签，可以节省大量去了解别人的时间成本，而且如果是面对攻击对象，可以竖起很好的靶子；通过给自己贴标签，不仅强化自我认知，而且让人在群体中找到安全感和归属感。\n\n但我希望你记住，世界以及人都是复杂的，人脑无力承担这种复杂，所以借助符号化以抽象来简化复杂，在抽象的过程中不可避免会损失大量信息。\n\n要将每一个人当做值得尊重的人，避免符号化带来的认知偏差。\n\n--------------------------------------------------------------------------------\n\n1、我凭什么如此自私，不肯把自己分享给每一个向我索取的人？\n\n2、能否包容不包容，我的回答是能，但对于不包容，我坚持保留自己内心的底线，超越底线的不包容我无法接受。\n\n--------------------------------------------------------------------------------\n\n与理工科讲究坚硬的逻辑不同，人文领域充满了隐喻和暗示。我过去以为我无法对作品做出很好的解读，要么是因为智商不够，要么是因为知识储备不够。现在看来，除这两点之外，我不适应人文学科的思维方式似乎更为重要的一点。\n\n--------------------------------------------------------------------------------\n\n死亡是我的药\n见到你就吃一颗\n\n而你从未注意过我\n\n--------------------------------------------------------------------------------\n\n在北京干燥贫瘠的空气里，我是快渴死的鱼。\n\n--------------------------------------------------------------------------------\n\n睡醒之后，不知今夕是何年。\n就像短暂失忆了一样，非得借助身边的事物才能回忆起来。\n我竟然有点喜欢这种感觉，加深了现实的虚幻感。\n\n--------------------------------------------------------------------------------\n\n我像天鹅航行\n我像石头下沉\n而时光远去\n不理我的笑柄\n\n我的纸太白\n我的墨太淡\n白昼不肯写下\n夜用铅笔涂鸦\n\n我的动物嚎叫\n我的天使不安\n却不许我\n有丝毫悔怨\n——节选自《渴望之书》（北岛 译）\n\n--------------------------------------------------------------------------------\n\n对于轻慢而肤浅的人，连指出他的肤浅的必要都没有，至少他自己的毫不谦逊的态度，已经阻绝了他认识到自己错误的可能性。\n\n--------------------------------------------------------------------------------\n\n倘若上帝真的存在该多好啊，全知全能的祂永远仁慈地注视着我，因了祂的注视，我得以摆脱永恒的孤独，我不再是宇宙中孤寂的热岛。\n\n也因了祂的存在，人与人之间才得以借助与祂的连接，真正地交融在一起。我们才能消融在祂广博的爱里。\n\n我爱你，我爱你们，我爱祢。\n\n--------------------------------------------------------------------------------\n\n明明只是十几年前，看起来却如此蛮荒古拙。非常迷人。\n\n我掌握知识，但我并不因此而高贵。我只是非常普通的一个中国人。我不能因为乡土气息就鄙薄，因为我至多只是穿了一身唬人的皮。更何况，他们比我更称得上是这个国家的主体。\n可以有知识和见识，但不要有可笑的精英意识。\n我要主动用刀子一层层剖开我的皮和内心，剩下的那才是我自己。\n\n--------------------------------------------------------------------------------\n\n人类的原罪是什么？生而为人，就是原罪。荣耀和耻辱都是我的。不要放大荣耀，也不要放大耻辱。这是一条我们没有选择的道路。\n\n--------------------------------------------------------------------------------\n\n我咀嚼这份痛苦，这让我感到莫名的快意，提醒我还活着，这份痛苦弥久历新，难以割舍。\n\n--------------------------------------------------------------------------------\n\n跟某人上山，带回了一些知识、一身露水还有两个山核桃。\n\n--------------------------------------------------------------------------------\n\n无知时，表达起自己肆无忌惮。\n\n后来懂得一点知识后，明白了自己的无知，惶惶惑惑、唯唯诺诺不敢发声，想着当我全明白之后，再来表达自己。\n\n可这是一个愚蠢的想法，表达自己这一行为是有利于求知的。而且更重要的是，如果不表达出来，没有更好的办法检验自己是否真的理解知识。\n\n（一点在学习人文学科时的感受）\n\n--------------------------------------------------------------------------------\n\n看山不是山，看水不是水。我的头脑混沌，我的世界螺旋。\n\n--------------------------------------------------------------------------------\n\n读书时，我究竟在读什么？过去我追求情绪的共鸣，现在我更多注重概念的理解。\n无论是情感还是理智，我认为并无高下之分。对书籍这一载体而言，我甚至认为情感更为可贵。\n\n--------------------------------------------------------------------------------\n\n虽然我很感激，\n\n我想看到你自然的态度，而不是刻意迎合我的态度。\n我感兴趣的是自然的你，而不是刻意迎合我的你。\n\n--------------------------------------------------------------------------------\n\n阴影暗点和光斑同时在被雾气所遮蔽的玻璃上剧烈无规则颤动。时不时有一道道影子飞速从窗户上划过。像是什么莫可名状的神秘生物。\n\n--------------------------------------------------------------------------------\n\n一种莫可名状的失落在梦中袭来，并成功将我弄醒。而我，甚至都不知道这股失落源于何处。非常讨厌这样的自己。\n\n--------------------------------------------------------------------------------\n\n我非常喜欢穿不属于我的不合身衣服，这让我有一种隐匿在别人身份之下的感觉。戴帽子也有比较类似的感受。\n我还特别喜欢所谓的“屌丝”装扮，越底层越普通不引人注意，我就越自由舒适。\n\n--------------------------------------------------------------------------------\n\n读维基百科“宋朝”词条，几百年历史只言片语间沉重覆压在身上。\n\n--------------------------------------------------------------------------------\n\n通达概念或是思想实在是太难了，诉诸情绪化的表达是多么轻松啊。\n\n--------------------------------------------------------------------------------\n\n种种寻常事物逐渐在我眼中出现异变。\n\n看多了西方油画，女人乳房在我眼中变成了成熟时可以收获的果实；读多了政治，人群在我眼中分明变成了待宰的两脚羊。\n\n我该如此自哂：所谓眼高手低就是这样吧。\n\n--------------------------------------------------------------------------------\n\n世间有这么多的苦难，人类为什么还是要挣着挣着努力活下去？\n我们追逐情爱，追逐梦想，追逐生存，人间就是地狱，可还是要活下去啊。\n\n艺术多美好，哲思多深邃，星空多迷人，竟然让人忘了自己其实生活在地狱。\n\n我想尽我所能地为世间带来温暖快乐，扪心自愧面对伤害，我却无法坦然承受并报以大爱。我为自己的狭隘羞赧不已。\n\n--------------------------------------------------------------------------------\n\n闭上眼，细细用门牙和犬齿切割刮擦咬噬骨头上软糯咸甜的皮肉，肉成胶状，其间丝丝缕缕有经络。\n\n--------------------------------------------------------------------------------\n\n午夜怀着惊惧从梦中醒来，我好渴而且呼吸困难，我想要不要干脆起床去写代码，也不知道现在几点了。\n点亮手机屏幕，看见微信有三条来信，我心中涌动起无限温柔，想着，不知道是哪个宝宝怀着心事这个时候向我倾吐一切，我也会温柔真诚以待。\n\n--------------------------------------------------------------------------------\n\n我，天真得像只小白兔。我问他，是因为我善良？蠢？还是情商低？他说，只是因为你抱有期待。\n\n--------------------------------------------------------------------------------\n\n梦中我忘了你的名字，半梦半醒，身体沉重。我支撑着，努力回忆着。\n\n--------------------------------------------------------------------------------\n\n天空和尘埃都是我的。你也是。\n\n--------------------------------------------------------------------------------\n\n读了十几年的书，却在今晚怀疑起自己的读书方式是不是根本错了。郁热多雨的夜晚，我被这个问题折磨得懊丧不已。我读过很多书，写过不算少的文字，今天突然觉得阅读和写作跟专业性极强的体能训练一样，一旦中断，能力下降之快令人咋舌。这世间有太多事我想做好，可我不是天才。\n\n--------------------------------------------------------------------------------\n\n呵气成雾，在这荒凉城市的十一月。 百寒不侵，我打开书进入另一个世界。\n\n--------------------------------------------------------------------------------\n\n正在读三国演义，袁绍真是酷到爆炸。\n“中军校尉袁绍挺身出曰：“今上即位未几，并无失德。汝欲废嫡立庶，非反而何？”卓怒曰：“天下事在我，我今为之，谁敢不从！汝视我之剑不利否？”袁绍亦拔剑曰：“汝剑利，吾剑未尝不利！”两个在筵上对敌。”\n\n--------------------------------------------------------------------------------\n\n我一点一点清除自己在互联网上留下的痕迹，细节慢慢模糊忘记，就像自己在擦去自己的记忆，说不后悔不心疼那是在自欺，可我真的没想到，我又想起你了，回忆很淡很淡却逐渐鲜活起来。\n\n--------------------------------------------------------------------------------\n\n（上面的文字写于研究生的不同时期，并非按照时间顺序整理。）\n","slug":"杂念","published":1,"updated":"2019-03-07T01:47:36.198Z","layout":"post","photos":[],"link":"","_id":"cjucbl8nk001jb9fsmjnty6ns","content":"<p>藤蔓</p>\n<hr>\n<p>我在帮助他人时，如何才能让他人感觉到，我对他的帮助是出自于绝对的关心和爱，而非高人一等的怜悯。我并不因为帮助他而在精神上处于比他高的地位，他的需要帮助仅仅是由于不可抗力的不幸，你我随时都有可能遭遇同样的不幸，而帮助者和受助者在精神上都是平等的。</p>\n<hr>\n<p>星绿</p>\n<a id=\"more\"></a>\n<hr>\n<p>“对识字的人来说，书籍能发挥什么样的作用，艺术就能对不识字的人发挥怎样的作用“。</p>\n<p>在古希腊时期，那些完美符合黄金比例的雕像，是为了追寻那个不存在的”理念世界“，那个世界与充满了瑕疵的现实世界相对应。虽然柏拉图认为理念世界是现实世界的原型，但从逻辑上来说，理念世界是对现实世界的抽象。<br>他们可以总结为表达”理念世界“这一观念。</p>\n<p>等到了中世纪，现世的一切都为了宗教而服务。之所以相比于古希腊时期，中世纪艺术距离”形似“更远，是因为人们不再追求那个源于现实世界（逻辑上）的理念世界，转而追寻彼岸天国。正是因为不在追寻理念世界，所以在艺术上追求与现实世界的形似变得毫无意义。中世纪的基督像大多表现得痛苦而扭曲，正是想要通过这种痛苦来唤起信徒心中的宗教赎罪意识。<br>他们可以总结为表达”宗教意识“这一观念。</p>\n<p>文艺复兴时期，借古希腊的壳，表达人本主义。</p>\n<p>到了十八 - 十九世纪，我个人认为最能代表这一时期的流派莫过于印象派了，因为他们上承接文艺复兴的人本主义，下启现代艺术。而他们追求的，是通过”光“来精确描绘客观世界。尽管他们的画笔下的”客观世界“对于不了解他们理念的人来说，同样是模糊朦胧，跟中世纪艺术一样与客观世界存在距离的。除此之外，印象派还是艺术是否好懂的分界线，在他们之后，艺术就进入了不好懂的现代艺术，因为现代艺术想表达的观念更加抽象，不再能够仅凭直观印象就可以理解。</p>\n<p>以印象派的”不像“为契机而诞生的现代艺术，（印象派的塞尚被视为现代艺术之父）。立体主义想表达世界仅仅由简单的几何形体构成，未来主义想表达时空关系，野兽派追求用奔放的色彩来表达情感…… 逐渐的，现代艺术想要表达的观念越来越具体和琐碎，正如你所说的，不再容易被人理解。但现代艺术之所以选择走这条路，也是迫不得已，因为传统的艺术已经发展到了尽头，人们已经不再相信“理念世界”的存在，宗教也被尼采彻底击碎，从思想上必须选择别的出路。</p>\n<p>新的出路不容易理解，正如同现代哲学同样不容易被人直观理解一样。但不容易被直观理解，主要是因为服务大众不再是现代艺术的主要目的了，并不是无法理解。</p>\n<p>奥斯卡奖电影这些他们不见得迎合的就是学院派的喜好，只要很好地表达了普世价值，不一定要是现代主义的内容，同样可以获奖啊。<br>而不容易理解的文学、电影，各种实验文学、实验电影很多啊，这些很难理解。</p>\n<hr>\n<p>本学年对我来说，是我个人思想上产生重大转变的一学年。来到雁栖湖校区之后，除了完成日常的学业功课之外，我收获最大的是，学会了反思，这种反思更多是哲学层面上的。咋听上去非常玄虚，但实际上我这学期通过上国科大人文学院詹琰老师的课，自己课下的阅读哲学类、文化类书籍，以及跟焦子瑞同学经常的讨论，我看待这个世界的方式发生了极大的改变。<br>在过去，我是一个科学主义者，甚至是一个唯科学主义者；但现在我明白了科学是解释这个世界的一种方式。想要解释这个世界有很多种方式，甚至有很多事情是现阶段的科学不能很好解释的。这一转变并不意味着我失去了对科学的热爱，我依然热爱着知识，依然尊敬在求知道路上做出了极大牺牲的科学人。只是，我明白了这个世界是多元的，日后当我在科研、工作的闲暇之余，会对星空、道德、艺术多上一份敬畏之心。</p>\n<hr>\n<p>现世很重要，但这并不意味着那个藏在背后的世界不存在。</p>\n<p>“清晰”作为一个概念是存在的，但我怀疑其在现实中的存在。</p>\n<hr>\n<p>如果我将计算机视作理念世界对抗现实世界的产物，那么启发式算法无疑是理念世界向后退了一大步。所谓的“神经网络”更是现实世界一次耀武扬威的炫耀。</p>\n<hr>\n<p>你表里如一吗？不敢说完全是，但至少在竭力做到这一点。<br>你为什么要这么善良？我仅仅只是品尝过痛苦的滋味，并不好受，所以我不希望别人痛苦。如果你将不希望别人痛苦定义为善良，那我就算是吧。</p>\n<hr>\n<p>桐枝晚上要回家，子瑞不在，毕竟是女孩子嘛，我送送她。<br>路上我不知怎么地开始背诵起了《短歌行》，她在身边静静听着一言不发。<br>我大声诵读完最后一句，这一个月来积压在心中的种种郁磊像是剑一样刺破我的胸口挣扎出来了。我心里说不出的难过，又杂夹一丝奇异的快意。<br>我可能很难忘怀这一瞬间吧。</p>\n<hr>\n<p>我听说过这样一个说法（还是统计研究来着？我不记得了）:nerds 发生在白人和亚裔（准确点说是，东亚文化圈的亚裔）的概率远高于其他族裔。<br>当然了，我不否认这个结论里面的种族偏见意味，你当做一家之言就好。<br>看了这篇文章开头，感觉 nerds 生在中国还是挺幸运的。总体环境氛围还是崇智的。<br>继续读下去，我感到自己不喜欢这篇文章中表现出来的对自己智商的优越感。任何人都不该有任何形式的优越感。</p>\n<p>普通人有抱团的温暖，nerd 有孤独的骄傲，但我却试图剥夺 nerd 在人际交往中这仅有的的骄傲，这实在算不上宽容。</p>\n<p>学（西方）哲学的好处是，曾经给你带来痛苦的那些点几乎不再能惊扰你；但与此同时，你被迫开始直面人生的虚无。</p>\n<p>要以人本身的特质去判断人，而不是人身上（自己贴的、别人贴的）的标签来判断人。</p>\n<hr>\n<p>我真的有灵魂吗？还是仅仅我自以为我拥有自我意识？</p>\n<p>“我是谁？”在 2017.10.09 的零点二十分，我人生第一次被这个问题所困扰。<br>“从哪来？”我压根不关心。<br>“到哪去？”曾让我思考过。<br>我是谁？我或许会给自己列出一大堆标签，我似乎也拥有一些相关的记忆，但这些记忆也都非常模糊。我难道用这些非常模糊的记忆来定义我自己吗？<br>过去的我，有不同的生活环境，不同的人际关系，几乎可以说每三四年就会有一个很大的变化。近几年来，这个变化的速度越来越快，快到我的身体适应了，我的灵魂却迟钝得不知道变化，慢了好几个节拍。<br>我真的曾经读过那些书吗？我真的做过那些事吗？说过那些话？为什么那个“我”对我来说会如此陌生。我不知道，我身边的人换了又换，没有一个留在我身边、长到足以发现那些变化的人。也许在他们眼中，我过去就是这样，我就应该是这样，我永远都是这样吧？</p>\n<p>有欲望，真是太好了。这为大多数不会去思考意义的人赋予了一些意义。</p>\n<hr>\n<p>爱上书中的人物，有时候是因为书中的人物特别有魅力，他的经历特别能打动你，或是她碰巧就是你最喜欢的那种类型，而现实中无可替代。<br>但有时候，则是怯懦得不敢在现实中恋爱，面对喜欢的人畏首畏尾，只好用书中的人物来当成寄托。</p>\n<p>白狼，一次我为我选择特莉斯，一次我为你选择叶妮法，我们俩不相负。</p>\n<hr>\n<p>我从小就梦想着有一天能跟好友一起随意坐在桌上，端着酒杯，深深浅浅地啜饮烈酒，深深浅浅地聊着人生。谢谢子瑞让这一天成真。</p>\n<p>发自内心的认为，与宣称自己这么认为，在思维上的不同是，前者意识不到自己是这么想的，而后者每次都会试图在内心说服自己。</p>\n<hr>\n<p>如果将我的性格比喻成动物园的野兽，思念你的痛苦就是驯服我的皮鞭，我被训得服服帖帖，竟然没有任何爱你之外的想法。</p>\n<hr>\n<p>人不仅各有志，更是每个人的天性禀赋都不一样，不必强求每个人都为了一个虚假的目标而奋斗。寄生现象无论在生物中还是人类社会中的存在都是非常合理甚至是必须的。我非常乐意当一个被寄生者，我很感谢他们，从某种意义上来说是寄生者的寄生行为帮助实现了我的个人价值。</p>\n<hr>\n<p>大部分人是如此的普通，他们甚至连爱都是要追求回报的。</p>\n<p>我这辈子可能是遇不到如此无私伟大的爱了，但也许，也许我能将这样的爱，给予他人。</p>\n<p>我渴望着平等之爱，但这样的爱真是可遇不可求。没关系，我心中早已有了维系一段不平等之爱的准备。</p>\n<hr>\n<p>你是我构思交织的线，你是我从天际划过的灵感。</p>\n<p>这是名为“本能”的陷阱，效果之强已经基本剥夺了我思考的能力，我非常轻松就死心塌地的陷了进去。<br>它吞噬我的时间，吞噬我的精力，甚至吞噬我的能力，毫不留情，而我恭敬地双手捧上去。</p>\n<hr>\n<p>一个人可能在不是足够了解一个人的情况下，爱上一个人吗？你如何确定你的“一见钟情”不是生理冲动？<br>基于这个理由，我是鄙弃“一见钟情”的。</p>\n<hr>\n<p>12.24：<br>如果我做不到善良，至少要做到不残忍。</p>\n<p>但是年轻人，你太年轻，经历的太少，有时候你自己都意识不到自己的残忍。</p>\n<hr>\n<p>无知之幕时常让我感到恐惧，有时我想，万一我不具备我现在拥有的这些幸运，我该怎么办？<br>当然，无知之幕从未落下（或者其实无知之幕一直都在，我因为无知而不觉得其存在），从这一点来说，我是在杞人忧天也不过分。但有的人却能心安理得地利用他们的幸运，来肆无忌惮的在不如他们幸运的人们身上磨牙吮血。<br>我跟他们交流过，他告诉我，他的所为只是小恶，大恶更过分且另有其人。无论是否真有如他所说的大恶，我想对他说，“勿以恶小而为之”。<br>我悲悯那些苦难者，不是为了优越感，而是我能感受到那种切肤之痛。我悲悯所有的苦难者，无关乎国籍、种族。</p>\n<p>我向小恶宣战；我向大恶宣战；我向自诩精英而行小恶者宣战；我向未知而可能的大恶者宣战。</p>\n<p>头破血流，至死方休。</p>\n<hr>\n<p>我想成为一个最普通的底层人，一个人生活。喝最劣质的白酒，抽最呛头的烟，穿着布满油污的工作服，里面套着一件全是油迹汗渍的背心。不用思考，像走兽一样活着就好。在富士康那样的工厂上班，工资只要饿不死就行。每个看到我的人，都会嫌恶地皱眉觉得这人真像一条老狗。</p>\n<hr>\n<p>我的确不怎么在乎物质，但精神又真的有大家声称的那么高的价值吗？相比虚无缥缈的精神，物质至少还能满足肉体上的需求。</p>\n<hr>\n<p>男人竟然是这么孤独的生物。坚韧失恋了，来找我。他的孤独感传染给我，让我觉得我跟他就像两根被人砍断的蠢木，隔得远远的杵在荒原上。<br>最可怕的是，他们面对这种孤独却不自知。他们不知道正常的人际关系该是怎样的，他们觉得这样的孤独是人生的常态。</p>\n<hr>\n<p>世界上并不存在哲学这种东西，也并不存在世界观这种东西。人们只是在安慰自己。</p>\n<hr>\n<p>社会为我们描绘了一幅世界图景，并希望你能完成它的期许。这幅图景本身并无力量，但无论是认同它还是批判它的人，都相信这幅图景是真的。它的力量即来自此处。</p>\n<p>看到那些艺术家有生之年的穷困潦倒和身后作品的价值连城，不禁觉得这像是这些艺术家对社会的某种“报复”，我露出坏坏的笑容。</p>\n<p>印象派一脉相承于巴比松画派和库尔贝的现实主义，你可能会疑惑，印象派写实？事实上，印象派不仅写实，而且算是将写实发挥到了极致。这个问题涉及到什么是“真实”的思考。而印象派认为，唯有那种反学院的，用光和色来塑性的风格，才是对真实世界的客观描绘。<br>你可能认为印象派是抽象的、主观的，但实际上印象派是写实主义的巅峰也是最后的绝唱。<br>在印象派之前的画风都是学院的，这些学院派对于万事万物的描绘都有一套规定俗成的规范，你只能按照这个风格来画，因为他们认为这是真实。</p>\n<p>他们之所以认为这是真实，是因为受到柏拉图的“理念论”的影响，因为“理念论”认为唯有存在于那个理念中的世界才是完美的，这个理念世界的一切都是固定唯一完美的，现实世界是对理念世界的简陋模仿。<br>回忆一下那些古典风格的画，里面的人物场景都完美得不像话。在实际生活中根本不可能存在这样的场景。</p>\n<p>所以，印象派只是画出了他们用自己的肉眼看到的真实。</p>\n<p>这些批评家的语言真是刻薄：“有不少保守派的批评家抱着嘲笑与批评的态度说看到最后不禁恼火，你会懊悔没有把买门票的钱送给一个穷要饭的。”</p>\n<hr>\n<p>人类的想象力真是贫乏，只能借用自己熟知事物的组合和扭曲来创造“新事物”。</p>\n<hr>\n<p>无趣的理智终于重回我的头脑。激烈的感情比嗑药还爽。生活如此乏味，我只是一个贪恋刺激的俗人，你们高看我了。</p>\n<hr>\n<p>I lost myself. 我的面目越来越模糊，我的性格越来越温和，我在水里你找不着我，我从你呼吸进入你的身体，有一天我可以被风吹散。I lost myself.</p>\n<hr>\n<p>倘若基督教只保留爱的现世关怀，而放弃死而复生的终极救赎，那我早就入教了。正是因为我不信死而复生，所以本质上我是在怀疑主的全能，这是我无法被称之为基督徒的原因。<br>我不入教，反而是因为基督教承诺得太多。</p>\n<hr>\n<p>我听闻过那失落的旋律 大卫王曾弹奏它来取悦上帝<br>但旅人啊 你其实并不在乎 不是吗<br>纵使我信仰坚定  却也仍需经受考验<br>我看见你在月色下沐浴 那美感震慑了我<br>她击碎我的王座 割下我的头发 但我用沾血双唇高声赞美我的主<br>宝贝啊 在认识你之前 我曾孤独生活<br>在那大理石的拱顶上 我看见你的旗帜<br>但爱不是胜利凯旋 而是一曲冰冷破碎的哈利路亚<br>也许真有上帝存在吧 但我从爱中学到的一切 是如何击败那个与你为敌的人</p>\n<!--more-->\n<hr>\n<p>我们越来越隐忍沉默，我们长大了。<br>我们终于会学会面对生活，它不是敌人也不是朋友，它代表着世界的复杂，它是宇宙本身。</p>\n<hr>\n<p>文字、数学、门电路，这些在我眼里，都是追求精确的理念世界对抗模糊的现实世界的重大突破。</p>\n<hr>\n<p>看着窗外林立的摩天楼，在我目力所及的范围内就至少生活着几十万人，我一生见过的人恐怕也就只有几十万，我在这小小的范围内来揣度世界，无异是管中窥豹。<br>一想到我热爱的这些人们，我却不能与其相识，不能深入地了解他们，就非常失落。</p>\n<hr>\n<p>我的欲求总是得寸进尺、贪得无厌，我自己清晰地明白这一点，但却无能为力，并不为我的理性所控制。</p>\n<hr>\n<p>“关键是你相信什么”，过去无法认同这句极其唯心主义的话，现在竟然能够理解了。<br>这世间的价值，都是社会通过思想灌输给我。顺应你的，你称之为教育；逆反你的，你称之为洗脑。<br>选取一个自己认同的道，贯彻下去吧。</p>\n<hr>\n<p>我和我的很多搞技术的朋友一样，都有着日耳曼野蛮人般的单纯。这种单纯并不完全源自善意或是本性纯良，而纯粹只是因为未历世事，远不懂得这个世界的复杂。搞搞技术，再学学哲学，很容易误认为自己掌握一部分世界的真理。为了不让自己坐井观天，我该多跟我的朋友们交流。</p>\n<hr>\n<p>肚子饿了，跑出去在路边脏摊儿买了份因饥饿而显美味的烤冷面，哪怕在这荒凉的郊区，这熟悉的一切都让我感到心安。我从未远离这充满烟火气息的、令我热爱的生活。</p>\n<hr>\n<p>对着星图在暗夜中辨识漫天的星星，寒冷空气和幸福感都让我浑身战栗。仿佛短暂离开了现世，去往了一个幻想中的世界。仿佛回到过去…</p>\n<hr>\n<p>1、如果一个拥有世界上所有知识的人写一本书，这该是一本怎样伟大的书啊。<br>所有的作家都是地方性作家，所有作品都是地方性作品，但竟然就已经如此伟大。</p>\n<p>2、在学弟学妹的群里看到的话，很喜欢：<br>下雨天感觉那个号码要跟泥土一样烂在心里了。在喉咙里打转的音节，也是一样的宿命。</p>\n<hr>\n<p>“可爱”从字面意义上来说应该是“可以被爱的”，但现今好像变成了“稚嫩”、“萌”的同义词。</p>\n<p>可以被爱的。嗯，非常高的评价了。</p>\n<hr>\n<p>我时常忘了“我”是我。<br>这种时候，这具肉体会以其习以为常的行事方法以及语言风格将生活进行下去，似乎都不需要我的操控。<br>上面不是我的艺术化加工，而是我的真实体验。</p>\n<hr>\n<p>我们不仅热衷于给别人贴标签，也热衷于给自己贴标签。贴标签这一行为本质是通过符号来认识并理解这个世界。</p>\n<p>通过给别人贴标签，可以节省大量去了解别人的时间成本，而且如果是面对攻击对象，可以竖起很好的靶子；通过给自己贴标签，不仅强化自我认知，而且让人在群体中找到安全感和归属感。</p>\n<p>但我希望你记住，世界以及人都是复杂的，人脑无力承担这种复杂，所以借助符号化以抽象来简化复杂，在抽象的过程中不可避免会损失大量信息。</p>\n<p>要将每一个人当做值得尊重的人，避免符号化带来的认知偏差。</p>\n<hr>\n<p>1、我凭什么如此自私，不肯把自己分享给每一个向我索取的人？</p>\n<p>2、能否包容不包容，我的回答是能，但对于不包容，我坚持保留自己内心的底线，超越底线的不包容我无法接受。</p>\n<hr>\n<p>与理工科讲究坚硬的逻辑不同，人文领域充满了隐喻和暗示。我过去以为我无法对作品做出很好的解读，要么是因为智商不够，要么是因为知识储备不够。现在看来，除这两点之外，我不适应人文学科的思维方式似乎更为重要的一点。</p>\n<hr>\n<p>死亡是我的药<br>见到你就吃一颗</p>\n<p>而你从未注意过我</p>\n<hr>\n<p>在北京干燥贫瘠的空气里，我是快渴死的鱼。</p>\n<hr>\n<p>睡醒之后，不知今夕是何年。<br>就像短暂失忆了一样，非得借助身边的事物才能回忆起来。<br>我竟然有点喜欢这种感觉，加深了现实的虚幻感。</p>\n<hr>\n<p>我像天鹅航行<br>我像石头下沉<br>而时光远去<br>不理我的笑柄</p>\n<p>我的纸太白<br>我的墨太淡<br>白昼不肯写下<br>夜用铅笔涂鸦</p>\n<p>我的动物嚎叫<br>我的天使不安<br>却不许我<br>有丝毫悔怨<br>——节选自《渴望之书》（北岛 译）</p>\n<hr>\n<p>对于轻慢而肤浅的人，连指出他的肤浅的必要都没有，至少他自己的毫不谦逊的态度，已经阻绝了他认识到自己错误的可能性。</p>\n<hr>\n<p>倘若上帝真的存在该多好啊，全知全能的祂永远仁慈地注视着我，因了祂的注视，我得以摆脱永恒的孤独，我不再是宇宙中孤寂的热岛。</p>\n<p>也因了祂的存在，人与人之间才得以借助与祂的连接，真正地交融在一起。我们才能消融在祂广博的爱里。</p>\n<p>我爱你，我爱你们，我爱祢。</p>\n<hr>\n<p>明明只是十几年前，看起来却如此蛮荒古拙。非常迷人。</p>\n<p>我掌握知识，但我并不因此而高贵。我只是非常普通的一个中国人。我不能因为乡土气息就鄙薄，因为我至多只是穿了一身唬人的皮。更何况，他们比我更称得上是这个国家的主体。<br>可以有知识和见识，但不要有可笑的精英意识。<br>我要主动用刀子一层层剖开我的皮和内心，剩下的那才是我自己。</p>\n<hr>\n<p>人类的原罪是什么？生而为人，就是原罪。荣耀和耻辱都是我的。不要放大荣耀，也不要放大耻辱。这是一条我们没有选择的道路。</p>\n<hr>\n<p>我咀嚼这份痛苦，这让我感到莫名的快意，提醒我还活着，这份痛苦弥久历新，难以割舍。</p>\n<hr>\n<p>跟某人上山，带回了一些知识、一身露水还有两个山核桃。</p>\n<hr>\n<p>无知时，表达起自己肆无忌惮。</p>\n<p>后来懂得一点知识后，明白了自己的无知，惶惶惑惑、唯唯诺诺不敢发声，想着当我全明白之后，再来表达自己。</p>\n<p>可这是一个愚蠢的想法，表达自己这一行为是有利于求知的。而且更重要的是，如果不表达出来，没有更好的办法检验自己是否真的理解知识。</p>\n<p>（一点在学习人文学科时的感受）</p>\n<hr>\n<p>看山不是山，看水不是水。我的头脑混沌，我的世界螺旋。</p>\n<hr>\n<p>读书时，我究竟在读什么？过去我追求情绪的共鸣，现在我更多注重概念的理解。<br>无论是情感还是理智，我认为并无高下之分。对书籍这一载体而言，我甚至认为情感更为可贵。</p>\n<hr>\n<p>虽然我很感激，</p>\n<p>我想看到你自然的态度，而不是刻意迎合我的态度。<br>我感兴趣的是自然的你，而不是刻意迎合我的你。</p>\n<hr>\n<p>阴影暗点和光斑同时在被雾气所遮蔽的玻璃上剧烈无规则颤动。时不时有一道道影子飞速从窗户上划过。像是什么莫可名状的神秘生物。</p>\n<hr>\n<p>一种莫可名状的失落在梦中袭来，并成功将我弄醒。而我，甚至都不知道这股失落源于何处。非常讨厌这样的自己。</p>\n<hr>\n<p>我非常喜欢穿不属于我的不合身衣服，这让我有一种隐匿在别人身份之下的感觉。戴帽子也有比较类似的感受。<br>我还特别喜欢所谓的“屌丝”装扮，越底层越普通不引人注意，我就越自由舒适。</p>\n<hr>\n<p>读维基百科“宋朝”词条，几百年历史只言片语间沉重覆压在身上。</p>\n<hr>\n<p>通达概念或是思想实在是太难了，诉诸情绪化的表达是多么轻松啊。</p>\n<hr>\n<p>种种寻常事物逐渐在我眼中出现异变。</p>\n<p>看多了西方油画，女人乳房在我眼中变成了成熟时可以收获的果实；读多了政治，人群在我眼中分明变成了待宰的两脚羊。</p>\n<p>我该如此自哂：所谓眼高手低就是这样吧。</p>\n<hr>\n<p>世间有这么多的苦难，人类为什么还是要挣着挣着努力活下去？<br>我们追逐情爱，追逐梦想，追逐生存，人间就是地狱，可还是要活下去啊。</p>\n<p>艺术多美好，哲思多深邃，星空多迷人，竟然让人忘了自己其实生活在地狱。</p>\n<p>我想尽我所能地为世间带来温暖快乐，扪心自愧面对伤害，我却无法坦然承受并报以大爱。我为自己的狭隘羞赧不已。</p>\n<hr>\n<p>闭上眼，细细用门牙和犬齿切割刮擦咬噬骨头上软糯咸甜的皮肉，肉成胶状，其间丝丝缕缕有经络。</p>\n<hr>\n<p>午夜怀着惊惧从梦中醒来，我好渴而且呼吸困难，我想要不要干脆起床去写代码，也不知道现在几点了。<br>点亮手机屏幕，看见微信有三条来信，我心中涌动起无限温柔，想着，不知道是哪个宝宝怀着心事这个时候向我倾吐一切，我也会温柔真诚以待。</p>\n<hr>\n<p>我，天真得像只小白兔。我问他，是因为我善良？蠢？还是情商低？他说，只是因为你抱有期待。</p>\n<hr>\n<p>梦中我忘了你的名字，半梦半醒，身体沉重。我支撑着，努力回忆着。</p>\n<hr>\n<p>天空和尘埃都是我的。你也是。</p>\n<hr>\n<p>读了十几年的书，却在今晚怀疑起自己的读书方式是不是根本错了。郁热多雨的夜晚，我被这个问题折磨得懊丧不已。我读过很多书，写过不算少的文字，今天突然觉得阅读和写作跟专业性极强的体能训练一样，一旦中断，能力下降之快令人咋舌。这世间有太多事我想做好，可我不是天才。</p>\n<hr>\n<p>呵气成雾，在这荒凉城市的十一月。 百寒不侵，我打开书进入另一个世界。</p>\n<hr>\n<p>正在读三国演义，袁绍真是酷到爆炸。<br>“中军校尉袁绍挺身出曰：“今上即位未几，并无失德。汝欲废嫡立庶，非反而何？”卓怒曰：“天下事在我，我今为之，谁敢不从！汝视我之剑不利否？”袁绍亦拔剑曰：“汝剑利，吾剑未尝不利！”两个在筵上对敌。”</p>\n<hr>\n<p>我一点一点清除自己在互联网上留下的痕迹，细节慢慢模糊忘记，就像自己在擦去自己的记忆，说不后悔不心疼那是在自欺，可我真的没想到，我又想起你了，回忆很淡很淡却逐渐鲜活起来。</p>\n<hr>\n<p>（上面的文字写于研究生的不同时期，并非按照时间顺序整理。）</p>\n","site":{"data":{}},"excerpt":"<p>藤蔓</p>\n<hr>\n<p>我在帮助他人时，如何才能让他人感觉到，我对他的帮助是出自于绝对的关心和爱，而非高人一等的怜悯。我并不因为帮助他而在精神上处于比他高的地位，他的需要帮助仅仅是由于不可抗力的不幸，你我随时都有可能遭遇同样的不幸，而帮助者和受助者在精神上都是平等的。</p>\n<hr>\n<p>星绿</p>","more":"<hr>\n<p>“对识字的人来说，书籍能发挥什么样的作用，艺术就能对不识字的人发挥怎样的作用“。</p>\n<p>在古希腊时期，那些完美符合黄金比例的雕像，是为了追寻那个不存在的”理念世界“，那个世界与充满了瑕疵的现实世界相对应。虽然柏拉图认为理念世界是现实世界的原型，但从逻辑上来说，理念世界是对现实世界的抽象。<br>他们可以总结为表达”理念世界“这一观念。</p>\n<p>等到了中世纪，现世的一切都为了宗教而服务。之所以相比于古希腊时期，中世纪艺术距离”形似“更远，是因为人们不再追求那个源于现实世界（逻辑上）的理念世界，转而追寻彼岸天国。正是因为不在追寻理念世界，所以在艺术上追求与现实世界的形似变得毫无意义。中世纪的基督像大多表现得痛苦而扭曲，正是想要通过这种痛苦来唤起信徒心中的宗教赎罪意识。<br>他们可以总结为表达”宗教意识“这一观念。</p>\n<p>文艺复兴时期，借古希腊的壳，表达人本主义。</p>\n<p>到了十八 - 十九世纪，我个人认为最能代表这一时期的流派莫过于印象派了，因为他们上承接文艺复兴的人本主义，下启现代艺术。而他们追求的，是通过”光“来精确描绘客观世界。尽管他们的画笔下的”客观世界“对于不了解他们理念的人来说，同样是模糊朦胧，跟中世纪艺术一样与客观世界存在距离的。除此之外，印象派还是艺术是否好懂的分界线，在他们之后，艺术就进入了不好懂的现代艺术，因为现代艺术想表达的观念更加抽象，不再能够仅凭直观印象就可以理解。</p>\n<p>以印象派的”不像“为契机而诞生的现代艺术，（印象派的塞尚被视为现代艺术之父）。立体主义想表达世界仅仅由简单的几何形体构成，未来主义想表达时空关系，野兽派追求用奔放的色彩来表达情感…… 逐渐的，现代艺术想要表达的观念越来越具体和琐碎，正如你所说的，不再容易被人理解。但现代艺术之所以选择走这条路，也是迫不得已，因为传统的艺术已经发展到了尽头，人们已经不再相信“理念世界”的存在，宗教也被尼采彻底击碎，从思想上必须选择别的出路。</p>\n<p>新的出路不容易理解，正如同现代哲学同样不容易被人直观理解一样。但不容易被直观理解，主要是因为服务大众不再是现代艺术的主要目的了，并不是无法理解。</p>\n<p>奥斯卡奖电影这些他们不见得迎合的就是学院派的喜好，只要很好地表达了普世价值，不一定要是现代主义的内容，同样可以获奖啊。<br>而不容易理解的文学、电影，各种实验文学、实验电影很多啊，这些很难理解。</p>\n<hr>\n<p>本学年对我来说，是我个人思想上产生重大转变的一学年。来到雁栖湖校区之后，除了完成日常的学业功课之外，我收获最大的是，学会了反思，这种反思更多是哲学层面上的。咋听上去非常玄虚，但实际上我这学期通过上国科大人文学院詹琰老师的课，自己课下的阅读哲学类、文化类书籍，以及跟焦子瑞同学经常的讨论，我看待这个世界的方式发生了极大的改变。<br>在过去，我是一个科学主义者，甚至是一个唯科学主义者；但现在我明白了科学是解释这个世界的一种方式。想要解释这个世界有很多种方式，甚至有很多事情是现阶段的科学不能很好解释的。这一转变并不意味着我失去了对科学的热爱，我依然热爱着知识，依然尊敬在求知道路上做出了极大牺牲的科学人。只是，我明白了这个世界是多元的，日后当我在科研、工作的闲暇之余，会对星空、道德、艺术多上一份敬畏之心。</p>\n<hr>\n<p>现世很重要，但这并不意味着那个藏在背后的世界不存在。</p>\n<p>“清晰”作为一个概念是存在的，但我怀疑其在现实中的存在。</p>\n<hr>\n<p>如果我将计算机视作理念世界对抗现实世界的产物，那么启发式算法无疑是理念世界向后退了一大步。所谓的“神经网络”更是现实世界一次耀武扬威的炫耀。</p>\n<hr>\n<p>你表里如一吗？不敢说完全是，但至少在竭力做到这一点。<br>你为什么要这么善良？我仅仅只是品尝过痛苦的滋味，并不好受，所以我不希望别人痛苦。如果你将不希望别人痛苦定义为善良，那我就算是吧。</p>\n<hr>\n<p>桐枝晚上要回家，子瑞不在，毕竟是女孩子嘛，我送送她。<br>路上我不知怎么地开始背诵起了《短歌行》，她在身边静静听着一言不发。<br>我大声诵读完最后一句，这一个月来积压在心中的种种郁磊像是剑一样刺破我的胸口挣扎出来了。我心里说不出的难过，又杂夹一丝奇异的快意。<br>我可能很难忘怀这一瞬间吧。</p>\n<hr>\n<p>我听说过这样一个说法（还是统计研究来着？我不记得了）:nerds 发生在白人和亚裔（准确点说是，东亚文化圈的亚裔）的概率远高于其他族裔。<br>当然了，我不否认这个结论里面的种族偏见意味，你当做一家之言就好。<br>看了这篇文章开头，感觉 nerds 生在中国还是挺幸运的。总体环境氛围还是崇智的。<br>继续读下去，我感到自己不喜欢这篇文章中表现出来的对自己智商的优越感。任何人都不该有任何形式的优越感。</p>\n<p>普通人有抱团的温暖，nerd 有孤独的骄傲，但我却试图剥夺 nerd 在人际交往中这仅有的的骄傲，这实在算不上宽容。</p>\n<p>学（西方）哲学的好处是，曾经给你带来痛苦的那些点几乎不再能惊扰你；但与此同时，你被迫开始直面人生的虚无。</p>\n<p>要以人本身的特质去判断人，而不是人身上（自己贴的、别人贴的）的标签来判断人。</p>\n<hr>\n<p>我真的有灵魂吗？还是仅仅我自以为我拥有自我意识？</p>\n<p>“我是谁？”在 2017.10.09 的零点二十分，我人生第一次被这个问题所困扰。<br>“从哪来？”我压根不关心。<br>“到哪去？”曾让我思考过。<br>我是谁？我或许会给自己列出一大堆标签，我似乎也拥有一些相关的记忆，但这些记忆也都非常模糊。我难道用这些非常模糊的记忆来定义我自己吗？<br>过去的我，有不同的生活环境，不同的人际关系，几乎可以说每三四年就会有一个很大的变化。近几年来，这个变化的速度越来越快，快到我的身体适应了，我的灵魂却迟钝得不知道变化，慢了好几个节拍。<br>我真的曾经读过那些书吗？我真的做过那些事吗？说过那些话？为什么那个“我”对我来说会如此陌生。我不知道，我身边的人换了又换，没有一个留在我身边、长到足以发现那些变化的人。也许在他们眼中，我过去就是这样，我就应该是这样，我永远都是这样吧？</p>\n<p>有欲望，真是太好了。这为大多数不会去思考意义的人赋予了一些意义。</p>\n<hr>\n<p>爱上书中的人物，有时候是因为书中的人物特别有魅力，他的经历特别能打动你，或是她碰巧就是你最喜欢的那种类型，而现实中无可替代。<br>但有时候，则是怯懦得不敢在现实中恋爱，面对喜欢的人畏首畏尾，只好用书中的人物来当成寄托。</p>\n<p>白狼，一次我为我选择特莉斯，一次我为你选择叶妮法，我们俩不相负。</p>\n<hr>\n<p>我从小就梦想着有一天能跟好友一起随意坐在桌上，端着酒杯，深深浅浅地啜饮烈酒，深深浅浅地聊着人生。谢谢子瑞让这一天成真。</p>\n<p>发自内心的认为，与宣称自己这么认为，在思维上的不同是，前者意识不到自己是这么想的，而后者每次都会试图在内心说服自己。</p>\n<hr>\n<p>如果将我的性格比喻成动物园的野兽，思念你的痛苦就是驯服我的皮鞭，我被训得服服帖帖，竟然没有任何爱你之外的想法。</p>\n<hr>\n<p>人不仅各有志，更是每个人的天性禀赋都不一样，不必强求每个人都为了一个虚假的目标而奋斗。寄生现象无论在生物中还是人类社会中的存在都是非常合理甚至是必须的。我非常乐意当一个被寄生者，我很感谢他们，从某种意义上来说是寄生者的寄生行为帮助实现了我的个人价值。</p>\n<hr>\n<p>大部分人是如此的普通，他们甚至连爱都是要追求回报的。</p>\n<p>我这辈子可能是遇不到如此无私伟大的爱了，但也许，也许我能将这样的爱，给予他人。</p>\n<p>我渴望着平等之爱，但这样的爱真是可遇不可求。没关系，我心中早已有了维系一段不平等之爱的准备。</p>\n<hr>\n<p>你是我构思交织的线，你是我从天际划过的灵感。</p>\n<p>这是名为“本能”的陷阱，效果之强已经基本剥夺了我思考的能力，我非常轻松就死心塌地的陷了进去。<br>它吞噬我的时间，吞噬我的精力，甚至吞噬我的能力，毫不留情，而我恭敬地双手捧上去。</p>\n<hr>\n<p>一个人可能在不是足够了解一个人的情况下，爱上一个人吗？你如何确定你的“一见钟情”不是生理冲动？<br>基于这个理由，我是鄙弃“一见钟情”的。</p>\n<hr>\n<p>12.24：<br>如果我做不到善良，至少要做到不残忍。</p>\n<p>但是年轻人，你太年轻，经历的太少，有时候你自己都意识不到自己的残忍。</p>\n<hr>\n<p>无知之幕时常让我感到恐惧，有时我想，万一我不具备我现在拥有的这些幸运，我该怎么办？<br>当然，无知之幕从未落下（或者其实无知之幕一直都在，我因为无知而不觉得其存在），从这一点来说，我是在杞人忧天也不过分。但有的人却能心安理得地利用他们的幸运，来肆无忌惮的在不如他们幸运的人们身上磨牙吮血。<br>我跟他们交流过，他告诉我，他的所为只是小恶，大恶更过分且另有其人。无论是否真有如他所说的大恶，我想对他说，“勿以恶小而为之”。<br>我悲悯那些苦难者，不是为了优越感，而是我能感受到那种切肤之痛。我悲悯所有的苦难者，无关乎国籍、种族。</p>\n<p>我向小恶宣战；我向大恶宣战；我向自诩精英而行小恶者宣战；我向未知而可能的大恶者宣战。</p>\n<p>头破血流，至死方休。</p>\n<hr>\n<p>我想成为一个最普通的底层人，一个人生活。喝最劣质的白酒，抽最呛头的烟，穿着布满油污的工作服，里面套着一件全是油迹汗渍的背心。不用思考，像走兽一样活着就好。在富士康那样的工厂上班，工资只要饿不死就行。每个看到我的人，都会嫌恶地皱眉觉得这人真像一条老狗。</p>\n<hr>\n<p>我的确不怎么在乎物质，但精神又真的有大家声称的那么高的价值吗？相比虚无缥缈的精神，物质至少还能满足肉体上的需求。</p>\n<hr>\n<p>男人竟然是这么孤独的生物。坚韧失恋了，来找我。他的孤独感传染给我，让我觉得我跟他就像两根被人砍断的蠢木，隔得远远的杵在荒原上。<br>最可怕的是，他们面对这种孤独却不自知。他们不知道正常的人际关系该是怎样的，他们觉得这样的孤独是人生的常态。</p>\n<hr>\n<p>世界上并不存在哲学这种东西，也并不存在世界观这种东西。人们只是在安慰自己。</p>\n<hr>\n<p>社会为我们描绘了一幅世界图景，并希望你能完成它的期许。这幅图景本身并无力量，但无论是认同它还是批判它的人，都相信这幅图景是真的。它的力量即来自此处。</p>\n<p>看到那些艺术家有生之年的穷困潦倒和身后作品的价值连城，不禁觉得这像是这些艺术家对社会的某种“报复”，我露出坏坏的笑容。</p>\n<p>印象派一脉相承于巴比松画派和库尔贝的现实主义，你可能会疑惑，印象派写实？事实上，印象派不仅写实，而且算是将写实发挥到了极致。这个问题涉及到什么是“真实”的思考。而印象派认为，唯有那种反学院的，用光和色来塑性的风格，才是对真实世界的客观描绘。<br>你可能认为印象派是抽象的、主观的，但实际上印象派是写实主义的巅峰也是最后的绝唱。<br>在印象派之前的画风都是学院的，这些学院派对于万事万物的描绘都有一套规定俗成的规范，你只能按照这个风格来画，因为他们认为这是真实。</p>\n<p>他们之所以认为这是真实，是因为受到柏拉图的“理念论”的影响，因为“理念论”认为唯有存在于那个理念中的世界才是完美的，这个理念世界的一切都是固定唯一完美的，现实世界是对理念世界的简陋模仿。<br>回忆一下那些古典风格的画，里面的人物场景都完美得不像话。在实际生活中根本不可能存在这样的场景。</p>\n<p>所以，印象派只是画出了他们用自己的肉眼看到的真实。</p>\n<p>这些批评家的语言真是刻薄：“有不少保守派的批评家抱着嘲笑与批评的态度说看到最后不禁恼火，你会懊悔没有把买门票的钱送给一个穷要饭的。”</p>\n<hr>\n<p>人类的想象力真是贫乏，只能借用自己熟知事物的组合和扭曲来创造“新事物”。</p>\n<hr>\n<p>无趣的理智终于重回我的头脑。激烈的感情比嗑药还爽。生活如此乏味，我只是一个贪恋刺激的俗人，你们高看我了。</p>\n<hr>\n<p>I lost myself. 我的面目越来越模糊，我的性格越来越温和，我在水里你找不着我，我从你呼吸进入你的身体，有一天我可以被风吹散。I lost myself.</p>\n<hr>\n<p>倘若基督教只保留爱的现世关怀，而放弃死而复生的终极救赎，那我早就入教了。正是因为我不信死而复生，所以本质上我是在怀疑主的全能，这是我无法被称之为基督徒的原因。<br>我不入教，反而是因为基督教承诺得太多。</p>\n<hr>\n<p>我听闻过那失落的旋律 大卫王曾弹奏它来取悦上帝<br>但旅人啊 你其实并不在乎 不是吗<br>纵使我信仰坚定  却也仍需经受考验<br>我看见你在月色下沐浴 那美感震慑了我<br>她击碎我的王座 割下我的头发 但我用沾血双唇高声赞美我的主<br>宝贝啊 在认识你之前 我曾孤独生活<br>在那大理石的拱顶上 我看见你的旗帜<br>但爱不是胜利凯旋 而是一曲冰冷破碎的哈利路亚<br>也许真有上帝存在吧 但我从爱中学到的一切 是如何击败那个与你为敌的人</p>\n<!--more-->\n<hr>\n<p>我们越来越隐忍沉默，我们长大了。<br>我们终于会学会面对生活，它不是敌人也不是朋友，它代表着世界的复杂，它是宇宙本身。</p>\n<hr>\n<p>文字、数学、门电路，这些在我眼里，都是追求精确的理念世界对抗模糊的现实世界的重大突破。</p>\n<hr>\n<p>看着窗外林立的摩天楼，在我目力所及的范围内就至少生活着几十万人，我一生见过的人恐怕也就只有几十万，我在这小小的范围内来揣度世界，无异是管中窥豹。<br>一想到我热爱的这些人们，我却不能与其相识，不能深入地了解他们，就非常失落。</p>\n<hr>\n<p>我的欲求总是得寸进尺、贪得无厌，我自己清晰地明白这一点，但却无能为力，并不为我的理性所控制。</p>\n<hr>\n<p>“关键是你相信什么”，过去无法认同这句极其唯心主义的话，现在竟然能够理解了。<br>这世间的价值，都是社会通过思想灌输给我。顺应你的，你称之为教育；逆反你的，你称之为洗脑。<br>选取一个自己认同的道，贯彻下去吧。</p>\n<hr>\n<p>我和我的很多搞技术的朋友一样，都有着日耳曼野蛮人般的单纯。这种单纯并不完全源自善意或是本性纯良，而纯粹只是因为未历世事，远不懂得这个世界的复杂。搞搞技术，再学学哲学，很容易误认为自己掌握一部分世界的真理。为了不让自己坐井观天，我该多跟我的朋友们交流。</p>\n<hr>\n<p>肚子饿了，跑出去在路边脏摊儿买了份因饥饿而显美味的烤冷面，哪怕在这荒凉的郊区，这熟悉的一切都让我感到心安。我从未远离这充满烟火气息的、令我热爱的生活。</p>\n<hr>\n<p>对着星图在暗夜中辨识漫天的星星，寒冷空气和幸福感都让我浑身战栗。仿佛短暂离开了现世，去往了一个幻想中的世界。仿佛回到过去…</p>\n<hr>\n<p>1、如果一个拥有世界上所有知识的人写一本书，这该是一本怎样伟大的书啊。<br>所有的作家都是地方性作家，所有作品都是地方性作品，但竟然就已经如此伟大。</p>\n<p>2、在学弟学妹的群里看到的话，很喜欢：<br>下雨天感觉那个号码要跟泥土一样烂在心里了。在喉咙里打转的音节，也是一样的宿命。</p>\n<hr>\n<p>“可爱”从字面意义上来说应该是“可以被爱的”，但现今好像变成了“稚嫩”、“萌”的同义词。</p>\n<p>可以被爱的。嗯，非常高的评价了。</p>\n<hr>\n<p>我时常忘了“我”是我。<br>这种时候，这具肉体会以其习以为常的行事方法以及语言风格将生活进行下去，似乎都不需要我的操控。<br>上面不是我的艺术化加工，而是我的真实体验。</p>\n<hr>\n<p>我们不仅热衷于给别人贴标签，也热衷于给自己贴标签。贴标签这一行为本质是通过符号来认识并理解这个世界。</p>\n<p>通过给别人贴标签，可以节省大量去了解别人的时间成本，而且如果是面对攻击对象，可以竖起很好的靶子；通过给自己贴标签，不仅强化自我认知，而且让人在群体中找到安全感和归属感。</p>\n<p>但我希望你记住，世界以及人都是复杂的，人脑无力承担这种复杂，所以借助符号化以抽象来简化复杂，在抽象的过程中不可避免会损失大量信息。</p>\n<p>要将每一个人当做值得尊重的人，避免符号化带来的认知偏差。</p>\n<hr>\n<p>1、我凭什么如此自私，不肯把自己分享给每一个向我索取的人？</p>\n<p>2、能否包容不包容，我的回答是能，但对于不包容，我坚持保留自己内心的底线，超越底线的不包容我无法接受。</p>\n<hr>\n<p>与理工科讲究坚硬的逻辑不同，人文领域充满了隐喻和暗示。我过去以为我无法对作品做出很好的解读，要么是因为智商不够，要么是因为知识储备不够。现在看来，除这两点之外，我不适应人文学科的思维方式似乎更为重要的一点。</p>\n<hr>\n<p>死亡是我的药<br>见到你就吃一颗</p>\n<p>而你从未注意过我</p>\n<hr>\n<p>在北京干燥贫瘠的空气里，我是快渴死的鱼。</p>\n<hr>\n<p>睡醒之后，不知今夕是何年。<br>就像短暂失忆了一样，非得借助身边的事物才能回忆起来。<br>我竟然有点喜欢这种感觉，加深了现实的虚幻感。</p>\n<hr>\n<p>我像天鹅航行<br>我像石头下沉<br>而时光远去<br>不理我的笑柄</p>\n<p>我的纸太白<br>我的墨太淡<br>白昼不肯写下<br>夜用铅笔涂鸦</p>\n<p>我的动物嚎叫<br>我的天使不安<br>却不许我<br>有丝毫悔怨<br>——节选自《渴望之书》（北岛 译）</p>\n<hr>\n<p>对于轻慢而肤浅的人，连指出他的肤浅的必要都没有，至少他自己的毫不谦逊的态度，已经阻绝了他认识到自己错误的可能性。</p>\n<hr>\n<p>倘若上帝真的存在该多好啊，全知全能的祂永远仁慈地注视着我，因了祂的注视，我得以摆脱永恒的孤独，我不再是宇宙中孤寂的热岛。</p>\n<p>也因了祂的存在，人与人之间才得以借助与祂的连接，真正地交融在一起。我们才能消融在祂广博的爱里。</p>\n<p>我爱你，我爱你们，我爱祢。</p>\n<hr>\n<p>明明只是十几年前，看起来却如此蛮荒古拙。非常迷人。</p>\n<p>我掌握知识，但我并不因此而高贵。我只是非常普通的一个中国人。我不能因为乡土气息就鄙薄，因为我至多只是穿了一身唬人的皮。更何况，他们比我更称得上是这个国家的主体。<br>可以有知识和见识，但不要有可笑的精英意识。<br>我要主动用刀子一层层剖开我的皮和内心，剩下的那才是我自己。</p>\n<hr>\n<p>人类的原罪是什么？生而为人，就是原罪。荣耀和耻辱都是我的。不要放大荣耀，也不要放大耻辱。这是一条我们没有选择的道路。</p>\n<hr>\n<p>我咀嚼这份痛苦，这让我感到莫名的快意，提醒我还活着，这份痛苦弥久历新，难以割舍。</p>\n<hr>\n<p>跟某人上山，带回了一些知识、一身露水还有两个山核桃。</p>\n<hr>\n<p>无知时，表达起自己肆无忌惮。</p>\n<p>后来懂得一点知识后，明白了自己的无知，惶惶惑惑、唯唯诺诺不敢发声，想着当我全明白之后，再来表达自己。</p>\n<p>可这是一个愚蠢的想法，表达自己这一行为是有利于求知的。而且更重要的是，如果不表达出来，没有更好的办法检验自己是否真的理解知识。</p>\n<p>（一点在学习人文学科时的感受）</p>\n<hr>\n<p>看山不是山，看水不是水。我的头脑混沌，我的世界螺旋。</p>\n<hr>\n<p>读书时，我究竟在读什么？过去我追求情绪的共鸣，现在我更多注重概念的理解。<br>无论是情感还是理智，我认为并无高下之分。对书籍这一载体而言，我甚至认为情感更为可贵。</p>\n<hr>\n<p>虽然我很感激，</p>\n<p>我想看到你自然的态度，而不是刻意迎合我的态度。<br>我感兴趣的是自然的你，而不是刻意迎合我的你。</p>\n<hr>\n<p>阴影暗点和光斑同时在被雾气所遮蔽的玻璃上剧烈无规则颤动。时不时有一道道影子飞速从窗户上划过。像是什么莫可名状的神秘生物。</p>\n<hr>\n<p>一种莫可名状的失落在梦中袭来，并成功将我弄醒。而我，甚至都不知道这股失落源于何处。非常讨厌这样的自己。</p>\n<hr>\n<p>我非常喜欢穿不属于我的不合身衣服，这让我有一种隐匿在别人身份之下的感觉。戴帽子也有比较类似的感受。<br>我还特别喜欢所谓的“屌丝”装扮，越底层越普通不引人注意，我就越自由舒适。</p>\n<hr>\n<p>读维基百科“宋朝”词条，几百年历史只言片语间沉重覆压在身上。</p>\n<hr>\n<p>通达概念或是思想实在是太难了，诉诸情绪化的表达是多么轻松啊。</p>\n<hr>\n<p>种种寻常事物逐渐在我眼中出现异变。</p>\n<p>看多了西方油画，女人乳房在我眼中变成了成熟时可以收获的果实；读多了政治，人群在我眼中分明变成了待宰的两脚羊。</p>\n<p>我该如此自哂：所谓眼高手低就是这样吧。</p>\n<hr>\n<p>世间有这么多的苦难，人类为什么还是要挣着挣着努力活下去？<br>我们追逐情爱，追逐梦想，追逐生存，人间就是地狱，可还是要活下去啊。</p>\n<p>艺术多美好，哲思多深邃，星空多迷人，竟然让人忘了自己其实生活在地狱。</p>\n<p>我想尽我所能地为世间带来温暖快乐，扪心自愧面对伤害，我却无法坦然承受并报以大爱。我为自己的狭隘羞赧不已。</p>\n<hr>\n<p>闭上眼，细细用门牙和犬齿切割刮擦咬噬骨头上软糯咸甜的皮肉，肉成胶状，其间丝丝缕缕有经络。</p>\n<hr>\n<p>午夜怀着惊惧从梦中醒来，我好渴而且呼吸困难，我想要不要干脆起床去写代码，也不知道现在几点了。<br>点亮手机屏幕，看见微信有三条来信，我心中涌动起无限温柔，想着，不知道是哪个宝宝怀着心事这个时候向我倾吐一切，我也会温柔真诚以待。</p>\n<hr>\n<p>我，天真得像只小白兔。我问他，是因为我善良？蠢？还是情商低？他说，只是因为你抱有期待。</p>\n<hr>\n<p>梦中我忘了你的名字，半梦半醒，身体沉重。我支撑着，努力回忆着。</p>\n<hr>\n<p>天空和尘埃都是我的。你也是。</p>\n<hr>\n<p>读了十几年的书，却在今晚怀疑起自己的读书方式是不是根本错了。郁热多雨的夜晚，我被这个问题折磨得懊丧不已。我读过很多书，写过不算少的文字，今天突然觉得阅读和写作跟专业性极强的体能训练一样，一旦中断，能力下降之快令人咋舌。这世间有太多事我想做好，可我不是天才。</p>\n<hr>\n<p>呵气成雾，在这荒凉城市的十一月。 百寒不侵，我打开书进入另一个世界。</p>\n<hr>\n<p>正在读三国演义，袁绍真是酷到爆炸。<br>“中军校尉袁绍挺身出曰：“今上即位未几，并无失德。汝欲废嫡立庶，非反而何？”卓怒曰：“天下事在我，我今为之，谁敢不从！汝视我之剑不利否？”袁绍亦拔剑曰：“汝剑利，吾剑未尝不利！”两个在筵上对敌。”</p>\n<hr>\n<p>我一点一点清除自己在互联网上留下的痕迹，细节慢慢模糊忘记，就像自己在擦去自己的记忆，说不后悔不心疼那是在自欺，可我真的没想到，我又想起你了，回忆很淡很淡却逐渐鲜活起来。</p>\n<hr>\n<p>（上面的文字写于研究生的不同时期，并非按照时间顺序整理。）</p>"},{"title":"记忆碎片","copyright":true,"date":"2012-08-29T15:15:33.000Z","comments":1,"_content":"\n这其实是一种还原，根据大自然中的几条简单法则，还原出一个诡谲复杂的世界。根据一个人的性格，推测出他经历过的事件，他会怎么想。这便是所谓的看穿一个人。但这仍然只是一种猜测，既然是猜测，便不免带上主观色彩。众人往往习惯用自己的经历去推测别人的，可正如世界上没有两片相同的树叶，所以往往失之偏颇。\n\n所以我突然诞生了一个想法，这世界之大，远比小说电影精彩，总会有一两个人会有与你于某一事上相同的经历，那么集全人类的英灵之力，别说还原一个人，还原一个时代也非难事。可这样也有局限，应为全人类仍是人类社会，虽尚未知是否有外星生命的存在，可很容易想象，他们的一切简直是人类无法想象的：因为只需几条简单规则的稍微改变，这宇宙，面目全非。\n\n一切都有其局限性，规则之外的规则无限逼近于真理，却永远无法穷尽，小圆被大圆所环，环环都趋向无穷，象征无知的周长却愈加扩大。\n\n从牛顿经典力学到量子力学再到胚胎中的弦理论，都是人类对宇宙还原的进化，这进化生生不息，永无所止，在可预见的未来里，还将不断进化下去。\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n索隆是个真男人，剑士背后中剑是耻辱，所以自知不敌而萌生敬服的求死之意的他，放下手中剑，张开双臂，用胸膛来迎接世上最强剑客的一击，这是何等的气魄。\n\n因战败而产生的心中的伤痛，远非那斜贯胸膛的伤口所能比拟的。\n\n我张开双臂，将自己最柔软的内心暴露出来。\n\n期待着，那痛快淋漓的一击。\n\n--------------------------------------------------------------------------------\n\n为了买一本小众的杂志，我绕道经过那里，时值新雨后，空气清新润泽，天空中风涌云动，一片令人欣喜的亮灰色 -- 维多利亚灰。我在桥上，巡天遥看天上的浓墨山水，灰色的雨云泅出一条遒劲墨龙，急掠徐行，狂舞闪旋，深浅墨云是狂龙的锦鳞云簇，苍龙渐逝，幻做巍巍昆仑，玄浓黑重，磅礴压城 ，岩崩石摧，闪电剑气如虹，斩出一道天之痕，绯红色辉光层层渐染，彩彻区明。\n\n--------------------------------------------------------------------------------\n\n感于傲慢与偏见\n\n他携晨曦破风而来。\n他一袭褐色的长长风衣，一路飒沓如流星，衣衫猎猎鼓动，仿佛天地聆听到了她的心声，雾霭悄然散去，浓重夜华被拂晓之光刺破斗篷，朦胧的风景霎时间明晰起来。\n本无心睡眠漫步于郊野的她，伤心黯然的心绪萦绕回转。突然之间，她看见了他 -- 达西先生，与曙光同现天地之间。\n达西先生给人的第一印象是傲慢，不苟言笑得近乎古板，而他的朋友，宾利先生却仿佛正好与他是两个极端，亲切的微笑，幽默诙谐的谈吐，金色头发灿烂若春日拂煦的阳光。而伊丽莎白则像欢乐活泼的小鹿，聪敏自尊而彬彬有礼。\n犹记得那次舞会，迸溅的乐符下暗流汹涌。他与她忘我的共舞，世界仿佛只有他们两人存在。来往的言语间，圆润的礼辞下机锋暗藏，语言却未成为打开两人心扉的钥匙，误会与隔阂却将两人推得更远了。\n记得那个风雨如注的清晨，伊丽莎白独自穿过平野，天地间晦暗一色，灰色的雨珠纵横，把世界切割的支离破碎。跨过泥泞，忘记了疲惫，她只是默默地赶路，凌乱发丝下红润脸庞反而因此鲜活动人。\n\n灰色的雨，搅乱了她的结愁千绪。\n（这篇不仅很乱，而且没写完）\n\n--------------------------------------------------------------------------------\n\n夏日幽敻的天空下，漂浮着和煦的云朵，绿枝扶疏，水面上涌动着炫目的金色流光。那个世界，群星闪烁着我的旋律，风息咏叹这我的歌声，曙光谱写我的五彩欢悦音符，青绿之海演绎我的浮生若泡沫聚散。仿佛乔治马丁笔下冰与火刀与剑的传奇史诗，仿佛托尔金笔下奇幻诡谲波澜壮阔的中土世界。\n\n--------------------------------------------------------------------------------\n\n蝉的絮语，聒碎了整个夏之纪年。\n\n--------------------------------------------------------------------------------\n\n我强忍着泪滴，我从不知恶之花还可以开得如此旺盛，它盘曲扭结，肆无忌惮地朝我张扬摇摆，如同梵高的向日葵，但他是至纯至暗的黑色，黑色的花瓣下涌动着无限的恶意与畅快。它是正吸食着我的悲伤，并以此作为养料么？\n\n--------------------------------------------------------------------------------\n\n雨夜，风无声地流动在身畔。天空浓墨渲染，路灯发出光怪陆离赤橙青紫的朦胧光晕。\n\n一切都是朦胧的，如雨水打湿了风景，唯黑色如影随形的清晰。虽然路人匆匆从身边走过，但我觉得这世界上只剩下了我，我的灵魂融入这雨夜，雨是黑暗凝成的如水夜色。路人们的面孔模糊而苍白，唯我 --- 寒冷与黑暗之子，享受着冻雨冷风带给我的快乐。\n\n我见雨夜多妩媚，料雨夜见我应如是。雨夜是我的伊人款款，雨丝是她湿漉漉的吻，她用夜色凝成的树脂捕获了我，我陶醉在她寒冷的琥珀里了。\n\n--------------------------------------------------------------------------------\n\n昨夜骤雨，今晨曙光熹微朝云绮丽，彤云如火如焚如染如屠燃烧晨曦，天痕湛蓝霞光绯红形成鲜明对比。（韵脚）\n\n--------------------------------------------------------------------------------\n\n月光静默\n雨水活泼\n灵感在纸上落墨\n流星划过天阔\n新光盈盈闪烁\n碧海听鲛人诉说（韵脚）\n\n--------------------------------------------------------------------------------\n\n将年华写在卷帙之上，待迟暮之年垂垂老矣，将其熊熊燃烧，将自己曾经的欢笑荣辱付之一炬，看过去的精致岁月在空气的波动中飞旋散逸，终归尘土，便在这时光篝火边纵心任性尽情狂欢。\n\n--------------------------------------------------------------------------------\n\n半月杀阵\n\n碧海凝成无际的蓝田，蓝田之上盛放数擎耀眼洁白风帆，船舷犁出雪白浪花与波浪精致回旋，船队结成半月形的船阵静静向前方驶去，月心之处仿若闪烁荧星数点。\n月牙咬合，杀机陡现，美丽之下是致命残酷的危险，战舰的枪弹如枪火玫瑰华丽绽放，将群星送归碧天。\n月牙儿轻轻荡漾，好像杀机从未出现。（韵脚）\n\n有感于大国崛起中的一幅画面，碧海蓝天白帆，英国与西班牙竞逐大西洋霸主，海战，我当时惊艳于破坏与毁灭竟也可如此唯美，故为此作。\n\n--------------------------------------------------------------------------------\n\njon，我爱你。呵，爱上一个小说中的人物，还是个男人。\n\n因为他仿佛就是我，就是我的兄弟。都只是小人物，被命运与时代的洪流所裹挟，在这无法抗中的潮流中苦苦挣扎。\n\n我们都只是小人物，jon 却承载了多得多的苦痛。\n\n私生子的身份，stark 家的血脉，守夜人的誓言，旁人的鄙视，青绿之地的律法，变色龙的误会，黑衫军的责任......\n\n与我同龄的他经历了太多的苦痛：他想同命运抗争，违誓的痛苦又让他备受煎熬；年纪轻轻就成了黑衣人的领袖，日日在虎狼之中周旋......\n\n据说在卷五，我最爱的兄弟，jon，死了。\n\n不知为何内心很平静，Jon，若火吻不能让你复生，你便去 Heaven 寻你的火吻而生吧。\n\n--------------------------------------------------------------------------------\n\n当夜魔张开了蓝青色翅膀，横绝天际自西而东地翱翔，当金星率先在浓稠的黑暗中述说着宇宙的旋律，当充斥天地的淡金色阳光如冰块般缓缓融化 --- 孤独与寂寥便空气般地弥散到了世界的每个角落。\n\nI am the universe。群山万壑孕吐我的风息，宇宙间永恒的黑暗是我无孔不入的孤寂，黑暗中我的思绪穿越光年纵横星际。\n\n银河倒泻，光阴逆转，我站在记忆之潮的浪底，看海面上风暴肆掠，波涛汹涌澎湃，但是海底这片寒冷的水域，却仿佛自洪荒诞生之初便从未有过扰动。琉璃色的海水如横亘万丈的厚重蓝色玻璃覆压在身上。\n\n我的记忆之海，那奇异的微笑，甜蜜的悲哀，难诉的悲怆，巅峰时的狂喜，逆境之中的苦痛，承浴星光的斗志，森林般茂盛的自信：记忆的潮水浸渍我心，最终化作宇宙间永恒的黑暗寒冷与孤寂。\n\n--------------------------------------------------------------------------------\n\n自今日接了你的电话，心里便一直惴惴不安着。\n\n我在害怕沉默，而话机两端连接的，却是无限的难堪的沉默。我的心像冰风雪覆了无声息的峡谷，坚硬寒冷的冰层，层层相压，谷底的我早已不堪重负。\n\n众人的期许，自己的希冀，背负的责任，沉甸甸的理想，一件一件不再给我带来动力，而是化为巨大的压力。而我能做的，只有像一只可怜的文蛤，将内心处在外壳的保护之下，沉默着。\n\n而我最害怕的，则是你对我充满信心的眼眸。\n\n你可知道，于重重压力之下，任何细微的颓唐失意，均会被害怕失败的恐惧的心无限放大，风声鹤唳草木皆兵。我便会开始怀疑自己所做的是否正确，是否因为过去的每一步都是错误，将我推至今日境地。\n\n听见你的声音，我甚至都不想用强颜欢笑来伪装出一个强大的自己，而是任由沉默向你暴露出我柔软脆弱的内心。\n\n你问我可有想对你说的话，我悲哀地笑着：“没有。”\n\n就这么，伤害了你。\n\n--------------------------------------------------------------------------------\n\n神游物外，一任思绪天马行空在瑰紫寒荒的星云尘埃。\n\n我一时之间为我的卑微渺小悲伤的泫然欲泣。\n\n宇宙星空广博伟大绚烂，而我不过是一粒转瞬即逝的尘埃。\n\n--------------------------------------------------------------------------------\n\n午夜，夜深人静，唯有我昏黄的台灯一灯如豆。\n\n倦了，揉了揉眼，放下那本记述着史诗的长卷。\n\n我起身，准备打开我紧锁的房门去倒一杯水。行至门前，抬手方欲开门，却忽然呆住了。\n\n我迷失了，我不知道自己为何在这样一个地方，为何我叫苏，不叫那书中的主角 jon snow，我迷失了现实与虚幻的界限。\n\n我很快冷静下来，我告诫自己，虽然不知道为什么我是苏，可我的确就叫苏，我正控制着这具身体。我正在一个被称作现实的世界，而不是书中那个刀与剑，冰与火的世界。\n\n为什么？\n\n我向往地望着前面那扇门。门，连接着两个一直与未知的世界，好奇心总是让人向往未知。\n\n门外，是一个全新的领域，是一个新奇的世界。人类的好奇心赋予了门神秘的美感。当形容进入一个新领域时，往往也形容成打开一扇门。\n\n也许，在这扇门外，我就是 jon snow ，也可能是罗辑……\n\n我用颤抖的手缓缓打开门，将自己消融在无边无际的黑暗里。\n\n--------------------------------------------------------------------------------\n\n我于孤寂之中看山看水看天，\n却仍免不了失望失落失眠。（韵脚）\n\n--------------------------------------------------------------------------------\n\n无论在怎样黑暗蒙昧的年代，总有一些人像星星般璀璨，在那空茫无际的黑暗之中，他们的智慧、执着、勇气反而在这黑色天幕之上愈加凸显出来，他们的光芒由点连线再由线成片，最终开启一个时代的曙光。无论曾经是怎样的黑暗困顿过，一个时代有了他们就不寂寞。一个时代也进了他们而焕发出自己独特而迷人的光彩，青史之上，不再空白，他们挥洒英华，留下浓墨重彩。\n\n--------------------------------------------------------------------------------\n\n离高考 11 天，我的心突然到了一种干净空明澄澈的境界。凭栏而倚，眺望着三年间伴我走过的熟悉景致，breeze 轻拂发际，天空蔚蓝而宁静，紫藤花架上泛开繁复的波涛，园树蓊郁而葱翠，欢笑的少女漫步林荫小径。11 天，11 天后我便要与这一切说再见了，不是怀念，而是一种说不出来的情感，仿佛微笑着挥手，同三年间每一天的每一个自己告别，我的微笑明亮而温暖。我亲爱的朋友，明日就将各奔东西，三年的欢笑与泪水愿你铭记。\n\n永别了，一去不回的自己。\n\n--------------------------------------------------------------------------------\n\n你走了，我又多了一个思念的人。\n\n今天，我开始不可抑制的思念你。我想起你在我下场时一路小跑从我手中拿过球拍；想起我们并肩作战时洒下的汗滴；想起那个温暖冬日你喋喋不休的絮语；想起我们在潮湿的雨季聆听树叶间落下的嘀嗒乐曲；想起我们一同走过操场，白色的鸟滑翔在蔚蓝的天际；想起那个晴朗夏日，阳光在我们脸上投下斑驳的罅隙；想起我在失落时，你给予我的温暖慰藉。\n\n叫我如何忘了你，我残存的思绪，如碧落海般翻涌不息，你在我的心底，潋滟出执着潮汐。\n\n可如今你已远去，只在我心里留下永恒回忆。\n\n飞鸟也已远去，天空是否铭记？（韵脚）\n\n--------------------------------------------------------------------------------\n\n今日我又遇见了他，他言语间流露出来的消极厌世思想，让我微微有些心惊。但毕竟分离太久了，我对他的情感也不如多年前的深厚了。\n\n我问他有朋友么？因为他此刻的语气，都像极了我于逆境之中孤独一人，茕茕孑立，黯然神伤，仿佛精神荒漠中的疲惫的落单路人。\n\n回答是不出我所料的，没有。我立刻就理解了他内心的痛苦，因为在某些方面，他与我实在太像了，我只消把自己的经历套在他身上便可以了。\n\n其实像我和他这样的人，真的是害怕没有朋友，或者理解自己的人的。我并不害怕孤独，因为孤独是一个人的盛大狂欢，我可以任由我的思想天马行空，挥斥天际，纵横六合，汪洋恣肆。从宇宙的光年深处，到量子的微观秘密；从电影的华丽映像，到青灯黄卷间的呢喃自语。我陶醉于我头脑间的世界，这个世界让我思索、苦闷、微笑、狂喜，我从我的思索之中探寻到了我存在的意义。（我思故我在）\n\n所以我并不害怕孤独，我害怕寂寞。寂寞意味着没有交流。朋友其实是一个灵魂，两个身体。在精神的荒漠里，两个旅人将奇迹般的相遇，他们该是多么狂喜和珍惜这来之不易的友谊。从那个世界里，我找寻到了许多奇异有趣的瑰宝，我也已经迫不及待地想和那个值得交流的友人，分享自己。我们两人的思想在这美妙的交流中，碰撞出了更多灵感的火花，这火花又温暖了彼此。（韵脚）\n\n伯乐来之不易，可在我们思想的世界里，我们就是幸福的伯牙与子期。淡如水的友谊可期，而《真心为你》（EVA）的朋友难觅。所以，你知道我有多么思念你。（韵脚）我想，一两个情投意合的朋友欢颜一聚，流觞曲水间畅叙幽情，这于我而言，便是人生见最大的爽心乐事了吧。\n\n--------------------------------------------------------------------------------\n\n结交了一个新朋友，我是因为他十分像我那旧友而接近他的。结果他不仅长得像，而且举手投足间的习惯动作都极为相似，让我不得不在感到造物神奇的同时感谢上帝。\n\n而且据他说，他看到我时，也觉得有一种莫名的亲切感，我不确定他说这话是为了逗我笑还是发自内心，但我觉得很高兴。\n\n我和他方才说了几句话就嬉笑打闹的如认识多年的好友，他用手捂住嘴用我熟悉的姿势笑着，而我则弯下腰轻轻打他的肩。\n\n旧日的光景如水般荡漾眼前，但见欢笑的岁月盈然可掬，我......\n\n我不敢闭眼，怕眼前的一切都是幻觉。\n\n--------------------------------------------------------------------------------\n\n一艘孤独但并不寂寞的长桅木杆帆船骄傲地行驶在碧落之南，海皇深碧的眸里漾着我的白帆，远及苍穹的粼粼细波微蓝，身边有飞翔的海鸥作伴，军舰鸟忠诚的伫立桅杆，眺望远方腾起的飞鱼滑翔在小岛之泮， 微垂的椰子树落实在金沙的海滩，蝴蝶鱼翩跹在堡礁之岸，绚烂的珊瑚五色石染，浅黛的贝壳如星河流转，翠绿的大海是奇异的鲛人之番。（韵脚）\n\n--------------------------------------------------------------------------------\n\n嘴角那抹微笑\n不羁带着轻佻\n神游物外惹人恼\n看窗外悠悠云水谣\n竹影分绿与芭蕉\n枫岚催红了樱桃\n流光逝水黯然憔\n白驹过隙把人抛\n寂寞万古豪\n然而我却不知道\n岁月不老\n即使在最黑暗的今朝\n透过那朦胧的雾气\n也会脱颖出你的微笑\n你那不羁的微笑\n在三生石和我的心上\n又重重地刻下一刀（韵脚）\n\n关于这个，开头两句算是我妙手而得的句子，我想表达对游人的思念，友人在我心中的印象就像窗外的景物一样美好，但随即我的情绪便逐渐黯淡下来，毕竟逝者如斯，我和朋友已经分离多年。\n于是我很容易便想到了：“流光容易把人抛，红了......”此句有写景又有对逝水流年的叹息，然后写景完结后，我便写了无限惆怅的情绪。\n但不能总是沉湎于伤怀，便有了下一句的峰回路转。纵时光匆匆，但我对你的永恒思念不老。你为我盛开的笑靥，即使在最黑暗的年代也是不灭的风景。而且这句与开头相呼应，构成一种回环往复。但是我不知道他们说我写景写的突兀，可能是我水平不够吧，但我的确是费了一番心思的。\n\n--------------------------------------------------------------------------------\n\n当我阅读科幻的时候，由于背景的设定往往是一个文明的兴盛与覆灭，一个时代的兴衰荣辱，一个种族的进化与消亡...... 简而言之，宏大。\n\n正是这种宏大给了我一个不同的视角，让我得以站在一个全新的高度来思考观察问题，超越我个人、民族、国家、种族的狭隘的偏见。沉浸在那个世界里，我感知我倾听我思考，那真的是一种很美妙的境界。\n\n但我毕竟是人类，我是如此的热爱和痛恨这个种族，爱自不必多说，恨则是一种复杂的情感：恨铁不成钢的恨，彻底绝望，痛入骨髓的恨......\n\n我喜欢仰望那片瑰丽而璀璨的星空，繁星注视下的我是多么渺小。我希望我的思绪能飞越光年穿透星际，然而浩瀚伟大的宇宙，总是以它的博大一次次提醒我的渺小。我想，我向往大海和星空应该是出于同一原因的吧。\n\n我曾在空无一人的野外嘹望星空，每一个莹莹小点就是一只眼睛（观察者？），耳畔传入激越的虫鸣，微风拂过发际，带走我的热量，带来丝丝清凉。这就是地球大气磅礴的生态系统，无机与有机共同作用的结果。它循环，它稳定，它是如此的美丽，如此的生生不息，每一个生命，每一缕清风，每一米阳光，每一个无序的相互作用，却将宇宙整体带入高度的有序，他们竟是如此地作为宇宙的一个碎片，来抵御宇宙的敌人 --- 熵增么。\n\n为什么我仰望星空，因为我渴望回归；为什么人们要攀登山峰，因为山就在那里。（语出霍金，及《群星，我的归宿》）\n\n也许那直刺寰宇苍穹的利剑，就是人类的伟大吧。\n\n--------------------------------------------------------------------------------\n\n确定要删除吗？\n\n点击取消。\n\n第一次与这款网游邂逅是因为表哥，他正全身心的投入其中，这款游戏画面精美，人物卡通可爱，而那时童年的我木讷内向，生活中几乎没有朋友，所以这游戏很快就令我迷上了。游戏中的伙伴们往往仗义而慷慨，我觉得他们比现实中的同学更让我体味到了什么是友情，现实中一无是处的我却是游戏中不可或缺的一份子。\n\n我仍然记得那一天在他们的帮助下，我转职成为圣骑士时，内心充满的神圣的使命感，我发誓要向他们帮助我一样，帮助游戏中每一个比我弱小的人。我知道这听起来很可笑，可我当时幼小的心里的确是这么想的。\n\n确定要删除吗？\n\n颤抖着点击取消。\n\n我试着回忆童年与此有关的记忆，但奇怪的是我唯一能想起来是，我在那个夏日奔跑着的身影。暑假父母不在家，我便可以整天坐在电脑桌前了，唯一的例外是三餐得到姨妈家去吃，为了不挤占游戏时间，我都是跑着去的。那种在奔跑中的期待和喜悦似乎远远超过了游戏的快乐。\n\n我记起冒着着霖霖细雨，踩踏着青翠欲滴的草地的奔跑的我；在夏日烈焰的炙烤下，快过像水纹样波澜起伏的土峦的我；在洒水车刚洒过水的岁的路面，穿过蒸腾的热气的我；在七月流火微醺夏风吹拂下匆匆回家的我；跑过紫藤花架，阳光在身上投下斑驳光栅的我......\n\n蓦然回首，方才讶然惊觉，原来那一路上不灭的风景，比游戏更加撩动我的心弦。年少的滋味，非等到时过境迁，才能品味出其中的淡淡伤感。\n\n确定要删除吗？\n\n犹豫再三，点击取消。\n\n我从这些年的游戏生涯中得到了什么呢？有友谊，有装备，有等级。可这些全都是虚拟的幻象啊，电源一关，一切烟消云散。\n\n而现实中的我收获了在及格线上徘徊的分数，度数日渐加深的眼镜，人情淡薄的交际圈...... 我想那段时间里，别人眼中的我一定是这样，一个人坐着发呆，眼神迟滞，莫名其妙的大笑，苍白而怪异。我将视线从显示屏移向窗外，窗外是一片如火残夕，燃烧在天际。\n\n确定要删除吗\n\n我平静地点击确定。\n\n我的心里只剩下灰烬。\n\n《哈利波特》里邓布利多所豢养的凤凰在死亡时会留下一片灰烬，但若仔细看去，便仿佛看到有伟大的生命不甘于灰烬的桎梏，跃跃欲出，当今炫目的光剑最终刺破黑暗，与过去告别的凤凰便重生了。\n\n我这时心里有一种无法言语的情感：与过去的我挥手作别，如果非要用一个词形容，我想是重生。\n\n（忍不住解释一下，这篇不是写的我自己……）\n\n--------------------------------------------------------------------------------\n\n最近看了秒数五厘米，初看颇有不屑，事后却生出不少感触。\n\n樱花是我相对而言最不喜欢的一部，讲两青梅竹马的孩子，分离后女主角在车站等她的小男友的故事，俗到烂透的情节，但值得称道的是导演对细节的渲染，对人物内心的刻画，细腻的笔触勾勒出双方忐忑的心。在那个大雪纷飞的冬日夜晚，不能按时赴约的心一定是无奈而焦灼的吧。然而最触动我的却是那种孤独。\n\n一辆新干线的火车，孤寂地行驶在夜雪风飘的荒原里，没有灯光，没有人烟，没有声嚣。漫天的风雪迷离了窗外的风景，能看到的只是白茫茫的一片。仿佛是白色世界里银装素裹的旅人，无心去欣赏那片银装素裹，只想着快些找到雪夜里那另一片孤寂焦灼的心，身后留下一长串迷途的脚步，而前方未知的道路何其漫长。\n\n第二话宇航员是我最喜欢的一部。讲述一个女孩暗恋我们虽未成年，但生活经历早已是他早早成熟的男主角的故事。很容易相信，散发着成熟男人魅力的男主角远野，是很容易赚得女孩子芳心的，鹤立鸡群的味道吧。但远野明白一切，他此时和我一样有着远大的理想，十分清楚女孩子是他生命中的匆匆过客，因此虽然对女孩很好，可心里并没有任何特殊的波澜。我挺为那女孩惋惜，如此执着的精神，为何要陷入这种注定没有结果的泥潭呢？女子耽兮，不可说也！\n\n但我很高兴的是，以上只是我对他们情感的一丝感慨，我并没有纠缠于其中，我只是冷静的分析，最打动我的是，是两人所具有的那种精神。\n\n就像片中人类发射火箭，远野有那种渴望走向更高处的精神，还有 never give up 的执着毅力。虽然影片中并没有详写他为理想付出过多少，但有着相似经历的我很容易就能看见他洒下的每一滴不为人知的汗水。女孩那种与海浪搏击的精神也使我感动。\n\n我记得他们坐在路边的堤上仰望星空，紫色瑰丽的银河缓缓流转，星簇明灭震撼人心，起起落落的飞机光斑像是人类驶向未来的太空港。风轻轻地吹过他们的衣襟，吹过身边青涩的麦田，青色的麦芒翻滚出碧绿的浪。\n\n青涩得一如远野成熟却未熟透的心。\n\n秒数五厘米，讲述远野有坚定到疲乏到迷茫的故事。这却与我更相近了。\n\n秒数五厘米，无论是飘零美丽的樱花在风中的纷舞逝去—— 一如随幻彩时光匆匆逝去的年少单纯美好；抑或十年时间的天各一方，山高水长，在地球的两极孤独地守望。无论哪一个都是一段动人的故事。\n\n--------------------------------------------------------------------------------\n\n千寻初入结界之时，油屋门前是异样的苍凉与繁华：苍凉是因为没有人声鼎沸的生机；繁华是因为那些个性鲜明的妖怪们分明表示着另一个迥异于人界的喧闹。\n\n同样是模仿人类的“冠盖满京华”的喧嚣，喧嚣的背后又何尝不是寄托了一种妖怪们无奈的寂寞呢？日漫《萤火之森》中与此相似的场景，夏日祭是妖怪们一年一度宣泄压抑了的自己的盛典，不过在《萤火之森》中，导演也许并未想到表达这么多，这些琐思，更可能是我牵强附会的推断吧：\n\n明明不是人类，却想要模仿人类；明明相爱，两人却注定永生无法在一起。想用触碰，感受对方身体温暖的刹那，却也是无可挽回的别离之始。\n\n在这里，白龙与与《萤火之森》的女主 -- 萤倒是有相似之处，白龙帮助千寻治好父母之时，却也正是标志着别离的最终到来。但是千寻要远比萤幸福，千寻不仅可以感受到恋人手心的暖意，更能用心体味到恋人对自己的呵护（这其实是每个女孩子都梦想着的吧）。我是男人，我喜欢白龙，我愿与他做一个交心知己、君子之交淡如水的朋友；若是女生的话，我想会爱上白龙吧。\n\n在《千与千寻》之中，结局离别的悲伤明显被弱化，因为这部电影动漫是橘黄色的温暖治愈系，这也是宫崎骏的一贯风格呢。\n\n何况，白龙与千寻还在分离之时，许下了一定再次相见的约定。\n\n钱婆婆的小木屋，充溢着木黄、微红的暖系色调，让人回忆起大雪纷飞的夜晚，在外婆家火炉前安然逗趣的静谧时光，这里是像家一样的避风港湾，小千也正是在这里重新拿回了千寻的名字。“绿蚁新醅酒，红泥暖火炉”，在宫崎骏的作品中，我分明看到了唐国诗圣的意境。\n\n心之懵懂的少女初次在心中萌生出对某人朦胧的爱的依恋。千寻在这个异世界里飞速地成长着，从一开始的不敢下悬崖边的楼梯，到后来为了救治白龙而冒险走过半空中晃荡的空管道；从影片伊始的嫌弃微微凋谢的花瓣，到后来为了救回父母而忍辱负重（这个词用的好严重）清洗腐烂神身上无人愿意忍受的淤泥：与其说是因为她对白龙的爱情的激励，我却更愿意相信这是千寻这个女孩内心中来自坚强与上进的力量。\n\n她的善良，与无脸男的邂逅，看得我心中一悸。原本是素不相识的人，无脸男在与千寻相识前，连存在都只是若有若无被人忽视的幽魂，却会特意为它半掩着门，好方便它进来休憩。这是何等的单纯善良与美好。我愿与这样的人相伴，但是我另一方面却又害怕与这样美好的人相伴，我害怕自己的接触都是对这样一种美好的亵渎。无脸男是怎样的低微卑贱者，但在千寻心里，仍有为弱者永远保留的位置。这样高贵的善良，我愿撷取其一段香。这样的女主几乎是理想人格的化身，或许在这样的性格之中又寄托着宫崎骏的某种内心思恋也说不定呢。\n\n犹记得白龙牵手带她走过繁密花丛的那个场景，画面色泽明丽，音乐活泼轻快。风拂花甸，花圃中荡开淡绿色的波纹，这又是谁的伊甸园。空气中漂浮和弦，幻听般想起久石让的《夏天》。\n（未完）\n\n--------------------------------------------------------------------------------\n\n那快门定格的一瞬\n青春浓缩成记忆的年轮\n\n--------------------------------------------------------------------------------\n\n（上面所有这些文字写成于高中的不同时期，但并未按照时间顺序整理。因为是记忆碎片，故名为《记忆碎片》。以上。）\n","source":"_posts/记忆碎片.md","raw":"---\ntitle: 记忆碎片\ncopyright: true\ndate: 2012-08-29 23:15:33\ntags: [chaos]\ncomments:\n---\n\n这其实是一种还原，根据大自然中的几条简单法则，还原出一个诡谲复杂的世界。根据一个人的性格，推测出他经历过的事件，他会怎么想。这便是所谓的看穿一个人。但这仍然只是一种猜测，既然是猜测，便不免带上主观色彩。众人往往习惯用自己的经历去推测别人的，可正如世界上没有两片相同的树叶，所以往往失之偏颇。\n\n所以我突然诞生了一个想法，这世界之大，远比小说电影精彩，总会有一两个人会有与你于某一事上相同的经历，那么集全人类的英灵之力，别说还原一个人，还原一个时代也非难事。可这样也有局限，应为全人类仍是人类社会，虽尚未知是否有外星生命的存在，可很容易想象，他们的一切简直是人类无法想象的：因为只需几条简单规则的稍微改变，这宇宙，面目全非。\n\n一切都有其局限性，规则之外的规则无限逼近于真理，却永远无法穷尽，小圆被大圆所环，环环都趋向无穷，象征无知的周长却愈加扩大。\n\n从牛顿经典力学到量子力学再到胚胎中的弦理论，都是人类对宇宙还原的进化，这进化生生不息，永无所止，在可预见的未来里，还将不断进化下去。\n\n<!--more-->\n\n--------------------------------------------------------------------------------\n\n索隆是个真男人，剑士背后中剑是耻辱，所以自知不敌而萌生敬服的求死之意的他，放下手中剑，张开双臂，用胸膛来迎接世上最强剑客的一击，这是何等的气魄。\n\n因战败而产生的心中的伤痛，远非那斜贯胸膛的伤口所能比拟的。\n\n我张开双臂，将自己最柔软的内心暴露出来。\n\n期待着，那痛快淋漓的一击。\n\n--------------------------------------------------------------------------------\n\n为了买一本小众的杂志，我绕道经过那里，时值新雨后，空气清新润泽，天空中风涌云动，一片令人欣喜的亮灰色 -- 维多利亚灰。我在桥上，巡天遥看天上的浓墨山水，灰色的雨云泅出一条遒劲墨龙，急掠徐行，狂舞闪旋，深浅墨云是狂龙的锦鳞云簇，苍龙渐逝，幻做巍巍昆仑，玄浓黑重，磅礴压城 ，岩崩石摧，闪电剑气如虹，斩出一道天之痕，绯红色辉光层层渐染，彩彻区明。\n\n--------------------------------------------------------------------------------\n\n感于傲慢与偏见\n\n他携晨曦破风而来。\n他一袭褐色的长长风衣，一路飒沓如流星，衣衫猎猎鼓动，仿佛天地聆听到了她的心声，雾霭悄然散去，浓重夜华被拂晓之光刺破斗篷，朦胧的风景霎时间明晰起来。\n本无心睡眠漫步于郊野的她，伤心黯然的心绪萦绕回转。突然之间，她看见了他 -- 达西先生，与曙光同现天地之间。\n达西先生给人的第一印象是傲慢，不苟言笑得近乎古板，而他的朋友，宾利先生却仿佛正好与他是两个极端，亲切的微笑，幽默诙谐的谈吐，金色头发灿烂若春日拂煦的阳光。而伊丽莎白则像欢乐活泼的小鹿，聪敏自尊而彬彬有礼。\n犹记得那次舞会，迸溅的乐符下暗流汹涌。他与她忘我的共舞，世界仿佛只有他们两人存在。来往的言语间，圆润的礼辞下机锋暗藏，语言却未成为打开两人心扉的钥匙，误会与隔阂却将两人推得更远了。\n记得那个风雨如注的清晨，伊丽莎白独自穿过平野，天地间晦暗一色，灰色的雨珠纵横，把世界切割的支离破碎。跨过泥泞，忘记了疲惫，她只是默默地赶路，凌乱发丝下红润脸庞反而因此鲜活动人。\n\n灰色的雨，搅乱了她的结愁千绪。\n（这篇不仅很乱，而且没写完）\n\n--------------------------------------------------------------------------------\n\n夏日幽敻的天空下，漂浮着和煦的云朵，绿枝扶疏，水面上涌动着炫目的金色流光。那个世界，群星闪烁着我的旋律，风息咏叹这我的歌声，曙光谱写我的五彩欢悦音符，青绿之海演绎我的浮生若泡沫聚散。仿佛乔治马丁笔下冰与火刀与剑的传奇史诗，仿佛托尔金笔下奇幻诡谲波澜壮阔的中土世界。\n\n--------------------------------------------------------------------------------\n\n蝉的絮语，聒碎了整个夏之纪年。\n\n--------------------------------------------------------------------------------\n\n我强忍着泪滴，我从不知恶之花还可以开得如此旺盛，它盘曲扭结，肆无忌惮地朝我张扬摇摆，如同梵高的向日葵，但他是至纯至暗的黑色，黑色的花瓣下涌动着无限的恶意与畅快。它是正吸食着我的悲伤，并以此作为养料么？\n\n--------------------------------------------------------------------------------\n\n雨夜，风无声地流动在身畔。天空浓墨渲染，路灯发出光怪陆离赤橙青紫的朦胧光晕。\n\n一切都是朦胧的，如雨水打湿了风景，唯黑色如影随形的清晰。虽然路人匆匆从身边走过，但我觉得这世界上只剩下了我，我的灵魂融入这雨夜，雨是黑暗凝成的如水夜色。路人们的面孔模糊而苍白，唯我 --- 寒冷与黑暗之子，享受着冻雨冷风带给我的快乐。\n\n我见雨夜多妩媚，料雨夜见我应如是。雨夜是我的伊人款款，雨丝是她湿漉漉的吻，她用夜色凝成的树脂捕获了我，我陶醉在她寒冷的琥珀里了。\n\n--------------------------------------------------------------------------------\n\n昨夜骤雨，今晨曙光熹微朝云绮丽，彤云如火如焚如染如屠燃烧晨曦，天痕湛蓝霞光绯红形成鲜明对比。（韵脚）\n\n--------------------------------------------------------------------------------\n\n月光静默\n雨水活泼\n灵感在纸上落墨\n流星划过天阔\n新光盈盈闪烁\n碧海听鲛人诉说（韵脚）\n\n--------------------------------------------------------------------------------\n\n将年华写在卷帙之上，待迟暮之年垂垂老矣，将其熊熊燃烧，将自己曾经的欢笑荣辱付之一炬，看过去的精致岁月在空气的波动中飞旋散逸，终归尘土，便在这时光篝火边纵心任性尽情狂欢。\n\n--------------------------------------------------------------------------------\n\n半月杀阵\n\n碧海凝成无际的蓝田，蓝田之上盛放数擎耀眼洁白风帆，船舷犁出雪白浪花与波浪精致回旋，船队结成半月形的船阵静静向前方驶去，月心之处仿若闪烁荧星数点。\n月牙咬合，杀机陡现，美丽之下是致命残酷的危险，战舰的枪弹如枪火玫瑰华丽绽放，将群星送归碧天。\n月牙儿轻轻荡漾，好像杀机从未出现。（韵脚）\n\n有感于大国崛起中的一幅画面，碧海蓝天白帆，英国与西班牙竞逐大西洋霸主，海战，我当时惊艳于破坏与毁灭竟也可如此唯美，故为此作。\n\n--------------------------------------------------------------------------------\n\njon，我爱你。呵，爱上一个小说中的人物，还是个男人。\n\n因为他仿佛就是我，就是我的兄弟。都只是小人物，被命运与时代的洪流所裹挟，在这无法抗中的潮流中苦苦挣扎。\n\n我们都只是小人物，jon 却承载了多得多的苦痛。\n\n私生子的身份，stark 家的血脉，守夜人的誓言，旁人的鄙视，青绿之地的律法，变色龙的误会，黑衫军的责任......\n\n与我同龄的他经历了太多的苦痛：他想同命运抗争，违誓的痛苦又让他备受煎熬；年纪轻轻就成了黑衣人的领袖，日日在虎狼之中周旋......\n\n据说在卷五，我最爱的兄弟，jon，死了。\n\n不知为何内心很平静，Jon，若火吻不能让你复生，你便去 Heaven 寻你的火吻而生吧。\n\n--------------------------------------------------------------------------------\n\n当夜魔张开了蓝青色翅膀，横绝天际自西而东地翱翔，当金星率先在浓稠的黑暗中述说着宇宙的旋律，当充斥天地的淡金色阳光如冰块般缓缓融化 --- 孤独与寂寥便空气般地弥散到了世界的每个角落。\n\nI am the universe。群山万壑孕吐我的风息，宇宙间永恒的黑暗是我无孔不入的孤寂，黑暗中我的思绪穿越光年纵横星际。\n\n银河倒泻，光阴逆转，我站在记忆之潮的浪底，看海面上风暴肆掠，波涛汹涌澎湃，但是海底这片寒冷的水域，却仿佛自洪荒诞生之初便从未有过扰动。琉璃色的海水如横亘万丈的厚重蓝色玻璃覆压在身上。\n\n我的记忆之海，那奇异的微笑，甜蜜的悲哀，难诉的悲怆，巅峰时的狂喜，逆境之中的苦痛，承浴星光的斗志，森林般茂盛的自信：记忆的潮水浸渍我心，最终化作宇宙间永恒的黑暗寒冷与孤寂。\n\n--------------------------------------------------------------------------------\n\n自今日接了你的电话，心里便一直惴惴不安着。\n\n我在害怕沉默，而话机两端连接的，却是无限的难堪的沉默。我的心像冰风雪覆了无声息的峡谷，坚硬寒冷的冰层，层层相压，谷底的我早已不堪重负。\n\n众人的期许，自己的希冀，背负的责任，沉甸甸的理想，一件一件不再给我带来动力，而是化为巨大的压力。而我能做的，只有像一只可怜的文蛤，将内心处在外壳的保护之下，沉默着。\n\n而我最害怕的，则是你对我充满信心的眼眸。\n\n你可知道，于重重压力之下，任何细微的颓唐失意，均会被害怕失败的恐惧的心无限放大，风声鹤唳草木皆兵。我便会开始怀疑自己所做的是否正确，是否因为过去的每一步都是错误，将我推至今日境地。\n\n听见你的声音，我甚至都不想用强颜欢笑来伪装出一个强大的自己，而是任由沉默向你暴露出我柔软脆弱的内心。\n\n你问我可有想对你说的话，我悲哀地笑着：“没有。”\n\n就这么，伤害了你。\n\n--------------------------------------------------------------------------------\n\n神游物外，一任思绪天马行空在瑰紫寒荒的星云尘埃。\n\n我一时之间为我的卑微渺小悲伤的泫然欲泣。\n\n宇宙星空广博伟大绚烂，而我不过是一粒转瞬即逝的尘埃。\n\n--------------------------------------------------------------------------------\n\n午夜，夜深人静，唯有我昏黄的台灯一灯如豆。\n\n倦了，揉了揉眼，放下那本记述着史诗的长卷。\n\n我起身，准备打开我紧锁的房门去倒一杯水。行至门前，抬手方欲开门，却忽然呆住了。\n\n我迷失了，我不知道自己为何在这样一个地方，为何我叫苏，不叫那书中的主角 jon snow，我迷失了现实与虚幻的界限。\n\n我很快冷静下来，我告诫自己，虽然不知道为什么我是苏，可我的确就叫苏，我正控制着这具身体。我正在一个被称作现实的世界，而不是书中那个刀与剑，冰与火的世界。\n\n为什么？\n\n我向往地望着前面那扇门。门，连接着两个一直与未知的世界，好奇心总是让人向往未知。\n\n门外，是一个全新的领域，是一个新奇的世界。人类的好奇心赋予了门神秘的美感。当形容进入一个新领域时，往往也形容成打开一扇门。\n\n也许，在这扇门外，我就是 jon snow ，也可能是罗辑……\n\n我用颤抖的手缓缓打开门，将自己消融在无边无际的黑暗里。\n\n--------------------------------------------------------------------------------\n\n我于孤寂之中看山看水看天，\n却仍免不了失望失落失眠。（韵脚）\n\n--------------------------------------------------------------------------------\n\n无论在怎样黑暗蒙昧的年代，总有一些人像星星般璀璨，在那空茫无际的黑暗之中，他们的智慧、执着、勇气反而在这黑色天幕之上愈加凸显出来，他们的光芒由点连线再由线成片，最终开启一个时代的曙光。无论曾经是怎样的黑暗困顿过，一个时代有了他们就不寂寞。一个时代也进了他们而焕发出自己独特而迷人的光彩，青史之上，不再空白，他们挥洒英华，留下浓墨重彩。\n\n--------------------------------------------------------------------------------\n\n离高考 11 天，我的心突然到了一种干净空明澄澈的境界。凭栏而倚，眺望着三年间伴我走过的熟悉景致，breeze 轻拂发际，天空蔚蓝而宁静，紫藤花架上泛开繁复的波涛，园树蓊郁而葱翠，欢笑的少女漫步林荫小径。11 天，11 天后我便要与这一切说再见了，不是怀念，而是一种说不出来的情感，仿佛微笑着挥手，同三年间每一天的每一个自己告别，我的微笑明亮而温暖。我亲爱的朋友，明日就将各奔东西，三年的欢笑与泪水愿你铭记。\n\n永别了，一去不回的自己。\n\n--------------------------------------------------------------------------------\n\n你走了，我又多了一个思念的人。\n\n今天，我开始不可抑制的思念你。我想起你在我下场时一路小跑从我手中拿过球拍；想起我们并肩作战时洒下的汗滴；想起那个温暖冬日你喋喋不休的絮语；想起我们在潮湿的雨季聆听树叶间落下的嘀嗒乐曲；想起我们一同走过操场，白色的鸟滑翔在蔚蓝的天际；想起那个晴朗夏日，阳光在我们脸上投下斑驳的罅隙；想起我在失落时，你给予我的温暖慰藉。\n\n叫我如何忘了你，我残存的思绪，如碧落海般翻涌不息，你在我的心底，潋滟出执着潮汐。\n\n可如今你已远去，只在我心里留下永恒回忆。\n\n飞鸟也已远去，天空是否铭记？（韵脚）\n\n--------------------------------------------------------------------------------\n\n今日我又遇见了他，他言语间流露出来的消极厌世思想，让我微微有些心惊。但毕竟分离太久了，我对他的情感也不如多年前的深厚了。\n\n我问他有朋友么？因为他此刻的语气，都像极了我于逆境之中孤独一人，茕茕孑立，黯然神伤，仿佛精神荒漠中的疲惫的落单路人。\n\n回答是不出我所料的，没有。我立刻就理解了他内心的痛苦，因为在某些方面，他与我实在太像了，我只消把自己的经历套在他身上便可以了。\n\n其实像我和他这样的人，真的是害怕没有朋友，或者理解自己的人的。我并不害怕孤独，因为孤独是一个人的盛大狂欢，我可以任由我的思想天马行空，挥斥天际，纵横六合，汪洋恣肆。从宇宙的光年深处，到量子的微观秘密；从电影的华丽映像，到青灯黄卷间的呢喃自语。我陶醉于我头脑间的世界，这个世界让我思索、苦闷、微笑、狂喜，我从我的思索之中探寻到了我存在的意义。（我思故我在）\n\n所以我并不害怕孤独，我害怕寂寞。寂寞意味着没有交流。朋友其实是一个灵魂，两个身体。在精神的荒漠里，两个旅人将奇迹般的相遇，他们该是多么狂喜和珍惜这来之不易的友谊。从那个世界里，我找寻到了许多奇异有趣的瑰宝，我也已经迫不及待地想和那个值得交流的友人，分享自己。我们两人的思想在这美妙的交流中，碰撞出了更多灵感的火花，这火花又温暖了彼此。（韵脚）\n\n伯乐来之不易，可在我们思想的世界里，我们就是幸福的伯牙与子期。淡如水的友谊可期，而《真心为你》（EVA）的朋友难觅。所以，你知道我有多么思念你。（韵脚）我想，一两个情投意合的朋友欢颜一聚，流觞曲水间畅叙幽情，这于我而言，便是人生见最大的爽心乐事了吧。\n\n--------------------------------------------------------------------------------\n\n结交了一个新朋友，我是因为他十分像我那旧友而接近他的。结果他不仅长得像，而且举手投足间的习惯动作都极为相似，让我不得不在感到造物神奇的同时感谢上帝。\n\n而且据他说，他看到我时，也觉得有一种莫名的亲切感，我不确定他说这话是为了逗我笑还是发自内心，但我觉得很高兴。\n\n我和他方才说了几句话就嬉笑打闹的如认识多年的好友，他用手捂住嘴用我熟悉的姿势笑着，而我则弯下腰轻轻打他的肩。\n\n旧日的光景如水般荡漾眼前，但见欢笑的岁月盈然可掬，我......\n\n我不敢闭眼，怕眼前的一切都是幻觉。\n\n--------------------------------------------------------------------------------\n\n一艘孤独但并不寂寞的长桅木杆帆船骄傲地行驶在碧落之南，海皇深碧的眸里漾着我的白帆，远及苍穹的粼粼细波微蓝，身边有飞翔的海鸥作伴，军舰鸟忠诚的伫立桅杆，眺望远方腾起的飞鱼滑翔在小岛之泮， 微垂的椰子树落实在金沙的海滩，蝴蝶鱼翩跹在堡礁之岸，绚烂的珊瑚五色石染，浅黛的贝壳如星河流转，翠绿的大海是奇异的鲛人之番。（韵脚）\n\n--------------------------------------------------------------------------------\n\n嘴角那抹微笑\n不羁带着轻佻\n神游物外惹人恼\n看窗外悠悠云水谣\n竹影分绿与芭蕉\n枫岚催红了樱桃\n流光逝水黯然憔\n白驹过隙把人抛\n寂寞万古豪\n然而我却不知道\n岁月不老\n即使在最黑暗的今朝\n透过那朦胧的雾气\n也会脱颖出你的微笑\n你那不羁的微笑\n在三生石和我的心上\n又重重地刻下一刀（韵脚）\n\n关于这个，开头两句算是我妙手而得的句子，我想表达对游人的思念，友人在我心中的印象就像窗外的景物一样美好，但随即我的情绪便逐渐黯淡下来，毕竟逝者如斯，我和朋友已经分离多年。\n于是我很容易便想到了：“流光容易把人抛，红了......”此句有写景又有对逝水流年的叹息，然后写景完结后，我便写了无限惆怅的情绪。\n但不能总是沉湎于伤怀，便有了下一句的峰回路转。纵时光匆匆，但我对你的永恒思念不老。你为我盛开的笑靥，即使在最黑暗的年代也是不灭的风景。而且这句与开头相呼应，构成一种回环往复。但是我不知道他们说我写景写的突兀，可能是我水平不够吧，但我的确是费了一番心思的。\n\n--------------------------------------------------------------------------------\n\n当我阅读科幻的时候，由于背景的设定往往是一个文明的兴盛与覆灭，一个时代的兴衰荣辱，一个种族的进化与消亡...... 简而言之，宏大。\n\n正是这种宏大给了我一个不同的视角，让我得以站在一个全新的高度来思考观察问题，超越我个人、民族、国家、种族的狭隘的偏见。沉浸在那个世界里，我感知我倾听我思考，那真的是一种很美妙的境界。\n\n但我毕竟是人类，我是如此的热爱和痛恨这个种族，爱自不必多说，恨则是一种复杂的情感：恨铁不成钢的恨，彻底绝望，痛入骨髓的恨......\n\n我喜欢仰望那片瑰丽而璀璨的星空，繁星注视下的我是多么渺小。我希望我的思绪能飞越光年穿透星际，然而浩瀚伟大的宇宙，总是以它的博大一次次提醒我的渺小。我想，我向往大海和星空应该是出于同一原因的吧。\n\n我曾在空无一人的野外嘹望星空，每一个莹莹小点就是一只眼睛（观察者？），耳畔传入激越的虫鸣，微风拂过发际，带走我的热量，带来丝丝清凉。这就是地球大气磅礴的生态系统，无机与有机共同作用的结果。它循环，它稳定，它是如此的美丽，如此的生生不息，每一个生命，每一缕清风，每一米阳光，每一个无序的相互作用，却将宇宙整体带入高度的有序，他们竟是如此地作为宇宙的一个碎片，来抵御宇宙的敌人 --- 熵增么。\n\n为什么我仰望星空，因为我渴望回归；为什么人们要攀登山峰，因为山就在那里。（语出霍金，及《群星，我的归宿》）\n\n也许那直刺寰宇苍穹的利剑，就是人类的伟大吧。\n\n--------------------------------------------------------------------------------\n\n确定要删除吗？\n\n点击取消。\n\n第一次与这款网游邂逅是因为表哥，他正全身心的投入其中，这款游戏画面精美，人物卡通可爱，而那时童年的我木讷内向，生活中几乎没有朋友，所以这游戏很快就令我迷上了。游戏中的伙伴们往往仗义而慷慨，我觉得他们比现实中的同学更让我体味到了什么是友情，现实中一无是处的我却是游戏中不可或缺的一份子。\n\n我仍然记得那一天在他们的帮助下，我转职成为圣骑士时，内心充满的神圣的使命感，我发誓要向他们帮助我一样，帮助游戏中每一个比我弱小的人。我知道这听起来很可笑，可我当时幼小的心里的确是这么想的。\n\n确定要删除吗？\n\n颤抖着点击取消。\n\n我试着回忆童年与此有关的记忆，但奇怪的是我唯一能想起来是，我在那个夏日奔跑着的身影。暑假父母不在家，我便可以整天坐在电脑桌前了，唯一的例外是三餐得到姨妈家去吃，为了不挤占游戏时间，我都是跑着去的。那种在奔跑中的期待和喜悦似乎远远超过了游戏的快乐。\n\n我记起冒着着霖霖细雨，踩踏着青翠欲滴的草地的奔跑的我；在夏日烈焰的炙烤下，快过像水纹样波澜起伏的土峦的我；在洒水车刚洒过水的岁的路面，穿过蒸腾的热气的我；在七月流火微醺夏风吹拂下匆匆回家的我；跑过紫藤花架，阳光在身上投下斑驳光栅的我......\n\n蓦然回首，方才讶然惊觉，原来那一路上不灭的风景，比游戏更加撩动我的心弦。年少的滋味，非等到时过境迁，才能品味出其中的淡淡伤感。\n\n确定要删除吗？\n\n犹豫再三，点击取消。\n\n我从这些年的游戏生涯中得到了什么呢？有友谊，有装备，有等级。可这些全都是虚拟的幻象啊，电源一关，一切烟消云散。\n\n而现实中的我收获了在及格线上徘徊的分数，度数日渐加深的眼镜，人情淡薄的交际圈...... 我想那段时间里，别人眼中的我一定是这样，一个人坐着发呆，眼神迟滞，莫名其妙的大笑，苍白而怪异。我将视线从显示屏移向窗外，窗外是一片如火残夕，燃烧在天际。\n\n确定要删除吗\n\n我平静地点击确定。\n\n我的心里只剩下灰烬。\n\n《哈利波特》里邓布利多所豢养的凤凰在死亡时会留下一片灰烬，但若仔细看去，便仿佛看到有伟大的生命不甘于灰烬的桎梏，跃跃欲出，当今炫目的光剑最终刺破黑暗，与过去告别的凤凰便重生了。\n\n我这时心里有一种无法言语的情感：与过去的我挥手作别，如果非要用一个词形容，我想是重生。\n\n（忍不住解释一下，这篇不是写的我自己……）\n\n--------------------------------------------------------------------------------\n\n最近看了秒数五厘米，初看颇有不屑，事后却生出不少感触。\n\n樱花是我相对而言最不喜欢的一部，讲两青梅竹马的孩子，分离后女主角在车站等她的小男友的故事，俗到烂透的情节，但值得称道的是导演对细节的渲染，对人物内心的刻画，细腻的笔触勾勒出双方忐忑的心。在那个大雪纷飞的冬日夜晚，不能按时赴约的心一定是无奈而焦灼的吧。然而最触动我的却是那种孤独。\n\n一辆新干线的火车，孤寂地行驶在夜雪风飘的荒原里，没有灯光，没有人烟，没有声嚣。漫天的风雪迷离了窗外的风景，能看到的只是白茫茫的一片。仿佛是白色世界里银装素裹的旅人，无心去欣赏那片银装素裹，只想着快些找到雪夜里那另一片孤寂焦灼的心，身后留下一长串迷途的脚步，而前方未知的道路何其漫长。\n\n第二话宇航员是我最喜欢的一部。讲述一个女孩暗恋我们虽未成年，但生活经历早已是他早早成熟的男主角的故事。很容易相信，散发着成熟男人魅力的男主角远野，是很容易赚得女孩子芳心的，鹤立鸡群的味道吧。但远野明白一切，他此时和我一样有着远大的理想，十分清楚女孩子是他生命中的匆匆过客，因此虽然对女孩很好，可心里并没有任何特殊的波澜。我挺为那女孩惋惜，如此执着的精神，为何要陷入这种注定没有结果的泥潭呢？女子耽兮，不可说也！\n\n但我很高兴的是，以上只是我对他们情感的一丝感慨，我并没有纠缠于其中，我只是冷静的分析，最打动我的是，是两人所具有的那种精神。\n\n就像片中人类发射火箭，远野有那种渴望走向更高处的精神，还有 never give up 的执着毅力。虽然影片中并没有详写他为理想付出过多少，但有着相似经历的我很容易就能看见他洒下的每一滴不为人知的汗水。女孩那种与海浪搏击的精神也使我感动。\n\n我记得他们坐在路边的堤上仰望星空，紫色瑰丽的银河缓缓流转，星簇明灭震撼人心，起起落落的飞机光斑像是人类驶向未来的太空港。风轻轻地吹过他们的衣襟，吹过身边青涩的麦田，青色的麦芒翻滚出碧绿的浪。\n\n青涩得一如远野成熟却未熟透的心。\n\n秒数五厘米，讲述远野有坚定到疲乏到迷茫的故事。这却与我更相近了。\n\n秒数五厘米，无论是飘零美丽的樱花在风中的纷舞逝去—— 一如随幻彩时光匆匆逝去的年少单纯美好；抑或十年时间的天各一方，山高水长，在地球的两极孤独地守望。无论哪一个都是一段动人的故事。\n\n--------------------------------------------------------------------------------\n\n千寻初入结界之时，油屋门前是异样的苍凉与繁华：苍凉是因为没有人声鼎沸的生机；繁华是因为那些个性鲜明的妖怪们分明表示着另一个迥异于人界的喧闹。\n\n同样是模仿人类的“冠盖满京华”的喧嚣，喧嚣的背后又何尝不是寄托了一种妖怪们无奈的寂寞呢？日漫《萤火之森》中与此相似的场景，夏日祭是妖怪们一年一度宣泄压抑了的自己的盛典，不过在《萤火之森》中，导演也许并未想到表达这么多，这些琐思，更可能是我牵强附会的推断吧：\n\n明明不是人类，却想要模仿人类；明明相爱，两人却注定永生无法在一起。想用触碰，感受对方身体温暖的刹那，却也是无可挽回的别离之始。\n\n在这里，白龙与与《萤火之森》的女主 -- 萤倒是有相似之处，白龙帮助千寻治好父母之时，却也正是标志着别离的最终到来。但是千寻要远比萤幸福，千寻不仅可以感受到恋人手心的暖意，更能用心体味到恋人对自己的呵护（这其实是每个女孩子都梦想着的吧）。我是男人，我喜欢白龙，我愿与他做一个交心知己、君子之交淡如水的朋友；若是女生的话，我想会爱上白龙吧。\n\n在《千与千寻》之中，结局离别的悲伤明显被弱化，因为这部电影动漫是橘黄色的温暖治愈系，这也是宫崎骏的一贯风格呢。\n\n何况，白龙与千寻还在分离之时，许下了一定再次相见的约定。\n\n钱婆婆的小木屋，充溢着木黄、微红的暖系色调，让人回忆起大雪纷飞的夜晚，在外婆家火炉前安然逗趣的静谧时光，这里是像家一样的避风港湾，小千也正是在这里重新拿回了千寻的名字。“绿蚁新醅酒，红泥暖火炉”，在宫崎骏的作品中，我分明看到了唐国诗圣的意境。\n\n心之懵懂的少女初次在心中萌生出对某人朦胧的爱的依恋。千寻在这个异世界里飞速地成长着，从一开始的不敢下悬崖边的楼梯，到后来为了救治白龙而冒险走过半空中晃荡的空管道；从影片伊始的嫌弃微微凋谢的花瓣，到后来为了救回父母而忍辱负重（这个词用的好严重）清洗腐烂神身上无人愿意忍受的淤泥：与其说是因为她对白龙的爱情的激励，我却更愿意相信这是千寻这个女孩内心中来自坚强与上进的力量。\n\n她的善良，与无脸男的邂逅，看得我心中一悸。原本是素不相识的人，无脸男在与千寻相识前，连存在都只是若有若无被人忽视的幽魂，却会特意为它半掩着门，好方便它进来休憩。这是何等的单纯善良与美好。我愿与这样的人相伴，但是我另一方面却又害怕与这样美好的人相伴，我害怕自己的接触都是对这样一种美好的亵渎。无脸男是怎样的低微卑贱者，但在千寻心里，仍有为弱者永远保留的位置。这样高贵的善良，我愿撷取其一段香。这样的女主几乎是理想人格的化身，或许在这样的性格之中又寄托着宫崎骏的某种内心思恋也说不定呢。\n\n犹记得白龙牵手带她走过繁密花丛的那个场景，画面色泽明丽，音乐活泼轻快。风拂花甸，花圃中荡开淡绿色的波纹，这又是谁的伊甸园。空气中漂浮和弦，幻听般想起久石让的《夏天》。\n（未完）\n\n--------------------------------------------------------------------------------\n\n那快门定格的一瞬\n青春浓缩成记忆的年轮\n\n--------------------------------------------------------------------------------\n\n（上面所有这些文字写成于高中的不同时期，但并未按照时间顺序整理。因为是记忆碎片，故名为《记忆碎片》。以上。）\n","slug":"记忆碎片","published":1,"updated":"2019-03-07T01:47:54.397Z","layout":"post","photos":[],"link":"","_id":"cjucbl8nl001lb9fss8s3vzqv","content":"<p>这其实是一种还原，根据大自然中的几条简单法则，还原出一个诡谲复杂的世界。根据一个人的性格，推测出他经历过的事件，他会怎么想。这便是所谓的看穿一个人。但这仍然只是一种猜测，既然是猜测，便不免带上主观色彩。众人往往习惯用自己的经历去推测别人的，可正如世界上没有两片相同的树叶，所以往往失之偏颇。</p>\n<p>所以我突然诞生了一个想法，这世界之大，远比小说电影精彩，总会有一两个人会有与你于某一事上相同的经历，那么集全人类的英灵之力，别说还原一个人，还原一个时代也非难事。可这样也有局限，应为全人类仍是人类社会，虽尚未知是否有外星生命的存在，可很容易想象，他们的一切简直是人类无法想象的：因为只需几条简单规则的稍微改变，这宇宙，面目全非。</p>\n<p>一切都有其局限性，规则之外的规则无限逼近于真理，却永远无法穷尽，小圆被大圆所环，环环都趋向无穷，象征无知的周长却愈加扩大。</p>\n<p>从牛顿经典力学到量子力学再到胚胎中的弦理论，都是人类对宇宙还原的进化，这进化生生不息，永无所止，在可预见的未来里，还将不断进化下去。</p>\n<a id=\"more\"></a>\n<hr>\n<p>索隆是个真男人，剑士背后中剑是耻辱，所以自知不敌而萌生敬服的求死之意的他，放下手中剑，张开双臂，用胸膛来迎接世上最强剑客的一击，这是何等的气魄。</p>\n<p>因战败而产生的心中的伤痛，远非那斜贯胸膛的伤口所能比拟的。</p>\n<p>我张开双臂，将自己最柔软的内心暴露出来。</p>\n<p>期待着，那痛快淋漓的一击。</p>\n<hr>\n<p>为了买一本小众的杂志，我绕道经过那里，时值新雨后，空气清新润泽，天空中风涌云动，一片令人欣喜的亮灰色 – 维多利亚灰。我在桥上，巡天遥看天上的浓墨山水，灰色的雨云泅出一条遒劲墨龙，急掠徐行，狂舞闪旋，深浅墨云是狂龙的锦鳞云簇，苍龙渐逝，幻做巍巍昆仑，玄浓黑重，磅礴压城 ，岩崩石摧，闪电剑气如虹，斩出一道天之痕，绯红色辉光层层渐染，彩彻区明。</p>\n<hr>\n<p>感于傲慢与偏见</p>\n<p>他携晨曦破风而来。<br>他一袭褐色的长长风衣，一路飒沓如流星，衣衫猎猎鼓动，仿佛天地聆听到了她的心声，雾霭悄然散去，浓重夜华被拂晓之光刺破斗篷，朦胧的风景霎时间明晰起来。<br>本无心睡眠漫步于郊野的她，伤心黯然的心绪萦绕回转。突然之间，她看见了他 – 达西先生，与曙光同现天地之间。<br>达西先生给人的第一印象是傲慢，不苟言笑得近乎古板，而他的朋友，宾利先生却仿佛正好与他是两个极端，亲切的微笑，幽默诙谐的谈吐，金色头发灿烂若春日拂煦的阳光。而伊丽莎白则像欢乐活泼的小鹿，聪敏自尊而彬彬有礼。<br>犹记得那次舞会，迸溅的乐符下暗流汹涌。他与她忘我的共舞，世界仿佛只有他们两人存在。来往的言语间，圆润的礼辞下机锋暗藏，语言却未成为打开两人心扉的钥匙，误会与隔阂却将两人推得更远了。<br>记得那个风雨如注的清晨，伊丽莎白独自穿过平野，天地间晦暗一色，灰色的雨珠纵横，把世界切割的支离破碎。跨过泥泞，忘记了疲惫，她只是默默地赶路，凌乱发丝下红润脸庞反而因此鲜活动人。</p>\n<p>灰色的雨，搅乱了她的结愁千绪。<br>（这篇不仅很乱，而且没写完）</p>\n<hr>\n<p>夏日幽敻的天空下，漂浮着和煦的云朵，绿枝扶疏，水面上涌动着炫目的金色流光。那个世界，群星闪烁着我的旋律，风息咏叹这我的歌声，曙光谱写我的五彩欢悦音符，青绿之海演绎我的浮生若泡沫聚散。仿佛乔治马丁笔下冰与火刀与剑的传奇史诗，仿佛托尔金笔下奇幻诡谲波澜壮阔的中土世界。</p>\n<hr>\n<p>蝉的絮语，聒碎了整个夏之纪年。</p>\n<hr>\n<p>我强忍着泪滴，我从不知恶之花还可以开得如此旺盛，它盘曲扭结，肆无忌惮地朝我张扬摇摆，如同梵高的向日葵，但他是至纯至暗的黑色，黑色的花瓣下涌动着无限的恶意与畅快。它是正吸食着我的悲伤，并以此作为养料么？</p>\n<hr>\n<p>雨夜，风无声地流动在身畔。天空浓墨渲染，路灯发出光怪陆离赤橙青紫的朦胧光晕。</p>\n<p>一切都是朦胧的，如雨水打湿了风景，唯黑色如影随形的清晰。虽然路人匆匆从身边走过，但我觉得这世界上只剩下了我，我的灵魂融入这雨夜，雨是黑暗凝成的如水夜色。路人们的面孔模糊而苍白，唯我 — 寒冷与黑暗之子，享受着冻雨冷风带给我的快乐。</p>\n<p>我见雨夜多妩媚，料雨夜见我应如是。雨夜是我的伊人款款，雨丝是她湿漉漉的吻，她用夜色凝成的树脂捕获了我，我陶醉在她寒冷的琥珀里了。</p>\n<hr>\n<p>昨夜骤雨，今晨曙光熹微朝云绮丽，彤云如火如焚如染如屠燃烧晨曦，天痕湛蓝霞光绯红形成鲜明对比。（韵脚）</p>\n<hr>\n<p>月光静默<br>雨水活泼<br>灵感在纸上落墨<br>流星划过天阔<br>新光盈盈闪烁<br>碧海听鲛人诉说（韵脚）</p>\n<hr>\n<p>将年华写在卷帙之上，待迟暮之年垂垂老矣，将其熊熊燃烧，将自己曾经的欢笑荣辱付之一炬，看过去的精致岁月在空气的波动中飞旋散逸，终归尘土，便在这时光篝火边纵心任性尽情狂欢。</p>\n<hr>\n<p>半月杀阵</p>\n<p>碧海凝成无际的蓝田，蓝田之上盛放数擎耀眼洁白风帆，船舷犁出雪白浪花与波浪精致回旋，船队结成半月形的船阵静静向前方驶去，月心之处仿若闪烁荧星数点。<br>月牙咬合，杀机陡现，美丽之下是致命残酷的危险，战舰的枪弹如枪火玫瑰华丽绽放，将群星送归碧天。<br>月牙儿轻轻荡漾，好像杀机从未出现。（韵脚）</p>\n<p>有感于大国崛起中的一幅画面，碧海蓝天白帆，英国与西班牙竞逐大西洋霸主，海战，我当时惊艳于破坏与毁灭竟也可如此唯美，故为此作。</p>\n<hr>\n<p>jon，我爱你。呵，爱上一个小说中的人物，还是个男人。</p>\n<p>因为他仿佛就是我，就是我的兄弟。都只是小人物，被命运与时代的洪流所裹挟，在这无法抗中的潮流中苦苦挣扎。</p>\n<p>我们都只是小人物，jon 却承载了多得多的苦痛。</p>\n<p>私生子的身份，stark 家的血脉，守夜人的誓言，旁人的鄙视，青绿之地的律法，变色龙的误会，黑衫军的责任……</p>\n<p>与我同龄的他经历了太多的苦痛：他想同命运抗争，违誓的痛苦又让他备受煎熬；年纪轻轻就成了黑衣人的领袖，日日在虎狼之中周旋……</p>\n<p>据说在卷五，我最爱的兄弟，jon，死了。</p>\n<p>不知为何内心很平静，Jon，若火吻不能让你复生，你便去 Heaven 寻你的火吻而生吧。</p>\n<hr>\n<p>当夜魔张开了蓝青色翅膀，横绝天际自西而东地翱翔，当金星率先在浓稠的黑暗中述说着宇宙的旋律，当充斥天地的淡金色阳光如冰块般缓缓融化 — 孤独与寂寥便空气般地弥散到了世界的每个角落。</p>\n<p>I am the universe。群山万壑孕吐我的风息，宇宙间永恒的黑暗是我无孔不入的孤寂，黑暗中我的思绪穿越光年纵横星际。</p>\n<p>银河倒泻，光阴逆转，我站在记忆之潮的浪底，看海面上风暴肆掠，波涛汹涌澎湃，但是海底这片寒冷的水域，却仿佛自洪荒诞生之初便从未有过扰动。琉璃色的海水如横亘万丈的厚重蓝色玻璃覆压在身上。</p>\n<p>我的记忆之海，那奇异的微笑，甜蜜的悲哀，难诉的悲怆，巅峰时的狂喜，逆境之中的苦痛，承浴星光的斗志，森林般茂盛的自信：记忆的潮水浸渍我心，最终化作宇宙间永恒的黑暗寒冷与孤寂。</p>\n<hr>\n<p>自今日接了你的电话，心里便一直惴惴不安着。</p>\n<p>我在害怕沉默，而话机两端连接的，却是无限的难堪的沉默。我的心像冰风雪覆了无声息的峡谷，坚硬寒冷的冰层，层层相压，谷底的我早已不堪重负。</p>\n<p>众人的期许，自己的希冀，背负的责任，沉甸甸的理想，一件一件不再给我带来动力，而是化为巨大的压力。而我能做的，只有像一只可怜的文蛤，将内心处在外壳的保护之下，沉默着。</p>\n<p>而我最害怕的，则是你对我充满信心的眼眸。</p>\n<p>你可知道，于重重压力之下，任何细微的颓唐失意，均会被害怕失败的恐惧的心无限放大，风声鹤唳草木皆兵。我便会开始怀疑自己所做的是否正确，是否因为过去的每一步都是错误，将我推至今日境地。</p>\n<p>听见你的声音，我甚至都不想用强颜欢笑来伪装出一个强大的自己，而是任由沉默向你暴露出我柔软脆弱的内心。</p>\n<p>你问我可有想对你说的话，我悲哀地笑着：“没有。”</p>\n<p>就这么，伤害了你。</p>\n<hr>\n<p>神游物外，一任思绪天马行空在瑰紫寒荒的星云尘埃。</p>\n<p>我一时之间为我的卑微渺小悲伤的泫然欲泣。</p>\n<p>宇宙星空广博伟大绚烂，而我不过是一粒转瞬即逝的尘埃。</p>\n<hr>\n<p>午夜，夜深人静，唯有我昏黄的台灯一灯如豆。</p>\n<p>倦了，揉了揉眼，放下那本记述着史诗的长卷。</p>\n<p>我起身，准备打开我紧锁的房门去倒一杯水。行至门前，抬手方欲开门，却忽然呆住了。</p>\n<p>我迷失了，我不知道自己为何在这样一个地方，为何我叫苏，不叫那书中的主角 jon snow，我迷失了现实与虚幻的界限。</p>\n<p>我很快冷静下来，我告诫自己，虽然不知道为什么我是苏，可我的确就叫苏，我正控制着这具身体。我正在一个被称作现实的世界，而不是书中那个刀与剑，冰与火的世界。</p>\n<p>为什么？</p>\n<p>我向往地望着前面那扇门。门，连接着两个一直与未知的世界，好奇心总是让人向往未知。</p>\n<p>门外，是一个全新的领域，是一个新奇的世界。人类的好奇心赋予了门神秘的美感。当形容进入一个新领域时，往往也形容成打开一扇门。</p>\n<p>也许，在这扇门外，我就是 jon snow ，也可能是罗辑……</p>\n<p>我用颤抖的手缓缓打开门，将自己消融在无边无际的黑暗里。</p>\n<hr>\n<p>我于孤寂之中看山看水看天，<br>却仍免不了失望失落失眠。（韵脚）</p>\n<hr>\n<p>无论在怎样黑暗蒙昧的年代，总有一些人像星星般璀璨，在那空茫无际的黑暗之中，他们的智慧、执着、勇气反而在这黑色天幕之上愈加凸显出来，他们的光芒由点连线再由线成片，最终开启一个时代的曙光。无论曾经是怎样的黑暗困顿过，一个时代有了他们就不寂寞。一个时代也进了他们而焕发出自己独特而迷人的光彩，青史之上，不再空白，他们挥洒英华，留下浓墨重彩。</p>\n<hr>\n<p>离高考 11 天，我的心突然到了一种干净空明澄澈的境界。凭栏而倚，眺望着三年间伴我走过的熟悉景致，breeze 轻拂发际，天空蔚蓝而宁静，紫藤花架上泛开繁复的波涛，园树蓊郁而葱翠，欢笑的少女漫步林荫小径。11 天，11 天后我便要与这一切说再见了，不是怀念，而是一种说不出来的情感，仿佛微笑着挥手，同三年间每一天的每一个自己告别，我的微笑明亮而温暖。我亲爱的朋友，明日就将各奔东西，三年的欢笑与泪水愿你铭记。</p>\n<p>永别了，一去不回的自己。</p>\n<hr>\n<p>你走了，我又多了一个思念的人。</p>\n<p>今天，我开始不可抑制的思念你。我想起你在我下场时一路小跑从我手中拿过球拍；想起我们并肩作战时洒下的汗滴；想起那个温暖冬日你喋喋不休的絮语；想起我们在潮湿的雨季聆听树叶间落下的嘀嗒乐曲；想起我们一同走过操场，白色的鸟滑翔在蔚蓝的天际；想起那个晴朗夏日，阳光在我们脸上投下斑驳的罅隙；想起我在失落时，你给予我的温暖慰藉。</p>\n<p>叫我如何忘了你，我残存的思绪，如碧落海般翻涌不息，你在我的心底，潋滟出执着潮汐。</p>\n<p>可如今你已远去，只在我心里留下永恒回忆。</p>\n<p>飞鸟也已远去，天空是否铭记？（韵脚）</p>\n<hr>\n<p>今日我又遇见了他，他言语间流露出来的消极厌世思想，让我微微有些心惊。但毕竟分离太久了，我对他的情感也不如多年前的深厚了。</p>\n<p>我问他有朋友么？因为他此刻的语气，都像极了我于逆境之中孤独一人，茕茕孑立，黯然神伤，仿佛精神荒漠中的疲惫的落单路人。</p>\n<p>回答是不出我所料的，没有。我立刻就理解了他内心的痛苦，因为在某些方面，他与我实在太像了，我只消把自己的经历套在他身上便可以了。</p>\n<p>其实像我和他这样的人，真的是害怕没有朋友，或者理解自己的人的。我并不害怕孤独，因为孤独是一个人的盛大狂欢，我可以任由我的思想天马行空，挥斥天际，纵横六合，汪洋恣肆。从宇宙的光年深处，到量子的微观秘密；从电影的华丽映像，到青灯黄卷间的呢喃自语。我陶醉于我头脑间的世界，这个世界让我思索、苦闷、微笑、狂喜，我从我的思索之中探寻到了我存在的意义。（我思故我在）</p>\n<p>所以我并不害怕孤独，我害怕寂寞。寂寞意味着没有交流。朋友其实是一个灵魂，两个身体。在精神的荒漠里，两个旅人将奇迹般的相遇，他们该是多么狂喜和珍惜这来之不易的友谊。从那个世界里，我找寻到了许多奇异有趣的瑰宝，我也已经迫不及待地想和那个值得交流的友人，分享自己。我们两人的思想在这美妙的交流中，碰撞出了更多灵感的火花，这火花又温暖了彼此。（韵脚）</p>\n<p>伯乐来之不易，可在我们思想的世界里，我们就是幸福的伯牙与子期。淡如水的友谊可期，而《真心为你》（EVA）的朋友难觅。所以，你知道我有多么思念你。（韵脚）我想，一两个情投意合的朋友欢颜一聚，流觞曲水间畅叙幽情，这于我而言，便是人生见最大的爽心乐事了吧。</p>\n<hr>\n<p>结交了一个新朋友，我是因为他十分像我那旧友而接近他的。结果他不仅长得像，而且举手投足间的习惯动作都极为相似，让我不得不在感到造物神奇的同时感谢上帝。</p>\n<p>而且据他说，他看到我时，也觉得有一种莫名的亲切感，我不确定他说这话是为了逗我笑还是发自内心，但我觉得很高兴。</p>\n<p>我和他方才说了几句话就嬉笑打闹的如认识多年的好友，他用手捂住嘴用我熟悉的姿势笑着，而我则弯下腰轻轻打他的肩。</p>\n<p>旧日的光景如水般荡漾眼前，但见欢笑的岁月盈然可掬，我……</p>\n<p>我不敢闭眼，怕眼前的一切都是幻觉。</p>\n<hr>\n<p>一艘孤独但并不寂寞的长桅木杆帆船骄傲地行驶在碧落之南，海皇深碧的眸里漾着我的白帆，远及苍穹的粼粼细波微蓝，身边有飞翔的海鸥作伴，军舰鸟忠诚的伫立桅杆，眺望远方腾起的飞鱼滑翔在小岛之泮， 微垂的椰子树落实在金沙的海滩，蝴蝶鱼翩跹在堡礁之岸，绚烂的珊瑚五色石染，浅黛的贝壳如星河流转，翠绿的大海是奇异的鲛人之番。（韵脚）</p>\n<hr>\n<p>嘴角那抹微笑<br>不羁带着轻佻<br>神游物外惹人恼<br>看窗外悠悠云水谣<br>竹影分绿与芭蕉<br>枫岚催红了樱桃<br>流光逝水黯然憔<br>白驹过隙把人抛<br>寂寞万古豪<br>然而我却不知道<br>岁月不老<br>即使在最黑暗的今朝<br>透过那朦胧的雾气<br>也会脱颖出你的微笑<br>你那不羁的微笑<br>在三生石和我的心上<br>又重重地刻下一刀（韵脚）</p>\n<p>关于这个，开头两句算是我妙手而得的句子，我想表达对游人的思念，友人在我心中的印象就像窗外的景物一样美好，但随即我的情绪便逐渐黯淡下来，毕竟逝者如斯，我和朋友已经分离多年。<br>于是我很容易便想到了：“流光容易把人抛，红了……”此句有写景又有对逝水流年的叹息，然后写景完结后，我便写了无限惆怅的情绪。<br>但不能总是沉湎于伤怀，便有了下一句的峰回路转。纵时光匆匆，但我对你的永恒思念不老。你为我盛开的笑靥，即使在最黑暗的年代也是不灭的风景。而且这句与开头相呼应，构成一种回环往复。但是我不知道他们说我写景写的突兀，可能是我水平不够吧，但我的确是费了一番心思的。</p>\n<hr>\n<p>当我阅读科幻的时候，由于背景的设定往往是一个文明的兴盛与覆灭，一个时代的兴衰荣辱，一个种族的进化与消亡…… 简而言之，宏大。</p>\n<p>正是这种宏大给了我一个不同的视角，让我得以站在一个全新的高度来思考观察问题，超越我个人、民族、国家、种族的狭隘的偏见。沉浸在那个世界里，我感知我倾听我思考，那真的是一种很美妙的境界。</p>\n<p>但我毕竟是人类，我是如此的热爱和痛恨这个种族，爱自不必多说，恨则是一种复杂的情感：恨铁不成钢的恨，彻底绝望，痛入骨髓的恨……</p>\n<p>我喜欢仰望那片瑰丽而璀璨的星空，繁星注视下的我是多么渺小。我希望我的思绪能飞越光年穿透星际，然而浩瀚伟大的宇宙，总是以它的博大一次次提醒我的渺小。我想，我向往大海和星空应该是出于同一原因的吧。</p>\n<p>我曾在空无一人的野外嘹望星空，每一个莹莹小点就是一只眼睛（观察者？），耳畔传入激越的虫鸣，微风拂过发际，带走我的热量，带来丝丝清凉。这就是地球大气磅礴的生态系统，无机与有机共同作用的结果。它循环，它稳定，它是如此的美丽，如此的生生不息，每一个生命，每一缕清风，每一米阳光，每一个无序的相互作用，却将宇宙整体带入高度的有序，他们竟是如此地作为宇宙的一个碎片，来抵御宇宙的敌人 — 熵增么。</p>\n<p>为什么我仰望星空，因为我渴望回归；为什么人们要攀登山峰，因为山就在那里。（语出霍金，及《群星，我的归宿》）</p>\n<p>也许那直刺寰宇苍穹的利剑，就是人类的伟大吧。</p>\n<hr>\n<p>确定要删除吗？</p>\n<p>点击取消。</p>\n<p>第一次与这款网游邂逅是因为表哥，他正全身心的投入其中，这款游戏画面精美，人物卡通可爱，而那时童年的我木讷内向，生活中几乎没有朋友，所以这游戏很快就令我迷上了。游戏中的伙伴们往往仗义而慷慨，我觉得他们比现实中的同学更让我体味到了什么是友情，现实中一无是处的我却是游戏中不可或缺的一份子。</p>\n<p>我仍然记得那一天在他们的帮助下，我转职成为圣骑士时，内心充满的神圣的使命感，我发誓要向他们帮助我一样，帮助游戏中每一个比我弱小的人。我知道这听起来很可笑，可我当时幼小的心里的确是这么想的。</p>\n<p>确定要删除吗？</p>\n<p>颤抖着点击取消。</p>\n<p>我试着回忆童年与此有关的记忆，但奇怪的是我唯一能想起来是，我在那个夏日奔跑着的身影。暑假父母不在家，我便可以整天坐在电脑桌前了，唯一的例外是三餐得到姨妈家去吃，为了不挤占游戏时间，我都是跑着去的。那种在奔跑中的期待和喜悦似乎远远超过了游戏的快乐。</p>\n<p>我记起冒着着霖霖细雨，踩踏着青翠欲滴的草地的奔跑的我；在夏日烈焰的炙烤下，快过像水纹样波澜起伏的土峦的我；在洒水车刚洒过水的岁的路面，穿过蒸腾的热气的我；在七月流火微醺夏风吹拂下匆匆回家的我；跑过紫藤花架，阳光在身上投下斑驳光栅的我……</p>\n<p>蓦然回首，方才讶然惊觉，原来那一路上不灭的风景，比游戏更加撩动我的心弦。年少的滋味，非等到时过境迁，才能品味出其中的淡淡伤感。</p>\n<p>确定要删除吗？</p>\n<p>犹豫再三，点击取消。</p>\n<p>我从这些年的游戏生涯中得到了什么呢？有友谊，有装备，有等级。可这些全都是虚拟的幻象啊，电源一关，一切烟消云散。</p>\n<p>而现实中的我收获了在及格线上徘徊的分数，度数日渐加深的眼镜，人情淡薄的交际圈…… 我想那段时间里，别人眼中的我一定是这样，一个人坐着发呆，眼神迟滞，莫名其妙的大笑，苍白而怪异。我将视线从显示屏移向窗外，窗外是一片如火残夕，燃烧在天际。</p>\n<p>确定要删除吗</p>\n<p>我平静地点击确定。</p>\n<p>我的心里只剩下灰烬。</p>\n<p>《哈利波特》里邓布利多所豢养的凤凰在死亡时会留下一片灰烬，但若仔细看去，便仿佛看到有伟大的生命不甘于灰烬的桎梏，跃跃欲出，当今炫目的光剑最终刺破黑暗，与过去告别的凤凰便重生了。</p>\n<p>我这时心里有一种无法言语的情感：与过去的我挥手作别，如果非要用一个词形容，我想是重生。</p>\n<p>（忍不住解释一下，这篇不是写的我自己……）</p>\n<hr>\n<p>最近看了秒数五厘米，初看颇有不屑，事后却生出不少感触。</p>\n<p>樱花是我相对而言最不喜欢的一部，讲两青梅竹马的孩子，分离后女主角在车站等她的小男友的故事，俗到烂透的情节，但值得称道的是导演对细节的渲染，对人物内心的刻画，细腻的笔触勾勒出双方忐忑的心。在那个大雪纷飞的冬日夜晚，不能按时赴约的心一定是无奈而焦灼的吧。然而最触动我的却是那种孤独。</p>\n<p>一辆新干线的火车，孤寂地行驶在夜雪风飘的荒原里，没有灯光，没有人烟，没有声嚣。漫天的风雪迷离了窗外的风景，能看到的只是白茫茫的一片。仿佛是白色世界里银装素裹的旅人，无心去欣赏那片银装素裹，只想着快些找到雪夜里那另一片孤寂焦灼的心，身后留下一长串迷途的脚步，而前方未知的道路何其漫长。</p>\n<p>第二话宇航员是我最喜欢的一部。讲述一个女孩暗恋我们虽未成年，但生活经历早已是他早早成熟的男主角的故事。很容易相信，散发着成熟男人魅力的男主角远野，是很容易赚得女孩子芳心的，鹤立鸡群的味道吧。但远野明白一切，他此时和我一样有着远大的理想，十分清楚女孩子是他生命中的匆匆过客，因此虽然对女孩很好，可心里并没有任何特殊的波澜。我挺为那女孩惋惜，如此执着的精神，为何要陷入这种注定没有结果的泥潭呢？女子耽兮，不可说也！</p>\n<p>但我很高兴的是，以上只是我对他们情感的一丝感慨，我并没有纠缠于其中，我只是冷静的分析，最打动我的是，是两人所具有的那种精神。</p>\n<p>就像片中人类发射火箭，远野有那种渴望走向更高处的精神，还有 never give up 的执着毅力。虽然影片中并没有详写他为理想付出过多少，但有着相似经历的我很容易就能看见他洒下的每一滴不为人知的汗水。女孩那种与海浪搏击的精神也使我感动。</p>\n<p>我记得他们坐在路边的堤上仰望星空，紫色瑰丽的银河缓缓流转，星簇明灭震撼人心，起起落落的飞机光斑像是人类驶向未来的太空港。风轻轻地吹过他们的衣襟，吹过身边青涩的麦田，青色的麦芒翻滚出碧绿的浪。</p>\n<p>青涩得一如远野成熟却未熟透的心。</p>\n<p>秒数五厘米，讲述远野有坚定到疲乏到迷茫的故事。这却与我更相近了。</p>\n<p>秒数五厘米，无论是飘零美丽的樱花在风中的纷舞逝去—— 一如随幻彩时光匆匆逝去的年少单纯美好；抑或十年时间的天各一方，山高水长，在地球的两极孤独地守望。无论哪一个都是一段动人的故事。</p>\n<hr>\n<p>千寻初入结界之时，油屋门前是异样的苍凉与繁华：苍凉是因为没有人声鼎沸的生机；繁华是因为那些个性鲜明的妖怪们分明表示着另一个迥异于人界的喧闹。</p>\n<p>同样是模仿人类的“冠盖满京华”的喧嚣，喧嚣的背后又何尝不是寄托了一种妖怪们无奈的寂寞呢？日漫《萤火之森》中与此相似的场景，夏日祭是妖怪们一年一度宣泄压抑了的自己的盛典，不过在《萤火之森》中，导演也许并未想到表达这么多，这些琐思，更可能是我牵强附会的推断吧：</p>\n<p>明明不是人类，却想要模仿人类；明明相爱，两人却注定永生无法在一起。想用触碰，感受对方身体温暖的刹那，却也是无可挽回的别离之始。</p>\n<p>在这里，白龙与与《萤火之森》的女主 – 萤倒是有相似之处，白龙帮助千寻治好父母之时，却也正是标志着别离的最终到来。但是千寻要远比萤幸福，千寻不仅可以感受到恋人手心的暖意，更能用心体味到恋人对自己的呵护（这其实是每个女孩子都梦想着的吧）。我是男人，我喜欢白龙，我愿与他做一个交心知己、君子之交淡如水的朋友；若是女生的话，我想会爱上白龙吧。</p>\n<p>在《千与千寻》之中，结局离别的悲伤明显被弱化，因为这部电影动漫是橘黄色的温暖治愈系，这也是宫崎骏的一贯风格呢。</p>\n<p>何况，白龙与千寻还在分离之时，许下了一定再次相见的约定。</p>\n<p>钱婆婆的小木屋，充溢着木黄、微红的暖系色调，让人回忆起大雪纷飞的夜晚，在外婆家火炉前安然逗趣的静谧时光，这里是像家一样的避风港湾，小千也正是在这里重新拿回了千寻的名字。“绿蚁新醅酒，红泥暖火炉”，在宫崎骏的作品中，我分明看到了唐国诗圣的意境。</p>\n<p>心之懵懂的少女初次在心中萌生出对某人朦胧的爱的依恋。千寻在这个异世界里飞速地成长着，从一开始的不敢下悬崖边的楼梯，到后来为了救治白龙而冒险走过半空中晃荡的空管道；从影片伊始的嫌弃微微凋谢的花瓣，到后来为了救回父母而忍辱负重（这个词用的好严重）清洗腐烂神身上无人愿意忍受的淤泥：与其说是因为她对白龙的爱情的激励，我却更愿意相信这是千寻这个女孩内心中来自坚强与上进的力量。</p>\n<p>她的善良，与无脸男的邂逅，看得我心中一悸。原本是素不相识的人，无脸男在与千寻相识前，连存在都只是若有若无被人忽视的幽魂，却会特意为它半掩着门，好方便它进来休憩。这是何等的单纯善良与美好。我愿与这样的人相伴，但是我另一方面却又害怕与这样美好的人相伴，我害怕自己的接触都是对这样一种美好的亵渎。无脸男是怎样的低微卑贱者，但在千寻心里，仍有为弱者永远保留的位置。这样高贵的善良，我愿撷取其一段香。这样的女主几乎是理想人格的化身，或许在这样的性格之中又寄托着宫崎骏的某种内心思恋也说不定呢。</p>\n<p>犹记得白龙牵手带她走过繁密花丛的那个场景，画面色泽明丽，音乐活泼轻快。风拂花甸，花圃中荡开淡绿色的波纹，这又是谁的伊甸园。空气中漂浮和弦，幻听般想起久石让的《夏天》。<br>（未完）</p>\n<hr>\n<p>那快门定格的一瞬<br>青春浓缩成记忆的年轮</p>\n<hr>\n<p>（上面所有这些文字写成于高中的不同时期，但并未按照时间顺序整理。因为是记忆碎片，故名为《记忆碎片》。以上。）</p>\n","site":{"data":{}},"excerpt":"<p>这其实是一种还原，根据大自然中的几条简单法则，还原出一个诡谲复杂的世界。根据一个人的性格，推测出他经历过的事件，他会怎么想。这便是所谓的看穿一个人。但这仍然只是一种猜测，既然是猜测，便不免带上主观色彩。众人往往习惯用自己的经历去推测别人的，可正如世界上没有两片相同的树叶，所以往往失之偏颇。</p>\n<p>所以我突然诞生了一个想法，这世界之大，远比小说电影精彩，总会有一两个人会有与你于某一事上相同的经历，那么集全人类的英灵之力，别说还原一个人，还原一个时代也非难事。可这样也有局限，应为全人类仍是人类社会，虽尚未知是否有外星生命的存在，可很容易想象，他们的一切简直是人类无法想象的：因为只需几条简单规则的稍微改变，这宇宙，面目全非。</p>\n<p>一切都有其局限性，规则之外的规则无限逼近于真理，却永远无法穷尽，小圆被大圆所环，环环都趋向无穷，象征无知的周长却愈加扩大。</p>\n<p>从牛顿经典力学到量子力学再到胚胎中的弦理论，都是人类对宇宙还原的进化，这进化生生不息，永无所止，在可预见的未来里，还将不断进化下去。</p>","more":"<hr>\n<p>索隆是个真男人，剑士背后中剑是耻辱，所以自知不敌而萌生敬服的求死之意的他，放下手中剑，张开双臂，用胸膛来迎接世上最强剑客的一击，这是何等的气魄。</p>\n<p>因战败而产生的心中的伤痛，远非那斜贯胸膛的伤口所能比拟的。</p>\n<p>我张开双臂，将自己最柔软的内心暴露出来。</p>\n<p>期待着，那痛快淋漓的一击。</p>\n<hr>\n<p>为了买一本小众的杂志，我绕道经过那里，时值新雨后，空气清新润泽，天空中风涌云动，一片令人欣喜的亮灰色 – 维多利亚灰。我在桥上，巡天遥看天上的浓墨山水，灰色的雨云泅出一条遒劲墨龙，急掠徐行，狂舞闪旋，深浅墨云是狂龙的锦鳞云簇，苍龙渐逝，幻做巍巍昆仑，玄浓黑重，磅礴压城 ，岩崩石摧，闪电剑气如虹，斩出一道天之痕，绯红色辉光层层渐染，彩彻区明。</p>\n<hr>\n<p>感于傲慢与偏见</p>\n<p>他携晨曦破风而来。<br>他一袭褐色的长长风衣，一路飒沓如流星，衣衫猎猎鼓动，仿佛天地聆听到了她的心声，雾霭悄然散去，浓重夜华被拂晓之光刺破斗篷，朦胧的风景霎时间明晰起来。<br>本无心睡眠漫步于郊野的她，伤心黯然的心绪萦绕回转。突然之间，她看见了他 – 达西先生，与曙光同现天地之间。<br>达西先生给人的第一印象是傲慢，不苟言笑得近乎古板，而他的朋友，宾利先生却仿佛正好与他是两个极端，亲切的微笑，幽默诙谐的谈吐，金色头发灿烂若春日拂煦的阳光。而伊丽莎白则像欢乐活泼的小鹿，聪敏自尊而彬彬有礼。<br>犹记得那次舞会，迸溅的乐符下暗流汹涌。他与她忘我的共舞，世界仿佛只有他们两人存在。来往的言语间，圆润的礼辞下机锋暗藏，语言却未成为打开两人心扉的钥匙，误会与隔阂却将两人推得更远了。<br>记得那个风雨如注的清晨，伊丽莎白独自穿过平野，天地间晦暗一色，灰色的雨珠纵横，把世界切割的支离破碎。跨过泥泞，忘记了疲惫，她只是默默地赶路，凌乱发丝下红润脸庞反而因此鲜活动人。</p>\n<p>灰色的雨，搅乱了她的结愁千绪。<br>（这篇不仅很乱，而且没写完）</p>\n<hr>\n<p>夏日幽敻的天空下，漂浮着和煦的云朵，绿枝扶疏，水面上涌动着炫目的金色流光。那个世界，群星闪烁着我的旋律，风息咏叹这我的歌声，曙光谱写我的五彩欢悦音符，青绿之海演绎我的浮生若泡沫聚散。仿佛乔治马丁笔下冰与火刀与剑的传奇史诗，仿佛托尔金笔下奇幻诡谲波澜壮阔的中土世界。</p>\n<hr>\n<p>蝉的絮语，聒碎了整个夏之纪年。</p>\n<hr>\n<p>我强忍着泪滴，我从不知恶之花还可以开得如此旺盛，它盘曲扭结，肆无忌惮地朝我张扬摇摆，如同梵高的向日葵，但他是至纯至暗的黑色，黑色的花瓣下涌动着无限的恶意与畅快。它是正吸食着我的悲伤，并以此作为养料么？</p>\n<hr>\n<p>雨夜，风无声地流动在身畔。天空浓墨渲染，路灯发出光怪陆离赤橙青紫的朦胧光晕。</p>\n<p>一切都是朦胧的，如雨水打湿了风景，唯黑色如影随形的清晰。虽然路人匆匆从身边走过，但我觉得这世界上只剩下了我，我的灵魂融入这雨夜，雨是黑暗凝成的如水夜色。路人们的面孔模糊而苍白，唯我 — 寒冷与黑暗之子，享受着冻雨冷风带给我的快乐。</p>\n<p>我见雨夜多妩媚，料雨夜见我应如是。雨夜是我的伊人款款，雨丝是她湿漉漉的吻，她用夜色凝成的树脂捕获了我，我陶醉在她寒冷的琥珀里了。</p>\n<hr>\n<p>昨夜骤雨，今晨曙光熹微朝云绮丽，彤云如火如焚如染如屠燃烧晨曦，天痕湛蓝霞光绯红形成鲜明对比。（韵脚）</p>\n<hr>\n<p>月光静默<br>雨水活泼<br>灵感在纸上落墨<br>流星划过天阔<br>新光盈盈闪烁<br>碧海听鲛人诉说（韵脚）</p>\n<hr>\n<p>将年华写在卷帙之上，待迟暮之年垂垂老矣，将其熊熊燃烧，将自己曾经的欢笑荣辱付之一炬，看过去的精致岁月在空气的波动中飞旋散逸，终归尘土，便在这时光篝火边纵心任性尽情狂欢。</p>\n<hr>\n<p>半月杀阵</p>\n<p>碧海凝成无际的蓝田，蓝田之上盛放数擎耀眼洁白风帆，船舷犁出雪白浪花与波浪精致回旋，船队结成半月形的船阵静静向前方驶去，月心之处仿若闪烁荧星数点。<br>月牙咬合，杀机陡现，美丽之下是致命残酷的危险，战舰的枪弹如枪火玫瑰华丽绽放，将群星送归碧天。<br>月牙儿轻轻荡漾，好像杀机从未出现。（韵脚）</p>\n<p>有感于大国崛起中的一幅画面，碧海蓝天白帆，英国与西班牙竞逐大西洋霸主，海战，我当时惊艳于破坏与毁灭竟也可如此唯美，故为此作。</p>\n<hr>\n<p>jon，我爱你。呵，爱上一个小说中的人物，还是个男人。</p>\n<p>因为他仿佛就是我，就是我的兄弟。都只是小人物，被命运与时代的洪流所裹挟，在这无法抗中的潮流中苦苦挣扎。</p>\n<p>我们都只是小人物，jon 却承载了多得多的苦痛。</p>\n<p>私生子的身份，stark 家的血脉，守夜人的誓言，旁人的鄙视，青绿之地的律法，变色龙的误会，黑衫军的责任……</p>\n<p>与我同龄的他经历了太多的苦痛：他想同命运抗争，违誓的痛苦又让他备受煎熬；年纪轻轻就成了黑衣人的领袖，日日在虎狼之中周旋……</p>\n<p>据说在卷五，我最爱的兄弟，jon，死了。</p>\n<p>不知为何内心很平静，Jon，若火吻不能让你复生，你便去 Heaven 寻你的火吻而生吧。</p>\n<hr>\n<p>当夜魔张开了蓝青色翅膀，横绝天际自西而东地翱翔，当金星率先在浓稠的黑暗中述说着宇宙的旋律，当充斥天地的淡金色阳光如冰块般缓缓融化 — 孤独与寂寥便空气般地弥散到了世界的每个角落。</p>\n<p>I am the universe。群山万壑孕吐我的风息，宇宙间永恒的黑暗是我无孔不入的孤寂，黑暗中我的思绪穿越光年纵横星际。</p>\n<p>银河倒泻，光阴逆转，我站在记忆之潮的浪底，看海面上风暴肆掠，波涛汹涌澎湃，但是海底这片寒冷的水域，却仿佛自洪荒诞生之初便从未有过扰动。琉璃色的海水如横亘万丈的厚重蓝色玻璃覆压在身上。</p>\n<p>我的记忆之海，那奇异的微笑，甜蜜的悲哀，难诉的悲怆，巅峰时的狂喜，逆境之中的苦痛，承浴星光的斗志，森林般茂盛的自信：记忆的潮水浸渍我心，最终化作宇宙间永恒的黑暗寒冷与孤寂。</p>\n<hr>\n<p>自今日接了你的电话，心里便一直惴惴不安着。</p>\n<p>我在害怕沉默，而话机两端连接的，却是无限的难堪的沉默。我的心像冰风雪覆了无声息的峡谷，坚硬寒冷的冰层，层层相压，谷底的我早已不堪重负。</p>\n<p>众人的期许，自己的希冀，背负的责任，沉甸甸的理想，一件一件不再给我带来动力，而是化为巨大的压力。而我能做的，只有像一只可怜的文蛤，将内心处在外壳的保护之下，沉默着。</p>\n<p>而我最害怕的，则是你对我充满信心的眼眸。</p>\n<p>你可知道，于重重压力之下，任何细微的颓唐失意，均会被害怕失败的恐惧的心无限放大，风声鹤唳草木皆兵。我便会开始怀疑自己所做的是否正确，是否因为过去的每一步都是错误，将我推至今日境地。</p>\n<p>听见你的声音，我甚至都不想用强颜欢笑来伪装出一个强大的自己，而是任由沉默向你暴露出我柔软脆弱的内心。</p>\n<p>你问我可有想对你说的话，我悲哀地笑着：“没有。”</p>\n<p>就这么，伤害了你。</p>\n<hr>\n<p>神游物外，一任思绪天马行空在瑰紫寒荒的星云尘埃。</p>\n<p>我一时之间为我的卑微渺小悲伤的泫然欲泣。</p>\n<p>宇宙星空广博伟大绚烂，而我不过是一粒转瞬即逝的尘埃。</p>\n<hr>\n<p>午夜，夜深人静，唯有我昏黄的台灯一灯如豆。</p>\n<p>倦了，揉了揉眼，放下那本记述着史诗的长卷。</p>\n<p>我起身，准备打开我紧锁的房门去倒一杯水。行至门前，抬手方欲开门，却忽然呆住了。</p>\n<p>我迷失了，我不知道自己为何在这样一个地方，为何我叫苏，不叫那书中的主角 jon snow，我迷失了现实与虚幻的界限。</p>\n<p>我很快冷静下来，我告诫自己，虽然不知道为什么我是苏，可我的确就叫苏，我正控制着这具身体。我正在一个被称作现实的世界，而不是书中那个刀与剑，冰与火的世界。</p>\n<p>为什么？</p>\n<p>我向往地望着前面那扇门。门，连接着两个一直与未知的世界，好奇心总是让人向往未知。</p>\n<p>门外，是一个全新的领域，是一个新奇的世界。人类的好奇心赋予了门神秘的美感。当形容进入一个新领域时，往往也形容成打开一扇门。</p>\n<p>也许，在这扇门外，我就是 jon snow ，也可能是罗辑……</p>\n<p>我用颤抖的手缓缓打开门，将自己消融在无边无际的黑暗里。</p>\n<hr>\n<p>我于孤寂之中看山看水看天，<br>却仍免不了失望失落失眠。（韵脚）</p>\n<hr>\n<p>无论在怎样黑暗蒙昧的年代，总有一些人像星星般璀璨，在那空茫无际的黑暗之中，他们的智慧、执着、勇气反而在这黑色天幕之上愈加凸显出来，他们的光芒由点连线再由线成片，最终开启一个时代的曙光。无论曾经是怎样的黑暗困顿过，一个时代有了他们就不寂寞。一个时代也进了他们而焕发出自己独特而迷人的光彩，青史之上，不再空白，他们挥洒英华，留下浓墨重彩。</p>\n<hr>\n<p>离高考 11 天，我的心突然到了一种干净空明澄澈的境界。凭栏而倚，眺望着三年间伴我走过的熟悉景致，breeze 轻拂发际，天空蔚蓝而宁静，紫藤花架上泛开繁复的波涛，园树蓊郁而葱翠，欢笑的少女漫步林荫小径。11 天，11 天后我便要与这一切说再见了，不是怀念，而是一种说不出来的情感，仿佛微笑着挥手，同三年间每一天的每一个自己告别，我的微笑明亮而温暖。我亲爱的朋友，明日就将各奔东西，三年的欢笑与泪水愿你铭记。</p>\n<p>永别了，一去不回的自己。</p>\n<hr>\n<p>你走了，我又多了一个思念的人。</p>\n<p>今天，我开始不可抑制的思念你。我想起你在我下场时一路小跑从我手中拿过球拍；想起我们并肩作战时洒下的汗滴；想起那个温暖冬日你喋喋不休的絮语；想起我们在潮湿的雨季聆听树叶间落下的嘀嗒乐曲；想起我们一同走过操场，白色的鸟滑翔在蔚蓝的天际；想起那个晴朗夏日，阳光在我们脸上投下斑驳的罅隙；想起我在失落时，你给予我的温暖慰藉。</p>\n<p>叫我如何忘了你，我残存的思绪，如碧落海般翻涌不息，你在我的心底，潋滟出执着潮汐。</p>\n<p>可如今你已远去，只在我心里留下永恒回忆。</p>\n<p>飞鸟也已远去，天空是否铭记？（韵脚）</p>\n<hr>\n<p>今日我又遇见了他，他言语间流露出来的消极厌世思想，让我微微有些心惊。但毕竟分离太久了，我对他的情感也不如多年前的深厚了。</p>\n<p>我问他有朋友么？因为他此刻的语气，都像极了我于逆境之中孤独一人，茕茕孑立，黯然神伤，仿佛精神荒漠中的疲惫的落单路人。</p>\n<p>回答是不出我所料的，没有。我立刻就理解了他内心的痛苦，因为在某些方面，他与我实在太像了，我只消把自己的经历套在他身上便可以了。</p>\n<p>其实像我和他这样的人，真的是害怕没有朋友，或者理解自己的人的。我并不害怕孤独，因为孤独是一个人的盛大狂欢，我可以任由我的思想天马行空，挥斥天际，纵横六合，汪洋恣肆。从宇宙的光年深处，到量子的微观秘密；从电影的华丽映像，到青灯黄卷间的呢喃自语。我陶醉于我头脑间的世界，这个世界让我思索、苦闷、微笑、狂喜，我从我的思索之中探寻到了我存在的意义。（我思故我在）</p>\n<p>所以我并不害怕孤独，我害怕寂寞。寂寞意味着没有交流。朋友其实是一个灵魂，两个身体。在精神的荒漠里，两个旅人将奇迹般的相遇，他们该是多么狂喜和珍惜这来之不易的友谊。从那个世界里，我找寻到了许多奇异有趣的瑰宝，我也已经迫不及待地想和那个值得交流的友人，分享自己。我们两人的思想在这美妙的交流中，碰撞出了更多灵感的火花，这火花又温暖了彼此。（韵脚）</p>\n<p>伯乐来之不易，可在我们思想的世界里，我们就是幸福的伯牙与子期。淡如水的友谊可期，而《真心为你》（EVA）的朋友难觅。所以，你知道我有多么思念你。（韵脚）我想，一两个情投意合的朋友欢颜一聚，流觞曲水间畅叙幽情，这于我而言，便是人生见最大的爽心乐事了吧。</p>\n<hr>\n<p>结交了一个新朋友，我是因为他十分像我那旧友而接近他的。结果他不仅长得像，而且举手投足间的习惯动作都极为相似，让我不得不在感到造物神奇的同时感谢上帝。</p>\n<p>而且据他说，他看到我时，也觉得有一种莫名的亲切感，我不确定他说这话是为了逗我笑还是发自内心，但我觉得很高兴。</p>\n<p>我和他方才说了几句话就嬉笑打闹的如认识多年的好友，他用手捂住嘴用我熟悉的姿势笑着，而我则弯下腰轻轻打他的肩。</p>\n<p>旧日的光景如水般荡漾眼前，但见欢笑的岁月盈然可掬，我……</p>\n<p>我不敢闭眼，怕眼前的一切都是幻觉。</p>\n<hr>\n<p>一艘孤独但并不寂寞的长桅木杆帆船骄傲地行驶在碧落之南，海皇深碧的眸里漾着我的白帆，远及苍穹的粼粼细波微蓝，身边有飞翔的海鸥作伴，军舰鸟忠诚的伫立桅杆，眺望远方腾起的飞鱼滑翔在小岛之泮， 微垂的椰子树落实在金沙的海滩，蝴蝶鱼翩跹在堡礁之岸，绚烂的珊瑚五色石染，浅黛的贝壳如星河流转，翠绿的大海是奇异的鲛人之番。（韵脚）</p>\n<hr>\n<p>嘴角那抹微笑<br>不羁带着轻佻<br>神游物外惹人恼<br>看窗外悠悠云水谣<br>竹影分绿与芭蕉<br>枫岚催红了樱桃<br>流光逝水黯然憔<br>白驹过隙把人抛<br>寂寞万古豪<br>然而我却不知道<br>岁月不老<br>即使在最黑暗的今朝<br>透过那朦胧的雾气<br>也会脱颖出你的微笑<br>你那不羁的微笑<br>在三生石和我的心上<br>又重重地刻下一刀（韵脚）</p>\n<p>关于这个，开头两句算是我妙手而得的句子，我想表达对游人的思念，友人在我心中的印象就像窗外的景物一样美好，但随即我的情绪便逐渐黯淡下来，毕竟逝者如斯，我和朋友已经分离多年。<br>于是我很容易便想到了：“流光容易把人抛，红了……”此句有写景又有对逝水流年的叹息，然后写景完结后，我便写了无限惆怅的情绪。<br>但不能总是沉湎于伤怀，便有了下一句的峰回路转。纵时光匆匆，但我对你的永恒思念不老。你为我盛开的笑靥，即使在最黑暗的年代也是不灭的风景。而且这句与开头相呼应，构成一种回环往复。但是我不知道他们说我写景写的突兀，可能是我水平不够吧，但我的确是费了一番心思的。</p>\n<hr>\n<p>当我阅读科幻的时候，由于背景的设定往往是一个文明的兴盛与覆灭，一个时代的兴衰荣辱，一个种族的进化与消亡…… 简而言之，宏大。</p>\n<p>正是这种宏大给了我一个不同的视角，让我得以站在一个全新的高度来思考观察问题，超越我个人、民族、国家、种族的狭隘的偏见。沉浸在那个世界里，我感知我倾听我思考，那真的是一种很美妙的境界。</p>\n<p>但我毕竟是人类，我是如此的热爱和痛恨这个种族，爱自不必多说，恨则是一种复杂的情感：恨铁不成钢的恨，彻底绝望，痛入骨髓的恨……</p>\n<p>我喜欢仰望那片瑰丽而璀璨的星空，繁星注视下的我是多么渺小。我希望我的思绪能飞越光年穿透星际，然而浩瀚伟大的宇宙，总是以它的博大一次次提醒我的渺小。我想，我向往大海和星空应该是出于同一原因的吧。</p>\n<p>我曾在空无一人的野外嘹望星空，每一个莹莹小点就是一只眼睛（观察者？），耳畔传入激越的虫鸣，微风拂过发际，带走我的热量，带来丝丝清凉。这就是地球大气磅礴的生态系统，无机与有机共同作用的结果。它循环，它稳定，它是如此的美丽，如此的生生不息，每一个生命，每一缕清风，每一米阳光，每一个无序的相互作用，却将宇宙整体带入高度的有序，他们竟是如此地作为宇宙的一个碎片，来抵御宇宙的敌人 — 熵增么。</p>\n<p>为什么我仰望星空，因为我渴望回归；为什么人们要攀登山峰，因为山就在那里。（语出霍金，及《群星，我的归宿》）</p>\n<p>也许那直刺寰宇苍穹的利剑，就是人类的伟大吧。</p>\n<hr>\n<p>确定要删除吗？</p>\n<p>点击取消。</p>\n<p>第一次与这款网游邂逅是因为表哥，他正全身心的投入其中，这款游戏画面精美，人物卡通可爱，而那时童年的我木讷内向，生活中几乎没有朋友，所以这游戏很快就令我迷上了。游戏中的伙伴们往往仗义而慷慨，我觉得他们比现实中的同学更让我体味到了什么是友情，现实中一无是处的我却是游戏中不可或缺的一份子。</p>\n<p>我仍然记得那一天在他们的帮助下，我转职成为圣骑士时，内心充满的神圣的使命感，我发誓要向他们帮助我一样，帮助游戏中每一个比我弱小的人。我知道这听起来很可笑，可我当时幼小的心里的确是这么想的。</p>\n<p>确定要删除吗？</p>\n<p>颤抖着点击取消。</p>\n<p>我试着回忆童年与此有关的记忆，但奇怪的是我唯一能想起来是，我在那个夏日奔跑着的身影。暑假父母不在家，我便可以整天坐在电脑桌前了，唯一的例外是三餐得到姨妈家去吃，为了不挤占游戏时间，我都是跑着去的。那种在奔跑中的期待和喜悦似乎远远超过了游戏的快乐。</p>\n<p>我记起冒着着霖霖细雨，踩踏着青翠欲滴的草地的奔跑的我；在夏日烈焰的炙烤下，快过像水纹样波澜起伏的土峦的我；在洒水车刚洒过水的岁的路面，穿过蒸腾的热气的我；在七月流火微醺夏风吹拂下匆匆回家的我；跑过紫藤花架，阳光在身上投下斑驳光栅的我……</p>\n<p>蓦然回首，方才讶然惊觉，原来那一路上不灭的风景，比游戏更加撩动我的心弦。年少的滋味，非等到时过境迁，才能品味出其中的淡淡伤感。</p>\n<p>确定要删除吗？</p>\n<p>犹豫再三，点击取消。</p>\n<p>我从这些年的游戏生涯中得到了什么呢？有友谊，有装备，有等级。可这些全都是虚拟的幻象啊，电源一关，一切烟消云散。</p>\n<p>而现实中的我收获了在及格线上徘徊的分数，度数日渐加深的眼镜，人情淡薄的交际圈…… 我想那段时间里，别人眼中的我一定是这样，一个人坐着发呆，眼神迟滞，莫名其妙的大笑，苍白而怪异。我将视线从显示屏移向窗外，窗外是一片如火残夕，燃烧在天际。</p>\n<p>确定要删除吗</p>\n<p>我平静地点击确定。</p>\n<p>我的心里只剩下灰烬。</p>\n<p>《哈利波特》里邓布利多所豢养的凤凰在死亡时会留下一片灰烬，但若仔细看去，便仿佛看到有伟大的生命不甘于灰烬的桎梏，跃跃欲出，当今炫目的光剑最终刺破黑暗，与过去告别的凤凰便重生了。</p>\n<p>我这时心里有一种无法言语的情感：与过去的我挥手作别，如果非要用一个词形容，我想是重生。</p>\n<p>（忍不住解释一下，这篇不是写的我自己……）</p>\n<hr>\n<p>最近看了秒数五厘米，初看颇有不屑，事后却生出不少感触。</p>\n<p>樱花是我相对而言最不喜欢的一部，讲两青梅竹马的孩子，分离后女主角在车站等她的小男友的故事，俗到烂透的情节，但值得称道的是导演对细节的渲染，对人物内心的刻画，细腻的笔触勾勒出双方忐忑的心。在那个大雪纷飞的冬日夜晚，不能按时赴约的心一定是无奈而焦灼的吧。然而最触动我的却是那种孤独。</p>\n<p>一辆新干线的火车，孤寂地行驶在夜雪风飘的荒原里，没有灯光，没有人烟，没有声嚣。漫天的风雪迷离了窗外的风景，能看到的只是白茫茫的一片。仿佛是白色世界里银装素裹的旅人，无心去欣赏那片银装素裹，只想着快些找到雪夜里那另一片孤寂焦灼的心，身后留下一长串迷途的脚步，而前方未知的道路何其漫长。</p>\n<p>第二话宇航员是我最喜欢的一部。讲述一个女孩暗恋我们虽未成年，但生活经历早已是他早早成熟的男主角的故事。很容易相信，散发着成熟男人魅力的男主角远野，是很容易赚得女孩子芳心的，鹤立鸡群的味道吧。但远野明白一切，他此时和我一样有着远大的理想，十分清楚女孩子是他生命中的匆匆过客，因此虽然对女孩很好，可心里并没有任何特殊的波澜。我挺为那女孩惋惜，如此执着的精神，为何要陷入这种注定没有结果的泥潭呢？女子耽兮，不可说也！</p>\n<p>但我很高兴的是，以上只是我对他们情感的一丝感慨，我并没有纠缠于其中，我只是冷静的分析，最打动我的是，是两人所具有的那种精神。</p>\n<p>就像片中人类发射火箭，远野有那种渴望走向更高处的精神，还有 never give up 的执着毅力。虽然影片中并没有详写他为理想付出过多少，但有着相似经历的我很容易就能看见他洒下的每一滴不为人知的汗水。女孩那种与海浪搏击的精神也使我感动。</p>\n<p>我记得他们坐在路边的堤上仰望星空，紫色瑰丽的银河缓缓流转，星簇明灭震撼人心，起起落落的飞机光斑像是人类驶向未来的太空港。风轻轻地吹过他们的衣襟，吹过身边青涩的麦田，青色的麦芒翻滚出碧绿的浪。</p>\n<p>青涩得一如远野成熟却未熟透的心。</p>\n<p>秒数五厘米，讲述远野有坚定到疲乏到迷茫的故事。这却与我更相近了。</p>\n<p>秒数五厘米，无论是飘零美丽的樱花在风中的纷舞逝去—— 一如随幻彩时光匆匆逝去的年少单纯美好；抑或十年时间的天各一方，山高水长，在地球的两极孤独地守望。无论哪一个都是一段动人的故事。</p>\n<hr>\n<p>千寻初入结界之时，油屋门前是异样的苍凉与繁华：苍凉是因为没有人声鼎沸的生机；繁华是因为那些个性鲜明的妖怪们分明表示着另一个迥异于人界的喧闹。</p>\n<p>同样是模仿人类的“冠盖满京华”的喧嚣，喧嚣的背后又何尝不是寄托了一种妖怪们无奈的寂寞呢？日漫《萤火之森》中与此相似的场景，夏日祭是妖怪们一年一度宣泄压抑了的自己的盛典，不过在《萤火之森》中，导演也许并未想到表达这么多，这些琐思，更可能是我牵强附会的推断吧：</p>\n<p>明明不是人类，却想要模仿人类；明明相爱，两人却注定永生无法在一起。想用触碰，感受对方身体温暖的刹那，却也是无可挽回的别离之始。</p>\n<p>在这里，白龙与与《萤火之森》的女主 – 萤倒是有相似之处，白龙帮助千寻治好父母之时，却也正是标志着别离的最终到来。但是千寻要远比萤幸福，千寻不仅可以感受到恋人手心的暖意，更能用心体味到恋人对自己的呵护（这其实是每个女孩子都梦想着的吧）。我是男人，我喜欢白龙，我愿与他做一个交心知己、君子之交淡如水的朋友；若是女生的话，我想会爱上白龙吧。</p>\n<p>在《千与千寻》之中，结局离别的悲伤明显被弱化，因为这部电影动漫是橘黄色的温暖治愈系，这也是宫崎骏的一贯风格呢。</p>\n<p>何况，白龙与千寻还在分离之时，许下了一定再次相见的约定。</p>\n<p>钱婆婆的小木屋，充溢着木黄、微红的暖系色调，让人回忆起大雪纷飞的夜晚，在外婆家火炉前安然逗趣的静谧时光，这里是像家一样的避风港湾，小千也正是在这里重新拿回了千寻的名字。“绿蚁新醅酒，红泥暖火炉”，在宫崎骏的作品中，我分明看到了唐国诗圣的意境。</p>\n<p>心之懵懂的少女初次在心中萌生出对某人朦胧的爱的依恋。千寻在这个异世界里飞速地成长着，从一开始的不敢下悬崖边的楼梯，到后来为了救治白龙而冒险走过半空中晃荡的空管道；从影片伊始的嫌弃微微凋谢的花瓣，到后来为了救回父母而忍辱负重（这个词用的好严重）清洗腐烂神身上无人愿意忍受的淤泥：与其说是因为她对白龙的爱情的激励，我却更愿意相信这是千寻这个女孩内心中来自坚强与上进的力量。</p>\n<p>她的善良，与无脸男的邂逅，看得我心中一悸。原本是素不相识的人，无脸男在与千寻相识前，连存在都只是若有若无被人忽视的幽魂，却会特意为它半掩着门，好方便它进来休憩。这是何等的单纯善良与美好。我愿与这样的人相伴，但是我另一方面却又害怕与这样美好的人相伴，我害怕自己的接触都是对这样一种美好的亵渎。无脸男是怎样的低微卑贱者，但在千寻心里，仍有为弱者永远保留的位置。这样高贵的善良，我愿撷取其一段香。这样的女主几乎是理想人格的化身，或许在这样的性格之中又寄托着宫崎骏的某种内心思恋也说不定呢。</p>\n<p>犹记得白龙牵手带她走过繁密花丛的那个场景，画面色泽明丽，音乐活泼轻快。风拂花甸，花圃中荡开淡绿色的波纹，这又是谁的伊甸园。空气中漂浮和弦，幻听般想起久石让的《夏天》。<br>（未完）</p>\n<hr>\n<p>那快门定格的一瞬<br>青春浓缩成记忆的年轮</p>\n<hr>\n<p>（上面所有这些文字写成于高中的不同时期，但并未按照时间顺序整理。因为是记忆碎片，故名为《记忆碎片》。以上。）</p>"}],"PostAsset":[{"_id":"source/_posts/How-to-crack-synergy/synergy_active_window.png","slug":"synergy_active_window.png","post":"cjucbl8ek0005b9fs7gsb5mhs","modified":0,"renderable":0},{"_id":"source/_posts/Inside-Docker-images-and-layers/Content_Addressable_Image.png","slug":"Content_Addressable_Image.png","post":"cjucbl8l20010b9fsmzqdcd65","modified":0,"renderable":0},{"_id":"source/_posts/Inside-Docker-images-and-layers/Historical_Image.png","slug":"Historical_Image.png","post":"cjucbl8l20010b9fsmzqdcd65","modified":0,"renderable":0},{"_id":"source/_posts/From-Impressionism-to-Steampunk/La_Gare_Saint-Lazare_-_Claude_Monet.jpg","slug":"La_Gare_Saint-Lazare_-_Claude_Monet.jpg","post":"cjucbl8ni001ib9fse5ebigmk","modified":0,"renderable":0},{"_id":"source/_posts/From-Impressionism-to-Steampunk/Rain_Steam_and_Speed_the_Great_Western_Railway.jpg","slug":"Rain_Steam_and_Speed_the_Great_Western_Railway.jpg","post":"cjucbl8ni001ib9fse5ebigmk","modified":0,"renderable":0},{"_id":"source/_posts/From-Impressionism-to-Steampunk/TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg","slug":"TS-23_Resonant_Circuit_Arc_Induction_Lance.jpg","post":"cjucbl8ni001ib9fse5ebigmk","modified":0,"renderable":0},{"_id":"source/_posts/From-Impressionism-to-Steampunk/The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg","slug":"The_Fighting_Téméraire_tugged_to_her_last_Berth_to_be_broken.jpg","post":"cjucbl8ni001ib9fse5ebigmk","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjucbl8e70000b9fscnvv4o4q","tag_id":"cjucbl8ei0004b9fsn69zrvhj","_id":"cjucbl8eo0009b9fsuhjcodu6"},{"post_id":"cjucbl8ee0002b9fs07jwhzps","tag_id":"cjucbl8en0008b9fsgw657qwh","_id":"cjucbl8ew000fb9fsmn9v4w9i"},{"post_id":"cjucbl8ee0002b9fs07jwhzps","tag_id":"cjucbl8es000cb9fswn0cxmup","_id":"cjucbl8ex000gb9fsgeoe06zu"},{"post_id":"cjucbl8ek0005b9fs7gsb5mhs","tag_id":"cjucbl8es000cb9fswn0cxmup","_id":"cjucbl8f0000jb9fsur5tq4hi"},{"post_id":"cjucbl8ek0005b9fs7gsb5mhs","tag_id":"cjucbl8ex000hb9fskzn07huy","_id":"cjucbl8f0000kb9fsf0lu313y"},{"post_id":"cjucbl8el0006b9fs72jvrhej","tag_id":"cjucbl8ez000ib9fs8jz3gu1n","_id":"cjucbl8f3000ob9fstou3nbrq"},{"post_id":"cjucbl8el0006b9fs72jvrhej","tag_id":"cjucbl8f0000lb9fsejvprhy6","_id":"cjucbl8f3000pb9fsh2715tw1"},{"post_id":"cjucbl8el0006b9fs72jvrhej","tag_id":"cjucbl8f1000mb9fsxhwdhan5","_id":"cjucbl8f4000rb9fsrapf7baq"},{"post_id":"cjucbl8em0007b9fsin736r8c","tag_id":"cjucbl8f2000nb9fsblth9frg","_id":"cjucbl8f5000tb9fshel0mwq8"},{"post_id":"cjucbl8em0007b9fsin736r8c","tag_id":"cjucbl8f4000qb9fs6qpuh0gx","_id":"cjucbl8f6000ub9fsve0y17n0"},{"post_id":"cjucbl8eo000ab9fshpqewlmq","tag_id":"cjucbl8f5000sb9fs9x6e6561","_id":"cjucbl8f6000wb9fsom80asrn"},{"post_id":"cjucbl8eq000bb9fsgej1tovs","tag_id":"cjucbl8f6000vb9fs8gdjeags","_id":"cjucbl8f8000yb9fsn17m4igj"},{"post_id":"cjucbl8es000db9fswcmsgym0","tag_id":"cjucbl8f7000xb9fsm9hcxb2o","_id":"cjucbl8fa000zb9fs3fpp7loi"},{"post_id":"cjucbl8l20010b9fsmzqdcd65","tag_id":"cjucbl8l60012b9fso360y7cj","_id":"cjucbl8la0017b9fs31xgg63c"},{"post_id":"cjucbl8l40011b9fsoyxcqypk","tag_id":"cjucbl8la0016b9fsh75dnegf","_id":"cjucbl8lb0019b9fs1rvk73hn"},{"post_id":"cjucbl8l80014b9fsqkaj3u1n","tag_id":"cjucbl8la0016b9fsh75dnegf","_id":"cjucbl8ld001cb9fs8vg5yi0h"},{"post_id":"cjucbl8l80014b9fsqkaj3u1n","tag_id":"cjucbl8lc001ab9fs8brkx0wh","_id":"cjucbl8ld001db9fsptdkdll5"},{"post_id":"cjucbl8l90015b9fssqga5v4g","tag_id":"cjucbl8la0016b9fsh75dnegf","_id":"cjucbl8le001fb9fs1ey10sfn"},{"post_id":"cjucbl8l90015b9fssqga5v4g","tag_id":"cjucbl8lc001ab9fs8brkx0wh","_id":"cjucbl8le001gb9fs9zm7zq7n"},{"post_id":"cjucbl8nk001jb9fsmjnty6ns","tag_id":"cjucbl8f7000xb9fsm9hcxb2o","_id":"cjucbl8np001mb9fsot7w1i2k"},{"post_id":"cjucbl8nl001lb9fss8s3vzqv","tag_id":"cjucbl8f7000xb9fsm9hcxb2o","_id":"cjucbl8nq001nb9fsq3j931pd"},{"post_id":"cjucbl8ni001ib9fse5ebigmk","tag_id":"cjucbl8nl001kb9fsdom6mz0f","_id":"cjucbl8nq001ob9fsi056yyie"}],"Tag":[{"name":"Vim","_id":"cjucbl8ei0004b9fsn69zrvhj"},{"name":"OpenVPN","_id":"cjucbl8en0008b9fsgw657qwh"},{"name":"crack","_id":"cjucbl8es000cb9fswn0cxmup"},{"name":"tips","_id":"cjucbl8ex000hb9fskzn07huy"},{"name":"vim","_id":"cjucbl8ez000ib9fs8jz3gu1n"},{"name":"zsh","_id":"cjucbl8f0000lb9fsejvprhy6"},{"name":"terminal","_id":"cjucbl8f1000mb9fsxhwdhan5"},{"name":"Linux","_id":"cjucbl8f2000nb9fsblth9frg"},{"name":"LFS","_id":"cjucbl8f4000qb9fs6qpuh0gx"},{"name":"LLVM","_id":"cjucbl8f5000sb9fs9x6e6561"},{"name":"tmux","_id":"cjucbl8f6000vb9fs8gdjeags"},{"name":"chaos","_id":"cjucbl8f7000xb9fsm9hcxb2o"},{"name":"Docker","_id":"cjucbl8l60012b9fso360y7cj"},{"name":"QEMU","_id":"cjucbl8la0016b9fsh75dnegf"},{"name":"Translation","_id":"cjucbl8lc001ab9fs8brkx0wh"},{"name":"art","_id":"cjucbl8nl001kb9fsdom6mz0f"}]}}